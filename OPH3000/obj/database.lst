   1                             		.file	"database.c"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   4                             		.local	_lErrorCode
   5                             		.comm	_lErrorCode,4,4
   6                             		.global	_GetDBErrorCode
   8                             	_GetDBErrorCode:
   9                             	.LFB0:
  10                             		.file 1 "SOURCES/database.c"
   1:SOURCES/database.c **** //
   2:SOURCES/database.c **** // database.c
   3:SOURCES/database.c **** //
   4:SOURCES/database.c **** // implementation of the database functions
   5:SOURCES/database.c **** //
   6:SOURCES/database.c **** // Martin Jansen
   7:SOURCES/database.c **** //
   8:SOURCES/database.c **** // For questions:
   9:SOURCES/database.c **** // email:	support@opticon.com
  10:SOURCES/database.c **** // web:		www.opticon.com
  11:SOURCES/database.c **** //
  12:SOURCES/database.c **** // 25/07/2005: 	Bug fix in DeleteRecord() function, The Total record counter was not decreased.
  13:SOURCES/database.c **** //
  14:SOURCES/database.c **** // 23/12/2005:	Added a reset of the database error code in the function IsFileOpen
  15:SOURCES/database.c **** //
  16:SOURCES/database.c **** 
  17:SOURCES/database.c **** 
  18:SOURCES/database.c **** #include <stdio.h>
  19:SOURCES/database.c **** #include <stdlib.h>
  20:SOURCES/database.c **** #include <string.h>
  21:SOURCES/database.c **** //#include <io.h>
  22:SOURCES/database.c **** 
  23:SOURCES/database.c **** 
  24:SOURCES/database.c **** #ifdef OPH1004
  25:SOURCES/database.c **** #include <unistd.h>
  26:SOURCES/database.c **** #include <fcntl.h>
  27:SOURCES/database.c **** #endif
  28:SOURCES/database.c **** #include "lib.h"
  29:SOURCES/database.c **** #ifdef OPH1004
  30:SOURCES/database.c **** #undef O_BINARY
  31:SOURCES/database.c **** #define O_BINARY 0x00
  32:SOURCES/database.c **** #endif
  33:SOURCES/database.c **** 
  34:SOURCES/database.c **** #include "database.h"
  35:SOURCES/database.c **** 
  36:SOURCES/database.c **** //
  37:SOURCES/database.c **** // lErrorCode holds the last error that occured in the database
  38:SOURCES/database.c **** //
  39:SOURCES/database.c **** static long lErrorCode;
  40:SOURCES/database.c **** 
  41:SOURCES/database.c **** 
  42:SOURCES/database.c **** long GetDBErrorCode( void )
  43:SOURCES/database.c **** {
  11                             		.loc 1 43 0
  12 0000 7E AA                   		push.l	r10
  13                             	.LCFI0:
  14 0002 7E A6                   		push.l	r6
  15                             	.LCFI1:
  16 0004 EF 06                   		mov.L	r0, r6
  17                             	.LCFI2:
  44:SOURCES/database.c **** 	return lErrorCode;
  18                             		.loc 1 44 0
  19 0006 FB A2 00 00 00 00       		mov.L	#_lErrorCode, r10
  20 000c EC AA                   		mov.L	[r10], r10
  45:SOURCES/database.c **** }
  21                             		.loc 1 45 0
  22 000e EF A1                   		mov.L	r10, r1
  23 0010 7E B6                   		pop	r6
  24 0012 7E BA                   		pop	r10
  25 0014 02                      		rts
  26                             	.LFE0:
  29                             	_IsFileOpen:
  30                             	.LFB1:
  46:SOURCES/database.c **** 
  47:SOURCES/database.c **** static int IsFileOpen( SDBFile *dbFile )
  48:SOURCES/database.c **** {
  31                             		.loc 1 48 0
  32 0015 7E AA                   		push.l	r10
  33                             	.LCFI3:
  34 0017 7E A6                   		push.l	r6
  35                             	.LCFI4:
  36 0019 71 06 FC                		add	#-4, r0, r6
  37                             	.LCFI5:
  38 001c EF 60                   		mov.L	r6, r0
  39                             	.LCFI6:
  40 001e E3 61                   		mov.L	r1, [r6]
  49:SOURCES/database.c **** 	lErrorCode = DB_OK;
  41                             		.loc 1 49 0
  42 0020 FB A2 00 00 00 00       		mov.L	#_lErrorCode, r10
  43 0026 F8 A6 00                		mov.L	#0, [r10]
  50:SOURCES/database.c **** 	return (dbFile->bOpen == TRUE)?TRUE:FALSE;
  44                             		.loc 1 50 0
  45 0029 EC 6A                   		mov.L	[r6], r10
  46 002b ED AA 04                		mov.L	16[r10], r10
  47 002e 61 1A                   		cmp	#1, r10
  48 0030 FC DB A0                		sceq.L	r10
  49 0033 5B AA                   		movu.B	r10, r10
  51:SOURCES/database.c **** }
  50                             		.loc 1 51 0
  51 0035 EF A1                   		mov.L	r10, r1
  52 0037 62 40                   		add	#4, r0
  53 0039 7E B6                   		pop	r6
  54 003b 7E BA                   		pop	r10
  55 003d 02                      		rts
  56                             	.LFE1:
  58                             		.global	_OpenDatabase
  60                             	_OpenDatabase:
  61                             	.LFB2:
  52:SOURCES/database.c **** 
  53:SOURCES/database.c **** int OpenDatabase( const char* filename, short recordsize, SDBFile *dbFile )
  54:SOURCES/database.c **** {
  62                             		.loc 1 54 0
  63 003e 6E 6C                   		pushm	r6-r12
  64                             	.LCFI7:
  65 0040 71 06 F0                		add	#-16, r0, r6
  66                             	.LCFI8:
  67 0043 71 60 F8                		add	#-8, r6, r0
  68                             	.LCFI9:
  69 0046 A0 69                   		mov.L	r1, 4[r6]
  70 0048 91 62                   		mov.W	r2, 8[r6]
  71 004a A0 EB                   		mov.L	r3, 12[r6]
  55:SOURCES/database.c **** 	long lfilesz;
  56:SOURCES/database.c **** 
  57:SOURCES/database.c **** 	if( IsFileOpen( dbFile ))
  72                             		.loc 1 57 0
  73 004c A8 E9                   		mov.L	12[r6], r1
  74 004e 39 C7 FF                		bsr	_IsFileOpen
  75 0051 EF 1A                   		mov.L	r1, r10
  76 0053 61 0A                   		cmp	#0, r10
  77 0055 20 10                   		beq	.L6
  58:SOURCES/database.c **** 	{
  59:SOURCES/database.c **** 		lErrorCode = DB_ERROR_ALREADY_OPEN;
  78                             		.loc 1 59 0
  79 0057 FB A2 00 00 00 00       		mov.L	#_lErrorCode, r10
  80 005d F8 A6 01                		mov.L	#1, [r10]
  60:SOURCES/database.c **** 		return FALSE;
  81                             		.loc 1 60 0
  82 0060 66 0A                   		mov.L	#0, r10
  83 0062 38 A4 00                		bra	.L7
  84                             	.L6:
  61:SOURCES/database.c **** 	}
  62:SOURCES/database.c **** 
  63:SOURCES/database.c **** 	if( (lfilesz = fsize( (char*)filename )) == -1L )
  85                             		.loc 1 63 0
  86 0065 A8 69                   		mov.L	4[r6], r1
  87 0067 05 00 00 00             		bsr	_fsize
  88 006b E3 61                   		mov.L	r1, [r6]
  89 006d EC 6A                   		mov.L	[r6], r10
  90 006f 75 0A FF                		cmp	#-1, r10
  91 0072 21 10                   		bne	.L8
  64:SOURCES/database.c **** 	{
  65:SOURCES/database.c **** 		lErrorCode = DB_ERROR_NOT_EXIST;
  92                             		.loc 1 65 0
  93 0074 FB A2 00 00 00 00       		mov.L	#_lErrorCode, r10
  94 007a F8 A6 04                		mov.L	#4, [r10]
  66:SOURCES/database.c **** 		return FALSE;
  95                             		.loc 1 66 0
  96 007d 66 0A                   		mov.L	#0, r10
  97 007f 38 87 00                		bra	.L7
  98                             	.L8:
  67:SOURCES/database.c **** 	}
  68:SOURCES/database.c **** 
  69:SOURCES/database.c **** 	if( (dbFile->fd = open( (char*)filename, O_RDWR | O_BINARY, 0x777 )) == -1 )
  99                             		.loc 1 69 0
 100 0082 3E 00 02                		mov.L	#2, [r0]
 101 0085 F9 0A 01 77 07          		mov.L	#0x777, 4[r0]
 102 008a A8 69                   		mov.L	4[r6], r1
 103 008c 05 00 00 00             		bsr	_open
 104 0090 EF 1B                   		mov.L	r1, r11
 105 0092 ED 6A 03                		mov.L	12[r6], r10
 106 0095 E7 AB 01                		mov.L	r11, 4[r10]
 107 0098 ED 6A 03                		mov.L	12[r6], r10
 108 009b ED AA 01                		mov.L	4[r10], r10
 109 009e 75 0A FF                		cmp	#-1, r10
 110 00a1 21 0F                   		bne	.L9
  70:SOURCES/database.c **** 	{
  71:SOURCES/database.c **** 		lErrorCode = DB_ERROR_OPEN;
 111                             		.loc 1 71 0
 112 00a3 FB A2 00 00 00 00       		mov.L	#_lErrorCode, r10
 113 00a9 F8 A6 02                		mov.L	#2, [r10]
  72:SOURCES/database.c **** 		return FALSE;
 114                             		.loc 1 72 0
 115 00ac 66 0A                   		mov.L	#0, r10
 116 00ae 2E 58                   		bra	.L7
 117                             	.L9:
  73:SOURCES/database.c **** 	}
  74:SOURCES/database.c **** 	dbFile->bOpen = TRUE;
 118                             		.loc 1 74 0
 119 00b0 ED 6A 03                		mov.L	12[r6], r10
 120 00b3 F9 A6 04 01             		mov.L	#1, 16[r10]
  75:SOURCES/database.c **** 	if( lfilesz % recordsize)
 121                             		.loc 1 75 0
 122 00b7 DD 6B 04                		mov.W	8[r6], r11
 123 00ba EC 6A                   		mov.L	[r6], r10
 124 00bc EF AC                   		mov.L	r10, r12
 125 00be FC 23 BC                		div	r11, r12
 126 00c1 4F CB                   		mul	r12, r11
 127 00c3 43 BA                   		sub	r11, r10
 128 00c5 61 0A                   		cmp	#0, r10
 129 00c7 20 15                   		beq	.L10
  76:SOURCES/database.c **** 	{
  77:SOURCES/database.c **** 		lErrorCode = DB_ERROR_RECORD_SIZE;
 130                             		.loc 1 77 0
 131 00c9 FB A2 00 00 00 00       		mov.L	#_lErrorCode, r10
 132 00cf F8 A6 10                		mov.L	#16, [r10]
  78:SOURCES/database.c **** 		CloseDatabase( dbFile );
 133                             		.loc 1 78 0
 134 00d2 A8 E9                   		mov.L	12[r6], r1
 135 00d4 05 00 00 00             		bsr	_CloseDatabase
  79:SOURCES/database.c **** 		return FALSE;
 136                             		.loc 1 79 0
 137 00d8 66 0A                   		mov.L	#0, r10
 138 00da 2E 2C                   		bra	.L7
 139                             	.L10:
  80:SOURCES/database.c **** 	}
  81:SOURCES/database.c **** 	dbFile->sRecSz = recordsize;
 140                             		.loc 1 81 0
 141 00dc ED 6A 03                		mov.L	12[r6], r10
 142 00df DD 6B 04                		mov.W	8[r6], r11
 143 00e2 D3 AB                   		mov.W	r11, [r10]
  82:SOURCES/database.c **** 	dbFile->lCurrRecord = lfilesz?0:-1L;
 144                             		.loc 1 82 0
 145 00e4 EC 6A                   		mov.L	[r6], r10
 146 00e6 61 0A                   		cmp	#0, r10
 147 00e8 14                      		beq	.L11
 148                             		.loc 1 82 0 is_stmt 0 discriminator 1
 149 00e9 66 0A                   		mov.L	#0, r10
 150 00eb 0D                      		bra	.L12
 151                             	.L11:
 152                             		.loc 1 82 0 discriminator 2
 153 00ec FB A6 FF                		mov.L	#-1, r10
 154 00ef 03                      		.balign 2,3,1
 155                             	.L12:
 156                             		.loc 1 82 0 discriminator 3
 157 00f0 ED 6B 03                		mov.L	12[r6], r11
 158 00f3 E7 BA 02                		mov.L	r10, 8[r11]
  83:SOURCES/database.c **** 	dbFile->lTotalRecords = lfilesz / recordsize;
 159                             		.loc 1 83 0 is_stmt 1 discriminator 3
 160 00f6 DD 6A 04                		mov.W	8[r6], r10
 161 00f9 EC 6B                   		mov.L	[r6], r11
 162 00fb FC 23 AB                		div	r10, r11
 163 00fe ED 6A 03                		mov.L	12[r6], r10
 164 0101 E7 AB 03                		mov.L	r11, 12[r10]
  84:SOURCES/database.c **** 
  85:SOURCES/database.c **** 	return TRUE;
 165                             		.loc 1 85 0 discriminator 3
 166 0104 66 1A                   		mov.L	#1, r10
 167                             		.balign 2,3,1
 168                             	.L7:
  86:SOURCES/database.c **** }
 169                             		.loc 1 86 0
 170 0106 EF A1                   		mov.L	r10, r1
 171 0108 3F 6C 0D                		rtsd	#52, r6-r12
 172                             	.LFE2:
 174                             		.global	_CreateDatabase
 176                             	_CreateDatabase:
 177                             	.LFB3:
  87:SOURCES/database.c **** 
  88:SOURCES/database.c **** 
  89:SOURCES/database.c **** int CreateDatabase( const char* filename, short recordsize, SDBFile *dbFile )
  90:SOURCES/database.c **** {
 178                             		.loc 1 90 0
 179 010b 6E 6B                   		pushm	r6-r11
 180                             	.LCFI10:
 181 010d 71 06 F4                		add	#-12, r0, r6
 182                             	.LCFI11:
 183 0110 71 60 F8                		add	#-8, r6, r0
 184                             	.LCFI12:
 185 0113 E3 61                   		mov.L	r1, [r6]
 186 0115 90 E2                   		mov.W	r2, 4[r6]
 187 0117 A0 E3                   		mov.L	r3, 8[r6]
  91:SOURCES/database.c **** 	if( IsFileOpen( dbFile ))
 188                             		.loc 1 91 0
 189 0119 A8 E1                   		mov.L	8[r6], r1
 190 011b 39 FA FE                		bsr	_IsFileOpen
 191 011e EF 1A                   		mov.L	r1, r10
 192 0120 61 0A                   		cmp	#0, r10
 193 0122 20 0F                   		beq	.L14
  92:SOURCES/database.c **** 	{
  93:SOURCES/database.c **** 		lErrorCode = DB_ERROR_ALREADY_OPEN;
 194                             		.loc 1 93 0
 195 0124 FB A2 00 00 00 00       		mov.L	#_lErrorCode, r10
 196 012a F8 A6 01                		mov.L	#1, [r10]
  94:SOURCES/database.c **** 		return FALSE;
 197                             		.loc 1 94 0
 198 012d 66 0A                   		mov.L	#0, r10
 199 012f 2E 4F                   		bra	.L15
 200                             	.L14:
  95:SOURCES/database.c **** 	}
  96:SOURCES/database.c **** 
  97:SOURCES/database.c **** 	if( (dbFile->fd = open( (char*)filename, O_RDWR | O_BINARY | O_CREAT | O_TRUNC, 0x0 )) == -1 )
 201                             		.loc 1 97 0
 202 0131 F8 0A 02 06             		mov.L	#0x602, [r0]
 203 0135 3E 01 00                		mov.L	#0, 4[r0]
 204 0138 EC 61                   		mov.L	[r6], r1
 205 013a 05 00 00 00             		bsr	_open
 206 013e EF 1B                   		mov.L	r1, r11
 207 0140 ED 6A 02                		mov.L	8[r6], r10
 208 0143 E7 AB 01                		mov.L	r11, 4[r10]
 209 0146 ED 6A 02                		mov.L	8[r6], r10
 210 0149 ED AA 01                		mov.L	4[r10], r10
 211 014c 75 0A FF                		cmp	#-1, r10
 212 014f 21 0F                   		bne	.L16
  98:SOURCES/database.c **** 	{
  99:SOURCES/database.c **** 		lErrorCode = DB_ERROR_OPEN;
 213                             		.loc 1 99 0
 214 0151 FB A2 00 00 00 00       		mov.L	#_lErrorCode, r10
 215 0157 F8 A6 02                		mov.L	#2, [r10]
 100:SOURCES/database.c **** 		return FALSE;
 216                             		.loc 1 100 0
 217 015a 66 0A                   		mov.L	#0, r10
 218 015c 2E 22                   		bra	.L15
 219                             	.L16:
 101:SOURCES/database.c **** 	}
 102:SOURCES/database.c **** 	dbFile->bOpen = TRUE;
 220                             		.loc 1 102 0
 221 015e ED 6A 02                		mov.L	8[r6], r10
 222 0161 F9 A6 04 01             		mov.L	#1, 16[r10]
 103:SOURCES/database.c **** 	dbFile->sRecSz = recordsize;
 223                             		.loc 1 103 0
 224 0165 ED 6A 02                		mov.L	8[r6], r10
 225 0168 DD 6B 02                		mov.W	4[r6], r11
 226 016b D3 AB                   		mov.W	r11, [r10]
 104:SOURCES/database.c **** 	dbFile->lCurrRecord = 0L;
 227                             		.loc 1 104 0
 228 016d ED 6A 02                		mov.L	8[r6], r10
 229 0170 F9 A6 02 00             		mov.L	#0, 8[r10]
 105:SOURCES/database.c **** 	dbFile->lTotalRecords = 0L;
 230                             		.loc 1 105 0
 231 0174 ED 6A 02                		mov.L	8[r6], r10
 232 0177 F9 A6 03 00             		mov.L	#0, 12[r10]
 106:SOURCES/database.c **** 
 107:SOURCES/database.c **** 	return TRUE;
 233                             		.loc 1 107 0
 234 017b 66 1A                   		mov.L	#1, r10
 235 017d 03                      		.balign 2,3,1
 236                             	.L15:
 108:SOURCES/database.c **** }
 237                             		.loc 1 108 0
 238 017e EF A1                   		mov.L	r10, r1
 239 0180 3F 6B 0B                		rtsd	#44, r6-r11
 240                             	.LFE3:
 242                             		.global	_CloseDatabase
 244                             	_CloseDatabase:
 245                             	.LFB4:
 109:SOURCES/database.c **** 
 110:SOURCES/database.c **** 
 111:SOURCES/database.c **** void CloseDatabase( SDBFile *dbFile )
 112:SOURCES/database.c **** {
 246                             		.loc 1 112 0
 247 0183 7E AA                   		push.l	r10
 248                             	.LCFI13:
 249 0185 7E A6                   		push.l	r6
 250                             	.LCFI14:
 251 0187 71 06 FC                		add	#-4, r0, r6
 252                             	.LCFI15:
 253 018a EF 60                   		mov.L	r6, r0
 254                             	.LCFI16:
 255 018c E3 61                   		mov.L	r1, [r6]
 113:SOURCES/database.c **** 	if( !IsFileOpen( dbFile ))
 256                             		.loc 1 113 0
 257 018e EC 61                   		mov.L	[r6], r1
 258 0190 39 85 FE                		bsr	_IsFileOpen
 259 0193 EF 1A                   		mov.L	r1, r10
 260 0195 61 0A                   		cmp	#0, r10
 261 0197 20 1C                   		beq	.L20
 262 0199 03                      		.balign 2,3,1
 263                             	.L18:
 114:SOURCES/database.c **** 		return;
 115:SOURCES/database.c **** 	//
 116:SOURCES/database.c **** 	// Close the open file handle
 117:SOURCES/database.c **** 	//
 118:SOURCES/database.c **** 	close( dbFile->fd );
 264                             		.loc 1 118 0
 265 019a EC 6A                   		mov.L	[r6], r10
 266 019c ED AA 01                		mov.L	4[r10], r10
 267 019f EF A1                   		mov.L	r10, r1
 268 01a1 05 00 00 00             		bsr	_close
 119:SOURCES/database.c **** 	dbFile->bOpen = FALSE;
 269                             		.loc 1 119 0
 270 01a5 EC 6A                   		mov.L	[r6], r10
 271 01a7 F9 A6 04 00             		mov.L	#0, 16[r10]
 120:SOURCES/database.c **** 	dbFile->fd = -1;
 272                             		.loc 1 120 0
 273 01ab EC 6A                   		mov.L	[r6], r10
 274 01ad F9 A6 01 FF             		mov.L	#-1, 4[r10]
 275 01b1 2E 03                   		bra	.L17
 276                             	.L20:
 114:SOURCES/database.c **** 		return;
 277                             		.loc 1 114 0
 278 01b3 03                      		nop
 279                             		.balign 2,3,1
 280                             	.L17:
 121:SOURCES/database.c **** }
 281                             		.loc 1 121 0
 282 01b4 62 40                   		add	#4, r0
 283 01b6 7E B6                   		pop	r6
 284 01b8 7E BA                   		pop	r10
 285 01ba 02                      		rts
 286                             	.LFE4:
 288                             		.global	_GetCurrentRecord
 290                             	_GetCurrentRecord:
 291                             	.LFB5:
 122:SOURCES/database.c **** 
 123:SOURCES/database.c **** 
 124:SOURCES/database.c **** long GetCurrentRecord( SDBFile *dbFile )
 125:SOURCES/database.c **** {
 292                             		.loc 1 125 0
 293 01bb 7E AA                   		push.l	r10
 294                             	.LCFI17:
 295 01bd 7E A6                   		push.l	r6
 296                             	.LCFI18:
 297 01bf 71 06 FC                		add	#-4, r0, r6
 298                             	.LCFI19:
 299 01c2 EF 60                   		mov.L	r6, r0
 300                             	.LCFI20:
 301 01c4 E3 61                   		mov.L	r1, [r6]
 126:SOURCES/database.c **** 	if( !IsFileOpen( dbFile ) )
 302                             		.loc 1 126 0
 303 01c6 EC 61                   		mov.L	[r6], r1
 304 01c8 39 4D FE                		bsr	_IsFileOpen
 305 01cb EF 1A                   		mov.L	r1, r10
 306 01cd 61 0A                   		cmp	#0, r10
 307 01cf 21 10                   		bne	.L22
 127:SOURCES/database.c **** 	{
 128:SOURCES/database.c **** 		lErrorCode = DB_ERROR_NOT_OPEN;
 308                             		.loc 1 128 0
 309 01d1 FB A2 00 00 00 00       		mov.L	#_lErrorCode, r10
 310 01d7 F8 A6 05                		mov.L	#5, [r10]
 129:SOURCES/database.c **** 		return -1L;
 311                             		.loc 1 129 0
 312 01da FB A6 FF                		mov.L	#-1, r10
 313 01dd 2E 1D                   		bra	.L23
 314                             	.L22:
 130:SOURCES/database.c **** 	}
 131:SOURCES/database.c **** 	if( dbFile->lTotalRecords == 0L )
 315                             		.loc 1 131 0
 316 01df EC 6A                   		mov.L	[r6], r10
 317 01e1 ED AA 03                		mov.L	12[r10], r10
 318 01e4 61 0A                   		cmp	#0, r10
 319 01e6 21 0F                   		bne	.L24
 132:SOURCES/database.c **** 	{
 133:SOURCES/database.c **** 		lErrorCode = DB_ERROR_EMPTY;
 320                             		.loc 1 133 0
 321 01e8 FB A2 00 00 00 00       		mov.L	#_lErrorCode, r10
 322 01ee F8 A6 06                		mov.L	#6, [r10]
 134:SOURCES/database.c **** 		return -1L;
 323                             		.loc 1 134 0
 324 01f1 FB A6 FF                		mov.L	#-1, r10
 325 01f4 0E                      		bra	.L23
 326                             	.L24:
 135:SOURCES/database.c **** 	}
 136:SOURCES/database.c **** 	return dbFile->lCurrRecord;
 327                             		.loc 1 136 0
 328 01f5 EC 6A                   		mov.L	[r6], r10
 329 01f7 ED AA 02                		mov.L	8[r10], r10
 330                             		.balign 2,3,1
 331                             	.L23:
 137:SOURCES/database.c **** }
 332                             		.loc 1 137 0
 333 01fa EF A1                   		mov.L	r10, r1
 334 01fc 62 40                   		add	#4, r0
 335 01fe 7E B6                   		pop	r6
 336 0200 7E BA                   		pop	r10
 337 0202 02                      		rts
 338                             	.LFE5:
 340                             		.global	_GetTotalRecords
 342                             	_GetTotalRecords:
 343                             	.LFB6:
 138:SOURCES/database.c **** 
 139:SOURCES/database.c **** 
 140:SOURCES/database.c **** long GetTotalRecords( SDBFile *dbFile )
 141:SOURCES/database.c **** {
 344                             		.loc 1 141 0
 345 0203 7E AA                   		push.l	r10
 346                             	.LCFI21:
 347 0205 7E A6                   		push.l	r6
 348                             	.LCFI22:
 349 0207 71 06 FC                		add	#-4, r0, r6
 350                             	.LCFI23:
 351 020a EF 60                   		mov.L	r6, r0
 352                             	.LCFI24:
 353 020c E3 61                   		mov.L	r1, [r6]
 142:SOURCES/database.c **** 	if( !IsFileOpen( dbFile ) )
 354                             		.loc 1 142 0
 355 020e EC 61                   		mov.L	[r6], r1
 356 0210 39 05 FE                		bsr	_IsFileOpen
 357 0213 EF 1A                   		mov.L	r1, r10
 358 0215 61 0A                   		cmp	#0, r10
 359 0217 21 0F                   		bne	.L26
 143:SOURCES/database.c **** 	{
 144:SOURCES/database.c **** 		lErrorCode = DB_ERROR_NOT_OPEN;
 360                             		.loc 1 144 0
 361 0219 FB A2 00 00 00 00       		mov.L	#_lErrorCode, r10
 362 021f F8 A6 05                		mov.L	#5, [r10]
 145:SOURCES/database.c **** 		return -1L;
 363                             		.loc 1 145 0
 364 0222 FB A6 FF                		mov.L	#-1, r10
 365 0225 0F                      		bra	.L27
 366                             	.L26:
 146:SOURCES/database.c **** 	}
 147:SOURCES/database.c **** 	return dbFile->lTotalRecords;
 367                             		.loc 1 147 0
 368 0226 EC 6A                   		mov.L	[r6], r10
 369 0228 ED AA 03                		mov.L	12[r10], r10
 370 022b 03                      		.balign 2,3,1
 371                             	.L27:
 148:SOURCES/database.c **** }
 372                             		.loc 1 148 0
 373 022c EF A1                   		mov.L	r10, r1
 374 022e 62 40                   		add	#4, r0
 375 0230 7E B6                   		pop	r6
 376 0232 7E BA                   		pop	r10
 377 0234 02                      		rts
 378                             	.LFE6:
 380                             		.global	_GotoRecord
 382                             	_GotoRecord:
 383                             	.LFB7:
 149:SOURCES/database.c **** 
 150:SOURCES/database.c **** 
 151:SOURCES/database.c **** int GotoRecord( SDBFile *dbFile, long recordnumber )
 152:SOURCES/database.c **** {
 384                             		.loc 1 152 0
 385 0235 6E 6B                   		pushm	r6-r11
 386                             	.LCFI25:
 387 0237 71 06 F4                		add	#-12, r0, r6
 388                             	.LCFI26:
 389 023a EF 60                   		mov.L	r6, r0
 390                             	.LCFI27:
 391 023c A0 69                   		mov.L	r1, 4[r6]
 392 023e A0 E2                   		mov.L	r2, 8[r6]
 153:SOURCES/database.c **** 	long totalrecords;
 154:SOURCES/database.c **** 	if( ( totalrecords = GetTotalRecords( dbFile )) == -1L )
 393                             		.loc 1 154 0
 394 0240 A8 69                   		mov.L	4[r6], r1
 395 0242 05 00 00 00             		bsr	_GetTotalRecords
 396 0246 E3 61                   		mov.L	r1, [r6]
 397 0248 EC 6A                   		mov.L	[r6], r10
 398 024a 75 0A FF                		cmp	#-1, r10
 399 024d 1D                      		bne	.L29
 155:SOURCES/database.c **** 		return FALSE;
 400                             		.loc 1 155 0
 401 024e 66 0A                   		mov.L	#0, r10
 402 0250 2E 2A                   		bra	.L30
 403                             	.L29:
 156:SOURCES/database.c **** 
 157:SOURCES/database.c **** 	if( recordnumber < 0L || recordnumber >= totalrecords )
 404                             		.loc 1 157 0
 405 0252 ED 6A 02                		mov.L	8[r6], r10
 406 0255 61 0A                   		cmp	#0, r10
 407 0257 29 0B                   		blt	.L31
 408                             		.loc 1 157 0 is_stmt 0 discriminator 1
 409 0259 ED 6B 02                		mov.L	8[r6], r11
 410 025c EC 6A                   		mov.L	[r6], r10
 411 025e 47 AB                   		cmp	r10, r11
 412 0260 29 0F                   		blt	.L32
 413                             		.balign 2,3,5
 414                             	.L31:
 158:SOURCES/database.c **** 	{
 159:SOURCES/database.c **** 		lErrorCode = DB_ERROR_INVALID_REC_NO;
 415                             		.loc 1 159 0 is_stmt 1
 416 0262 FB A2 00 00 00 00       		mov.L	#_lErrorCode, r10
 417 0268 F8 A6 11                		mov.L	#17, [r10]
 160:SOURCES/database.c **** 		return FALSE;
 418                             		.loc 1 160 0
 419 026b 66 0A                   		mov.L	#0, r10
 420 026d 2E 0D                   		bra	.L30
 421                             	.L32:
 161:SOURCES/database.c **** 	}
 162:SOURCES/database.c **** 
 163:SOURCES/database.c **** 	dbFile->lCurrRecord = recordnumber;
 422                             		.loc 1 163 0
 423 026f ED 6A 01                		mov.L	4[r6], r10
 424 0272 ED 6B 02                		mov.L	8[r6], r11
 425 0275 E7 AB 02                		mov.L	r11, 8[r10]
 164:SOURCES/database.c **** 
 165:SOURCES/database.c **** 	return TRUE;
 426                             		.loc 1 165 0
 427 0278 66 1A                   		mov.L	#1, r10
 428                             		.balign 2,3,1
 429                             	.L30:
 166:SOURCES/database.c **** }
 430                             		.loc 1 166 0
 431 027a EF A1                   		mov.L	r10, r1
 432 027c 3F 6B 09                		rtsd	#36, r6-r11
 433                             	.LFE7:
 435                             		.global	_ReadCurrentRecord
 437                             	_ReadCurrentRecord:
 438                             	.LFB8:
 167:SOURCES/database.c **** 
 168:SOURCES/database.c **** 
 169:SOURCES/database.c **** int ReadCurrentRecord( SDBFile *dbFile, char* record )
 170:SOURCES/database.c **** {
 439                             		.loc 1 170 0
 440 027f 6E 6B                   		pushm	r6-r11
 441                             	.LCFI28:
 442 0281 71 06 F4                		add	#-12, r0, r6
 443                             	.LCFI29:
 444 0284 EF 60                   		mov.L	r6, r0
 445                             	.LCFI30:
 446 0286 A0 69                   		mov.L	r1, 4[r6]
 447 0288 A0 E2                   		mov.L	r2, 8[r6]
 171:SOURCES/database.c **** 	long curr;
 172:SOURCES/database.c **** 
 173:SOURCES/database.c **** 	if( (curr = GetCurrentRecord( dbFile )) == -1L )
 448                             		.loc 1 173 0
 449 028a A8 69                   		mov.L	4[r6], r1
 450 028c 05 00 00 00             		bsr	_GetCurrentRecord
 451 0290 E3 61                   		mov.L	r1, [r6]
 452 0292 EC 6A                   		mov.L	[r6], r10
 453 0294 75 0A FF                		cmp	#-1, r10
 454 0297 1D                      		bne	.L34
 174:SOURCES/database.c **** 		return FALSE;
 455                             		.loc 1 174 0
 456 0298 66 0A                   		mov.L	#0, r10
 457 029a 2E 6A                   		bra	.L35
 458                             	.L34:
 175:SOURCES/database.c **** 
 176:SOURCES/database.c **** 	if( lseek( dbFile->fd, (long)(curr * dbFile->sRecSz), SEEK_SET ) == -1L)
 459                             		.loc 1 176 0
 460 029c ED 6A 01                		mov.L	4[r6], r10
 461 029f ED AB 01                		mov.L	4[r10], r11
 462 02a2 ED 6A 01                		mov.L	4[r6], r10
 463 02a5 DC AA                   		mov.W	[r10], r10
 464 02a7 DF AA                   		mov.W	r10, r10
 465 02a9 EC 67                   		mov.L	[r6], r7
 466 02ab 4F 7A                   		mul	r7, r10
 467 02ad EF B1                   		mov.L	r11, r1
 468 02af EF A2                   		mov.L	r10, r2
 469 02b1 66 03                   		mov.L	#0, r3
 470 02b3 05 00 00 00             		bsr	_lseek
 471 02b7 EF 1A                   		mov.L	r1, r10
 472 02b9 75 0A FF                		cmp	#-1, r10
 473 02bc 21 0F                   		bne	.L36
 177:SOURCES/database.c **** 	{
 178:SOURCES/database.c **** 		lErrorCode = DB_ERROR_RECORD_JMP;
 474                             		.loc 1 178 0
 475 02be FB A2 00 00 00 00       		mov.L	#_lErrorCode, r10
 476 02c4 F8 A6 12                		mov.L	#18, [r10]
 179:SOURCES/database.c **** 		return FALSE;
 477                             		.loc 1 179 0
 478 02c7 66 0A                   		mov.L	#0, r10
 479 02c9 2E 3B                   		bra	.L35
 480                             	.L36:
 180:SOURCES/database.c **** 	}
 181:SOURCES/database.c **** 
 182:SOURCES/database.c **** 	if( read( dbFile->fd, record, dbFile->sRecSz ) != dbFile->sRecSz )
 481                             		.loc 1 182 0
 482 02cb ED 6A 01                		mov.L	4[r6], r10
 483 02ce ED AB 01                		mov.L	4[r10], r11
 484 02d1 ED 6A 01                		mov.L	4[r6], r10
 485 02d4 DC AA                   		mov.W	[r10], r10
 486 02d6 DF AA                   		mov.W	r10, r10
 487 02d8 EF B1                   		mov.L	r11, r1
 488 02da A8 E2                   		mov.L	8[r6], r2
 489 02dc EF A3                   		mov.L	r10, r3
 490 02de 05 00 00 00             		bsr	_read
 491 02e2 EF 1B                   		mov.L	r1, r11
 492 02e4 ED 6A 01                		mov.L	4[r6], r10
 493 02e7 DC AA                   		mov.W	[r10], r10
 494 02e9 DF AA                   		mov.W	r10, r10
 495 02eb 47 AB                   		cmp	r10, r11
 496 02ed 20 14                   		beq	.L37
 183:SOURCES/database.c **** 	{
 184:SOURCES/database.c **** 		lErrorCode = DB_ERROR_READ_FILE;
 497                             		.loc 1 184 0
 498 02ef FB A2 00 00 00 00       		mov.L	#_lErrorCode, r10
 499 02f5 F8 A6 20                		mov.L	#32, [r10]
 185:SOURCES/database.c **** 		record[0] = '\0';
 500                             		.loc 1 185 0
 501 02f8 ED 6A 02                		mov.L	8[r6], r10
 502 02fb F8 A4 00                		mov.B	#0, [r10]
 186:SOURCES/database.c **** 		return FALSE;
 503                             		.loc 1 186 0
 504 02fe 66 0A                   		mov.L	#0, r10
 505 0300 0C                      		bra	.L35
 506                             	.L37:
 187:SOURCES/database.c **** 	}
 188:SOURCES/database.c **** 
 189:SOURCES/database.c **** 	return TRUE;
 507                             		.loc 1 189 0
 508 0301 66 1A                   		mov.L	#1, r10
 509 0303 03                      		.balign 2,3,1
 510                             	.L35:
 190:SOURCES/database.c **** }
 511                             		.loc 1 190 0
 512 0304 EF A1                   		mov.L	r10, r1
 513 0306 3F 6B 09                		rtsd	#36, r6-r11
 514                             	.LFE8:
 516                             		.global	_ReadFirstRecord
 518                             	_ReadFirstRecord:
 519                             	.LFB9:
 191:SOURCES/database.c **** 
 192:SOURCES/database.c **** 
 193:SOURCES/database.c **** int ReadFirstRecord( SDBFile *dbFile, char* record )
 194:SOURCES/database.c **** {
 520                             		.loc 1 194 0
 521 0309 7E AA                   		push.l	r10
 522                             	.LCFI31:
 523 030b 7E A6                   		push.l	r6
 524                             	.LCFI32:
 525 030d 71 06 F8                		add	#-8, r0, r6
 526                             	.LCFI33:
 527 0310 EF 60                   		mov.L	r6, r0
 528                             	.LCFI34:
 529 0312 E3 61                   		mov.L	r1, [r6]
 530 0314 A0 6A                   		mov.L	r2, 4[r6]
 195:SOURCES/database.c **** 	if( !GotoRecord( dbFile, 0L ))
 531                             		.loc 1 195 0
 532 0316 EC 61                   		mov.L	[r6], r1
 533 0318 66 02                   		mov.L	#0, r2
 534 031a 05 00 00 00             		bsr	_GotoRecord
 535 031e EF 1A                   		mov.L	r1, r10
 536 0320 61 0A                   		cmp	#0, r10
 537 0322 1D                      		bne	.L39
 196:SOURCES/database.c **** 		return FALSE;
 538                             		.loc 1 196 0
 539 0323 66 0A                   		mov.L	#0, r10
 540 0325 2E 15                   		bra	.L40
 541                             	.L39:
 197:SOURCES/database.c **** 	if( !ReadCurrentRecord( dbFile, record ))
 542                             		.loc 1 197 0
 543 0327 EC 61                   		mov.L	[r6], r1
 544 0329 A8 6A                   		mov.L	4[r6], r2
 545 032b 05 00 00 00             		bsr	_ReadCurrentRecord
 546 032f EF 1A                   		mov.L	r1, r10
 547 0331 61 0A                   		cmp	#0, r10
 548 0333 1C                      		bne	.L41
 198:SOURCES/database.c **** 		return FALSE;
 549                             		.loc 1 198 0
 550 0334 66 0A                   		mov.L	#0, r10
 551 0336 0C                      		bra	.L40
 552                             	.L41:
 199:SOURCES/database.c **** 	return TRUE;
 553                             		.loc 1 199 0
 554 0337 66 1A                   		mov.L	#1, r10
 555 0339 03                      		.balign 2,3,1
 556                             	.L40:
 200:SOURCES/database.c **** }
 557                             		.loc 1 200 0
 558 033a EF A1                   		mov.L	r10, r1
 559 033c 62 80                   		add	#8, r0
 560 033e 7E B6                   		pop	r6
 561 0340 7E BA                   		pop	r10
 562 0342 02                      		rts
 563                             	.LFE9:
 565                             		.global	_ReadLastRecord
 567                             	_ReadLastRecord:
 568                             	.LFB10:
 201:SOURCES/database.c **** 
 202:SOURCES/database.c **** 
 203:SOURCES/database.c **** int ReadLastRecord( SDBFile *dbFile, char* record )
 204:SOURCES/database.c **** {
 569                             		.loc 1 204 0
 570 0343 7E AA                   		push.l	r10
 571                             	.LCFI35:
 572 0345 7E A6                   		push.l	r6
 573                             	.LCFI36:
 574 0347 71 06 F4                		add	#-12, r0, r6
 575                             	.LCFI37:
 576 034a EF 60                   		mov.L	r6, r0
 577                             	.LCFI38:
 578 034c A0 69                   		mov.L	r1, 4[r6]
 579 034e A0 E2                   		mov.L	r2, 8[r6]
 205:SOURCES/database.c **** 	long lastrecord;
 206:SOURCES/database.c **** 	if( (lastrecord = GetTotalRecords( dbFile )) == -1L )
 580                             		.loc 1 206 0
 581 0350 A8 69                   		mov.L	4[r6], r1
 582 0352 05 00 00 00             		bsr	_GetTotalRecords
 583 0356 E3 61                   		mov.L	r1, [r6]
 584 0358 EC 6A                   		mov.L	[r6], r10
 585 035a 75 0A FF                		cmp	#-1, r10
 586 035d 1D                      		bne	.L43
 207:SOURCES/database.c **** 		return FALSE;
 587                             		.loc 1 207 0
 588 035e 66 0A                   		mov.L	#0, r10
 589 0360 2E 2A                   		bra	.L44
 590                             	.L43:
 208:SOURCES/database.c **** 	if( !GotoRecord( dbFile, lastrecord - 1L ))
 591                             		.loc 1 208 0
 592 0362 EC 6A                   		mov.L	[r6], r10
 593 0364 60 1A                   		sub	#1, r10
 594 0366 A8 69                   		mov.L	4[r6], r1
 595 0368 EF A2                   		mov.L	r10, r2
 596 036a 05 00 00 00             		bsr	_GotoRecord
 597 036e EF 1A                   		mov.L	r1, r10
 598 0370 61 0A                   		cmp	#0, r10
 599 0372 1D                      		bne	.L45
 209:SOURCES/database.c **** 		return FALSE;
 600                             		.loc 1 209 0
 601 0373 66 0A                   		mov.L	#0, r10
 602 0375 2E 15                   		bra	.L44
 603                             	.L45:
 210:SOURCES/database.c **** 	if( !ReadCurrentRecord( dbFile, record ))
 604                             		.loc 1 210 0
 605 0377 A8 69                   		mov.L	4[r6], r1
 606 0379 A8 E2                   		mov.L	8[r6], r2
 607 037b 05 00 00 00             		bsr	_ReadCurrentRecord
 608 037f EF 1A                   		mov.L	r1, r10
 609 0381 61 0A                   		cmp	#0, r10
 610 0383 1C                      		bne	.L46
 211:SOURCES/database.c **** 		return FALSE;
 611                             		.loc 1 211 0
 612 0384 66 0A                   		mov.L	#0, r10
 613 0386 0C                      		bra	.L44
 614                             	.L46:
 212:SOURCES/database.c **** 	return TRUE;
 615                             		.loc 1 212 0
 616 0387 66 1A                   		mov.L	#1, r10
 617 0389 03                      		.balign 2,3,1
 618                             	.L44:
 213:SOURCES/database.c **** }
 619                             		.loc 1 213 0
 620 038a EF A1                   		mov.L	r10, r1
 621 038c 62 C0                   		add	#12, r0
 622 038e 7E B6                   		pop	r6
 623 0390 7E BA                   		pop	r10
 624 0392 02                      		rts
 625                             	.LFE10:
 627                             		.global	_ReadPreviousRecord
 629                             	_ReadPreviousRecord:
 630                             	.LFB11:
 214:SOURCES/database.c **** 
 215:SOURCES/database.c **** 
 216:SOURCES/database.c **** int ReadPreviousRecord( SDBFile *dbFile, char* record )
 217:SOURCES/database.c **** {
 631                             		.loc 1 217 0
 632 0393 7E AA                   		push.l	r10
 633                             	.LCFI39:
 634 0395 7E A6                   		push.l	r6
 635                             	.LCFI40:
 636 0397 71 06 F4                		add	#-12, r0, r6
 637                             	.LCFI41:
 638 039a EF 60                   		mov.L	r6, r0
 639                             	.LCFI42:
 640 039c A0 69                   		mov.L	r1, 4[r6]
 641 039e A0 E2                   		mov.L	r2, 8[r6]
 218:SOURCES/database.c **** 	long curr;
 219:SOURCES/database.c **** 	if( (curr = GetCurrentRecord( dbFile )) == -1L )
 642                             		.loc 1 219 0
 643 03a0 A8 69                   		mov.L	4[r6], r1
 644 03a2 05 00 00 00             		bsr	_GetCurrentRecord
 645 03a6 E3 61                   		mov.L	r1, [r6]
 646 03a8 EC 6A                   		mov.L	[r6], r10
 647 03aa 75 0A FF                		cmp	#-1, r10
 648 03ad 1D                      		bne	.L48
 220:SOURCES/database.c **** 		return FALSE;
 649                             		.loc 1 220 0
 650 03ae 66 0A                   		mov.L	#0, r10
 651 03b0 2E 2A                   		bra	.L49
 652                             	.L48:
 221:SOURCES/database.c **** 	if( !GotoRecord( dbFile, curr - 1L ))
 653                             		.loc 1 221 0
 654 03b2 EC 6A                   		mov.L	[r6], r10
 655 03b4 60 1A                   		sub	#1, r10
 656 03b6 A8 69                   		mov.L	4[r6], r1
 657 03b8 EF A2                   		mov.L	r10, r2
 658 03ba 05 00 00 00             		bsr	_GotoRecord
 659 03be EF 1A                   		mov.L	r1, r10
 660 03c0 61 0A                   		cmp	#0, r10
 661 03c2 1D                      		bne	.L50
 222:SOURCES/database.c **** 		return FALSE;
 662                             		.loc 1 222 0
 663 03c3 66 0A                   		mov.L	#0, r10
 664 03c5 2E 15                   		bra	.L49
 665                             	.L50:
 223:SOURCES/database.c **** 	if( !ReadCurrentRecord( dbFile, record ))
 666                             		.loc 1 223 0
 667 03c7 A8 69                   		mov.L	4[r6], r1
 668 03c9 A8 E2                   		mov.L	8[r6], r2
 669 03cb 05 00 00 00             		bsr	_ReadCurrentRecord
 670 03cf EF 1A                   		mov.L	r1, r10
 671 03d1 61 0A                   		cmp	#0, r10
 672 03d3 1C                      		bne	.L51
 224:SOURCES/database.c **** 		return FALSE;
 673                             		.loc 1 224 0
 674 03d4 66 0A                   		mov.L	#0, r10
 675 03d6 0C                      		bra	.L49
 676                             	.L51:
 225:SOURCES/database.c **** 	return TRUE;
 677                             		.loc 1 225 0
 678 03d7 66 1A                   		mov.L	#1, r10
 679 03d9 03                      		.balign 2,3,1
 680                             	.L49:
 226:SOURCES/database.c **** }
 681                             		.loc 1 226 0
 682 03da EF A1                   		mov.L	r10, r1
 683 03dc 62 C0                   		add	#12, r0
 684 03de 7E B6                   		pop	r6
 685 03e0 7E BA                   		pop	r10
 686 03e2 02                      		rts
 687                             	.LFE11:
 689                             		.global	_ReadNextRecord
 691                             	_ReadNextRecord:
 692                             	.LFB12:
 227:SOURCES/database.c **** 
 228:SOURCES/database.c **** 
 229:SOURCES/database.c **** int ReadNextRecord( SDBFile *dbFile, char* record )
 230:SOURCES/database.c **** {
 693                             		.loc 1 230 0
 694 03e3 7E AA                   		push.l	r10
 695                             	.LCFI43:
 696 03e5 7E A6                   		push.l	r6
 697                             	.LCFI44:
 698 03e7 71 06 F4                		add	#-12, r0, r6
 699                             	.LCFI45:
 700 03ea EF 60                   		mov.L	r6, r0
 701                             	.LCFI46:
 702 03ec A0 69                   		mov.L	r1, 4[r6]
 703 03ee A0 E2                   		mov.L	r2, 8[r6]
 231:SOURCES/database.c **** 	long curr;
 232:SOURCES/database.c **** 	if( (curr = GetCurrentRecord( dbFile )) == -1L )
 704                             		.loc 1 232 0
 705 03f0 A8 69                   		mov.L	4[r6], r1
 706 03f2 05 00 00 00             		bsr	_GetCurrentRecord
 707 03f6 E3 61                   		mov.L	r1, [r6]
 708 03f8 EC 6A                   		mov.L	[r6], r10
 709 03fa 75 0A FF                		cmp	#-1, r10
 710 03fd 1D                      		bne	.L53
 233:SOURCES/database.c **** 		return FALSE;
 711                             		.loc 1 233 0
 712 03fe 66 0A                   		mov.L	#0, r10
 713 0400 2E 2A                   		bra	.L54
 714                             	.L53:
 234:SOURCES/database.c **** 	if( !GotoRecord( dbFile, curr + 1L ))
 715                             		.loc 1 234 0
 716 0402 EC 6A                   		mov.L	[r6], r10
 717 0404 62 1A                   		add	#1, r10
 718 0406 A8 69                   		mov.L	4[r6], r1
 719 0408 EF A2                   		mov.L	r10, r2
 720 040a 05 00 00 00             		bsr	_GotoRecord
 721 040e EF 1A                   		mov.L	r1, r10
 722 0410 61 0A                   		cmp	#0, r10
 723 0412 1D                      		bne	.L55
 235:SOURCES/database.c **** 		return FALSE;
 724                             		.loc 1 235 0
 725 0413 66 0A                   		mov.L	#0, r10
 726 0415 2E 15                   		bra	.L54
 727                             	.L55:
 236:SOURCES/database.c **** 	if( !ReadCurrentRecord( dbFile, record ))
 728                             		.loc 1 236 0
 729 0417 A8 69                   		mov.L	4[r6], r1
 730 0419 A8 E2                   		mov.L	8[r6], r2
 731 041b 05 00 00 00             		bsr	_ReadCurrentRecord
 732 041f EF 1A                   		mov.L	r1, r10
 733 0421 61 0A                   		cmp	#0, r10
 734 0423 1C                      		bne	.L56
 237:SOURCES/database.c **** 		return FALSE;
 735                             		.loc 1 237 0
 736 0424 66 0A                   		mov.L	#0, r10
 737 0426 0C                      		bra	.L54
 738                             	.L56:
 238:SOURCES/database.c **** 	return TRUE;
 739                             		.loc 1 238 0
 740 0427 66 1A                   		mov.L	#1, r10
 741 0429 03                      		.balign 2,3,1
 742                             	.L54:
 239:SOURCES/database.c **** }
 743                             		.loc 1 239 0
 744 042a EF A1                   		mov.L	r10, r1
 745 042c 62 C0                   		add	#12, r0
 746 042e 7E B6                   		pop	r6
 747 0430 7E BA                   		pop	r10
 748 0432 02                      		rts
 749                             	.LFE12:
 751                             		.global	_DeleteRecord
 753                             	_DeleteRecord:
 754                             	.LFB13:
 240:SOURCES/database.c **** 
 241:SOURCES/database.c **** 
 242:SOURCES/database.c **** int DeleteRecord( SDBFile *dbFile, long recordnumber )
 243:SOURCES/database.c **** {
 755                             		.loc 1 243 0
 756 0433 6E 6C                   		pushm	r6-r12
 757                             	.LCFI47:
 758 0435 71 06 EC                		add	#-20, r0, r6
 759                             	.LCFI48:
 760 0438 EF 60                   		mov.L	r6, r0
 761                             	.LCFI49:
 762 043a A0 E9                   		mov.L	r1, 12[r6]
 763 043c A1 62                   		mov.L	r2, 16[r6]
 244:SOURCES/database.c **** 	char *record;
 245:SOURCES/database.c **** 	long recno;
 246:SOURCES/database.c **** 	long totalrecords;
 247:SOURCES/database.c **** 
 248:SOURCES/database.c **** 	if( ( totalrecords = GetTotalRecords( dbFile )) == -1L )
 764                             		.loc 1 248 0
 765 043e A8 E9                   		mov.L	12[r6], r1
 766 0440 05 00 00 00             		bsr	_GetTotalRecords
 767 0444 A0 69                   		mov.L	r1, 4[r6]
 768 0446 ED 6A 01                		mov.L	4[r6], r10
 769 0449 75 0A FF                		cmp	#-1, r10
 770 044c 1E                      		bne	.L58
 249:SOURCES/database.c **** 		return FALSE;
 771                             		.loc 1 249 0
 772 044d 66 0A                   		mov.L	#0, r10
 773 044f 38 EB 00                		bra	.L59
 774                             	.L58:
 250:SOURCES/database.c **** 	if( !GotoRecord( dbFile, recordnumber ))
 775                             		.loc 1 250 0
 776 0452 A8 E9                   		mov.L	12[r6], r1
 777 0454 A9 62                   		mov.L	16[r6], r2
 778 0456 05 00 00 00             		bsr	_GotoRecord
 779 045a EF 1A                   		mov.L	r1, r10
 780 045c 61 0A                   		cmp	#0, r10
 781 045e 1E                      		bne	.L60
 251:SOURCES/database.c **** 		return FALSE;
 782                             		.loc 1 251 0
 783 045f 66 0A                   		mov.L	#0, r10
 784 0461 38 D9 00                		bra	.L59
 785                             	.L60:
 252:SOURCES/database.c **** 
 253:SOURCES/database.c **** 	if( (record = (char*)malloc( dbFile->sRecSz)) == NULL )
 786                             		.loc 1 253 0
 787 0464 ED 6A 03                		mov.L	12[r6], r10
 788 0467 DC AA                   		mov.W	[r10], r10
 789 0469 DF AA                   		mov.W	r10, r10
 790 046b EF A1                   		mov.L	r10, r1
 791 046d 05 00 00 00             		bsr	_malloc
 792 0471 EF 1A                   		mov.L	r1, r10
 793 0473 E7 6A 02                		mov.L	r10, 8[r6]
 794 0476 ED 6A 02                		mov.L	8[r6], r10
 795 0479 61 0A                   		cmp	#0, r10
 796 047b 21 10                   		bne	.L61
 254:SOURCES/database.c **** 	{
 255:SOURCES/database.c **** 		lErrorCode = DB_ERROR_MEM;
 797                             		.loc 1 255 0
 798 047d FB A2 00 00 00 00       		mov.L	#_lErrorCode, r10
 799 0483 F8 A6 50                		mov.L	#0x50, [r10]
 256:SOURCES/database.c **** 		return FALSE;
 800                             		.loc 1 256 0
 801 0486 66 0A                   		mov.L	#0, r10
 802 0488 38 B2 00                		bra	.L59
 803                             	.L61:
 257:SOURCES/database.c **** 	}
 258:SOURCES/database.c **** 
 259:SOURCES/database.c **** 	for( recno = recordnumber +1L; recno < totalrecords; recno++ )
 804                             		.loc 1 259 0
 805 048b ED 6A 04                		mov.L	16[r6], r10
 806 048e 62 1A                   		add	#1, r10
 807 0490 E3 6A                   		mov.L	r10, [r6]
 808 0492 2E 46                   		bra	.L62
 809                             	.L68:
 260:SOURCES/database.c **** 	{
 261:SOURCES/database.c **** 		if( !GotoRecord( dbFile, recno ))
 810                             		.loc 1 261 0
 811 0494 A8 E9                   		mov.L	12[r6], r1
 812 0496 EC 62                   		mov.L	[r6], r2
 813 0498 05 00 00 00             		bsr	_GotoRecord
 814 049c EF 1A                   		mov.L	r1, r10
 815 049e 61 0A                   		cmp	#0, r10
 816 04a0 20 42                   		beq	.L71
 817                             		.balign 2,3,1
 818                             	.L63:
 262:SOURCES/database.c **** 			break;
 263:SOURCES/database.c **** 		if( !ReadCurrentRecord( dbFile, record ))
 819                             		.loc 1 263 0
 820 04a2 A8 E9                   		mov.L	12[r6], r1
 821 04a4 A8 E2                   		mov.L	8[r6], r2
 822 04a6 05 00 00 00             		bsr	_ReadCurrentRecord
 823 04aa EF 1A                   		mov.L	r1, r10
 824 04ac 61 0A                   		cmp	#0, r10
 825 04ae 20 36                   		beq	.L72
 826                             		.balign 2,3,1
 827                             	.L65:
 264:SOURCES/database.c **** 			break;
 265:SOURCES/database.c **** 		if( !GotoRecord( dbFile, recno -1L ))
 828                             		.loc 1 265 0
 829 04b0 EC 6A                   		mov.L	[r6], r10
 830 04b2 60 1A                   		sub	#1, r10
 831 04b4 A8 E9                   		mov.L	12[r6], r1
 832 04b6 EF A2                   		mov.L	r10, r2
 833 04b8 05 00 00 00             		bsr	_GotoRecord
 834 04bc EF 1A                   		mov.L	r1, r10
 835 04be 61 0A                   		cmp	#0, r10
 836 04c0 20 26                   		beq	.L73
 837                             		.balign 2,3,1
 838                             	.L66:
 266:SOURCES/database.c **** 			break;
 267:SOURCES/database.c **** 		if( !WriteRecord( dbFile, record, WRITE_OVER ))
 839                             		.loc 1 267 0
 840 04c2 A8 E9                   		mov.L	12[r6], r1
 841 04c4 A8 E2                   		mov.L	8[r6], r2
 842 04c6 66 13                   		mov.L	#1, r3
 843 04c8 05 00 00 00             		bsr	_WriteRecord
 844 04cc EF 1A                   		mov.L	r1, r10
 845 04ce 61 0A                   		cmp	#0, r10
 846 04d0 20 18                   		beq	.L74
 847                             		.balign 2,3,1
 848                             	.L67:
 259:SOURCES/database.c **** 	for( recno = recordnumber +1L; recno < totalrecords; recno++ )
 849                             		.loc 1 259 0
 850 04d2 EC 6A                   		mov.L	[r6], r10
 851 04d4 62 1A                   		add	#1, r10
 852 04d6 E3 6A                   		mov.L	r10, [r6]
 853                             		.balign 2,3,1
 854                             	.L62:
 259:SOURCES/database.c **** 	for( recno = recordnumber +1L; recno < totalrecords; recno++ )
 855                             		.loc 1 259 0 is_stmt 0 discriminator 1
 856 04d8 EC 6B                   		mov.L	[r6], r11
 857 04da ED 6A 01                		mov.L	4[r6], r10
 858 04dd 47 AB                   		cmp	r10, r11
 859 04df 29 B5                   		blt	.L68
 860 04e1 09                      		bra	.L64
 861                             	.L71:
 262:SOURCES/database.c **** 			break;
 862                             		.loc 1 262 0 is_stmt 1
 863 04e2 03                      		nop
 864 04e3 0F                      		bra	.L64
 865                             	.L72:
 264:SOURCES/database.c **** 			break;
 866                             		.loc 1 264 0
 867 04e4 03                      		nop
 868 04e5 0D                      		bra	.L64
 869                             	.L73:
 266:SOURCES/database.c **** 			break;
 870                             		.loc 1 266 0
 871 04e6 03                      		nop
 872 04e7 0B                      		bra	.L64
 873                             	.L74:
 268:SOURCES/database.c **** 			break;
 874                             		.loc 1 268 0
 875 04e8 03                      		nop
 876 04e9 03                      		.balign 2,3,1
 877                             	.L64:
 269:SOURCES/database.c **** 	}
 270:SOURCES/database.c **** 	free( record );
 878                             		.loc 1 270 0
 879 04ea A8 E1                   		mov.L	8[r6], r1
 880 04ec 05 00 00 00             		bsr	_free
 271:SOURCES/database.c **** 	if( chsize( dbFile->fd, (long)((totalrecords -1L) * (dbFile->sRecSz ))) == -1)
 881                             		.loc 1 271 0
 882 04f0 ED 6A 03                		mov.L	12[r6], r10
 883 04f3 ED AB 01                		mov.L	4[r10], r11
 884 04f6 ED 6A 01                		mov.L	4[r6], r10
 885 04f9 71 AC FF                		add	#-1, r10, r12
 886 04fc ED 6A 03                		mov.L	12[r6], r10
 887 04ff DC AA                   		mov.W	[r10], r10
 888 0501 DF AA                   		mov.W	r10, r10
 889 0503 4F CA                   		mul	r12, r10
 890 0505 EF B1                   		mov.L	r11, r1
 891 0507 EF A2                   		mov.L	r10, r2
 892 0509 05 00 00 00             		bsr	_chsize
 893 050d EF 1A                   		mov.L	r1, r10
 894 050f 75 0A FF                		cmp	#-1, r10
 895 0512 1A                      		bne	.L69
 272:SOURCES/database.c **** 		lErrorCode = DB_ERROR_CHANGE_SIZE;
 896                             		.loc 1 272 0
 897 0513 FB A2 00 00 00 00       		mov.L	#_lErrorCode, r10
 898 0519 F8 A6 13                		mov.L	#19, [r10]
 899                             		.balign 2,3,3
 900                             	.L69:
 273:SOURCES/database.c **** 	if( GetDBErrorCode() != DB_OK )
 901                             		.loc 1 273 0
 902 051c 05 00 00 00             		bsr	_GetDBErrorCode
 903 0520 EF 1A                   		mov.L	r1, r10
 904 0522 61 0A                   		cmp	#0, r10
 905 0524 15                      		beq	.L70
 274:SOURCES/database.c **** 		return FALSE;
 906                             		.loc 1 274 0
 907 0525 66 0A                   		mov.L	#0, r10
 908 0527 2E 13                   		bra	.L59
 909                             	.L70:
 275:SOURCES/database.c **** 	dbFile->lTotalRecords--;
 910                             		.loc 1 275 0
 911 0529 ED 6A 03                		mov.L	12[r6], r10
 912 052c ED AA 03                		mov.L	12[r10], r10
 913 052f 71 AB FF                		add	#-1, r10, r11
 914 0532 ED 6A 03                		mov.L	12[r6], r10
 915 0535 E7 AB 03                		mov.L	r11, 12[r10]
 276:SOURCES/database.c **** 	return TRUE;
 916                             		.loc 1 276 0
 917 0538 66 1A                   		mov.L	#1, r10
 918                             		.balign 2,3,1
 919                             	.L59:
 277:SOURCES/database.c **** }
 920                             		.loc 1 277 0
 921 053a EF A1                   		mov.L	r10, r1
 922 053c 3F 6C 0C                		rtsd	#48, r6-r12
 923                             	.LFE13:
 925                             		.global	_WriteRecord
 927                             	_WriteRecord:
 928                             	.LFB14:
 278:SOURCES/database.c **** 
 279:SOURCES/database.c **** 
 280:SOURCES/database.c **** int WriteRecord( SDBFile *dbFile, char* record, int iFlag )
 281:SOURCES/database.c **** {
 929                             		.loc 1 281 0
 930 053f 6E 6B                   		pushm	r6-r11
 931                             	.LCFI50:
 932 0541 71 06 F0                		add	#-16, r0, r6
 933                             	.LCFI51:
 934 0544 EF 60                   		mov.L	r6, r0
 935                             	.LCFI52:
 936 0546 A0 69                   		mov.L	r1, 4[r6]
 937 0548 A0 E2                   		mov.L	r2, 8[r6]
 938 054a A0 EB                   		mov.L	r3, 12[r6]
 282:SOURCES/database.c **** 	long curr;
 283:SOURCES/database.c **** 
 284:SOURCES/database.c **** 	if( !IsFileOpen( dbFile ) )
 939                             		.loc 1 284 0
 940 054c A8 69                   		mov.L	4[r6], r1
 941 054e 39 C7 FA                		bsr	_IsFileOpen
 942 0551 EF 1A                   		mov.L	r1, r10
 943 0553 61 0A                   		cmp	#0, r10
 944 0555 21 10                   		bne	.L76
 285:SOURCES/database.c **** 	{
 286:SOURCES/database.c **** 		lErrorCode = DB_ERROR_NOT_OPEN;
 945                             		.loc 1 286 0
 946 0557 FB A2 00 00 00 00       		mov.L	#_lErrorCode, r10
 947 055d F8 A6 05                		mov.L	#5, [r10]
 287:SOURCES/database.c **** 		return FALSE;
 948                             		.loc 1 287 0
 949 0560 66 0A                   		mov.L	#0, r10
 950 0562 38 E0 00                		bra	.L77
 951                             	.L76:
 288:SOURCES/database.c **** 	}
 289:SOURCES/database.c **** 
 290:SOURCES/database.c **** 	if( iFlag == WRITE_OVER )
 952                             		.loc 1 290 0
 953 0565 ED 6A 03                		mov.L	12[r6], r10
 954 0568 61 1A                   		cmp	#1, r10
 955 056a 21 45                   		bne	.L78
 291:SOURCES/database.c **** 	{
 292:SOURCES/database.c **** 		if( (curr = GetCurrentRecord( dbFile )) == -1L )
 956                             		.loc 1 292 0
 957 056c A8 69                   		mov.L	4[r6], r1
 958 056e 05 00 00 00             		bsr	_GetCurrentRecord
 959 0572 E3 61                   		mov.L	r1, [r6]
 960 0574 EC 6A                   		mov.L	[r6], r10
 961 0576 75 0A FF                		cmp	#-1, r10
 962 0579 1E                      		bne	.L79
 293:SOURCES/database.c **** 			return FALSE;
 963                             		.loc 1 293 0
 964 057a 66 0A                   		mov.L	#0, r10
 965 057c 38 C6 00                		bra	.L77
 966                             	.L79:
 294:SOURCES/database.c **** 		//
 295:SOURCES/database.c **** 		// Jump to the position to overwrite the record
 296:SOURCES/database.c **** 		//
 297:SOURCES/database.c **** 		if( lseek( dbFile->fd, (long)(dbFile->sRecSz * curr), SEEK_SET ) == -1L)
 967                             		.loc 1 297 0
 968 057f ED 6A 01                		mov.L	4[r6], r10
 969 0582 ED AB 01                		mov.L	4[r10], r11
 970 0585 ED 6A 01                		mov.L	4[r6], r10
 971 0588 DC AA                   		mov.W	[r10], r10
 972 058a DF AA                   		mov.W	r10, r10
 973 058c EC 67                   		mov.L	[r6], r7
 974 058e 4F 7A                   		mul	r7, r10
 975 0590 EF B1                   		mov.L	r11, r1
 976 0592 EF A2                   		mov.L	r10, r2
 977 0594 66 03                   		mov.L	#0, r3
 978 0596 05 00 00 00             		bsr	_lseek
 979 059a EF 1A                   		mov.L	r1, r10
 980 059c 75 0A FF                		cmp	#-1, r10
 981 059f 21 48                   		bne	.L80
 298:SOURCES/database.c **** 		{
 299:SOURCES/database.c **** 			lErrorCode = DB_ERROR_RECORD_JMP;
 982                             		.loc 1 299 0
 983 05a1 FB A2 00 00 00 00       		mov.L	#_lErrorCode, r10
 984 05a7 F8 A6 12                		mov.L	#18, [r10]
 300:SOURCES/database.c **** 			return FALSE;
 985                             		.loc 1 300 0
 986 05aa 66 0A                   		mov.L	#0, r10
 987 05ac 38 96 00                		bra	.L77
 988                             	.L78:
 301:SOURCES/database.c **** 		}
 302:SOURCES/database.c **** 	}
 303:SOURCES/database.c **** 	else if( iFlag == WRITE_APPEND )
 989                             		.loc 1 303 0
 990 05af ED 6A 03                		mov.L	12[r6], r10
 991 05b2 61 2A                   		cmp	#2, r10
 992 05b4 21 26                   		bne	.L81
 304:SOURCES/database.c **** 	{
 305:SOURCES/database.c **** 		if( lseek( dbFile->fd, 0L, SEEK_END ) == -1L )
 993                             		.loc 1 305 0
 994 05b6 ED 6A 01                		mov.L	4[r6], r10
 995 05b9 ED AA 01                		mov.L	4[r10], r10
 996 05bc EF A1                   		mov.L	r10, r1
 997 05be 66 02                   		mov.L	#0, r2
 998 05c0 66 23                   		mov.L	#2, r3
 999 05c2 05 00 00 00             		bsr	_lseek
 1000 05c6 EF 1A                   		mov.L	r1, r10
 1001 05c8 75 0A FF                		cmp	#-1, r10
 1002 05cb 21 1C                   		bne	.L80
 306:SOURCES/database.c **** 		{
 307:SOURCES/database.c **** 			lErrorCode = DB_ERROR_RECORD_JMP;
 1003                             		.loc 1 307 0
 1004 05cd FB A2 00 00 00 00       		mov.L	#_lErrorCode, r10
 1005 05d3 F8 A6 12                		mov.L	#18, [r10]
 308:SOURCES/database.c **** 			return FALSE;
 1006                             		.loc 1 308 0
 1007 05d6 66 0A                   		mov.L	#0, r10
 1008 05d8 2E 6A                   		bra	.L77
 1009                             	.L81:
 309:SOURCES/database.c **** 		}
 310:SOURCES/database.c **** 	}
 311:SOURCES/database.c **** 	else
 312:SOURCES/database.c **** 	{
 313:SOURCES/database.c **** 		lErrorCode = DB_ERROR_INVALID_WFLAG;
 1010                             		.loc 1 313 0
 1011 05da FB A2 00 00 00 00       		mov.L	#_lErrorCode, r10
 1012 05e0 F8 A6 31                		mov.L	#49, [r10]
 314:SOURCES/database.c **** 		return FALSE;
 1013                             		.loc 1 314 0
 1014 05e3 66 0A                   		mov.L	#0, r10
 1015 05e5 2E 5D                   		bra	.L77
 1016                             	.L80:
 315:SOURCES/database.c **** 	}
 316:SOURCES/database.c **** 
 317:SOURCES/database.c **** 	if( write( dbFile->fd, record, dbFile->sRecSz ) != dbFile->sRecSz )
 1017                             		.loc 1 317 0
 1018 05e7 ED 6A 01                		mov.L	4[r6], r10
 1019 05ea ED AB 01                		mov.L	4[r10], r11
 1020 05ed ED 6A 01                		mov.L	4[r6], r10
 1021 05f0 DC AA                   		mov.W	[r10], r10
 1022 05f2 DF AA                   		mov.W	r10, r10
 1023 05f4 EF B1                   		mov.L	r11, r1
 1024 05f6 A8 E2                   		mov.L	8[r6], r2
 1025 05f8 EF A3                   		mov.L	r10, r3
 1026 05fa 05 00 00 00             		bsr	_write
 1027 05fe EF 1B                   		mov.L	r1, r11
 1028 0600 ED 6A 01                		mov.L	4[r6], r10
 1029 0603 DC AA                   		mov.W	[r10], r10
 1030 0605 DF AA                   		mov.W	r10, r10
 1031 0607 47 AB                   		cmp	r10, r11
 1032 0609 20 0F                   		beq	.L82
 318:SOURCES/database.c **** 	{
 319:SOURCES/database.c **** 		lErrorCode = DB_ERROR_WRITE_FILE;
 1033                             		.loc 1 319 0
 1034 060b FB A2 00 00 00 00       		mov.L	#_lErrorCode, r10
 1035 0611 F8 A6 30                		mov.L	#48, [r10]
 320:SOURCES/database.c **** 		return FALSE;
 1036                             		.loc 1 320 0
 1037 0614 66 0A                   		mov.L	#0, r10
 1038 0616 2E 2C                   		bra	.L77
 1039                             	.L82:
 321:SOURCES/database.c **** 	}
 322:SOURCES/database.c **** 
 323:SOURCES/database.c **** 	if( iFlag == WRITE_APPEND )
 1040                             		.loc 1 323 0
 1041 0618 ED 6A 03                		mov.L	12[r6], r10
 1042 061b 61 2A                   		cmp	#2, r10
 1043 061d 21 23                   		bne	.L83
 324:SOURCES/database.c **** 	{
 325:SOURCES/database.c **** 		dbFile->lTotalRecords++;
 1044                             		.loc 1 325 0
 1045 061f ED 6A 01                		mov.L	4[r6], r10
 1046 0622 ED AA 03                		mov.L	12[r10], r10
 1047 0625 71 AB 01                		add	#1, r10, r11
 1048 0628 ED 6A 01                		mov.L	4[r6], r10
 1049 062b E7 AB 03                		mov.L	r11, 12[r10]
 326:SOURCES/database.c **** 		GotoRecord( dbFile, GetTotalRecords( dbFile ) -1L );
 1050                             		.loc 1 326 0
 1051 062e A8 69                   		mov.L	4[r6], r1
 1052 0630 05 00 00 00             		bsr	_GetTotalRecords
 1053 0634 EF 1A                   		mov.L	r1, r10
 1054 0636 60 1A                   		sub	#1, r10
 1055 0638 A8 69                   		mov.L	4[r6], r1
 1056 063a EF A2                   		mov.L	r10, r2
 1057 063c 05 00 00 00             		bsr	_GotoRecord
 1058                             		.balign 2,3,1
 1059                             	.L83:
 327:SOURCES/database.c **** 	}
 328:SOURCES/database.c **** 
 329:SOURCES/database.c **** 	return TRUE;
 1060                             		.loc 1 329 0
 1061 0640 66 1A                   		mov.L	#1, r10
 1062                             		.balign 2,3,1
 1063                             	.L77:
 330:SOURCES/database.c **** }
 1064                             		.loc 1 330 0
 1065 0642 EF A1                   		mov.L	r10, r1
 1066 0644 3F 6B 0A                		rtsd	#40, r6-r11
 1067                             	.LFE14:
 1069                             		.global	_InsertionSort
 1071                             	_InsertionSort:
 1072                             	.LFB15:
 331:SOURCES/database.c **** 
 332:SOURCES/database.c **** 
 333:SOURCES/database.c **** // ++++++++++++++++++++++++++++++++++++++
 334:SOURCES/database.c **** // Sorting database fuctions
 335:SOURCES/database.c **** // ++++++++++++++++++++++++++++++++++++++
 336:SOURCES/database.c **** 
 337:SOURCES/database.c **** //
 338:SOURCES/database.c **** // Insertion sort is a very fast sorting method for almost sorted databases
 339:SOURCES/database.c **** //
 340:SOURCES/database.c **** int InsertionSort( SDBFile *dbFile, short offset, short checksize )
 341:SOURCES/database.c **** {
 1073                             		.loc 1 341 0
 1074 0647 6E 6C                   		pushm	r6-r12
 1075                             	.LCFI53:
 1076 0649 71 06 E4                		add	#-28, r0, r6
 1077                             	.LCFI54:
 1078 064c EF 60                   		mov.L	r6, r0
 1079                             	.LCFI55:
 1080 064e A1 69                   		mov.L	r1, 20[r6]
 1081 0650 93 62                   		mov.W	r2, 24[r6]
 1082 0652 93 6B                   		mov.W	r3, 26[r6]
 342:SOURCES/database.c **** 	long i, j;
 343:SOURCES/database.c **** 	long totalrecords;
 344:SOURCES/database.c **** 	char* temp1;
 345:SOURCES/database.c **** 	char* temp2;
 346:SOURCES/database.c **** 
 347:SOURCES/database.c **** 	if( ( totalrecords = GetTotalRecords( dbFile )) == -1L )
 1083                             		.loc 1 347 0
 1084 0654 A9 69                   		mov.L	20[r6], r1
 1085 0656 05 00 00 00             		bsr	_GetTotalRecords
 1086 065a A0 E1                   		mov.L	r1, 8[r6]
 1087 065c ED 6A 02                		mov.L	8[r6], r10
 1088 065f 75 0A FF                		cmp	#-1, r10
 1089 0662 1E                      		bne	.L85
 348:SOURCES/database.c **** 		return FALSE;
 1090                             		.loc 1 348 0
 1091 0663 66 0A                   		mov.L	#0, r10
 1092 0665 38 79 01                		bra	.L86
 1093                             	.L85:
 349:SOURCES/database.c **** 
 350:SOURCES/database.c **** 	if( dbFile->sRecSz < (checksize+offset) )
 1094                             		.loc 1 350 0
 1095 0668 ED 6A 05                		mov.L	20[r6], r10
 1096 066b DC AA                   		mov.W	[r10], r10
 1097 066d DF AB                   		mov.W	r10, r11
 1098 066f DD 6C 0D                		mov.W	26[r6], r12
 1099 0672 DD 6A 0C                		mov.W	24[r6], r10
 1100 0675 4B CA                   		add	r12, r10
 1101 0677 47 AB                   		cmp	r10, r11
 1102 0679 28 11                   		bge	.L87
 351:SOURCES/database.c **** 	{
 352:SOURCES/database.c **** 		lErrorCode = DB_ERROR_SORTLENGTH;
 1103                             		.loc 1 352 0
 1104 067b FB A2 00 00 00 00       		mov.L	#_lErrorCode, r10
 1105 0681 F8 AA 00 01             		mov.L	#0x100, [r10]
 353:SOURCES/database.c **** 		return FALSE;
 1106                             		.loc 1 353 0
 1107 0685 66 0A                   		mov.L	#0, r10
 1108 0687 38 57 01                		bra	.L86
 1109                             	.L87:
 354:SOURCES/database.c **** 	}
 355:SOURCES/database.c **** 
 356:SOURCES/database.c **** 	lErrorCode = DB_ERROR_MEM;
 1110                             		.loc 1 356 0
 1111 068a FB A2 00 00 00 00       		mov.L	#_lErrorCode, r10
 1112 0690 F8 A6 50                		mov.L	#0x50, [r10]
 357:SOURCES/database.c **** 	if( (temp1 = (char*) malloc( (unsigned int)dbFile->sRecSz)) == NULL )
 1113                             		.loc 1 357 0
 1114 0693 ED 6A 05                		mov.L	20[r6], r10
 1115 0696 DC AA                   		mov.W	[r10], r10
 1116 0698 DF AA                   		mov.W	r10, r10
 1117 069a EF A1                   		mov.L	r10, r1
 1118 069c 05 00 00 00             		bsr	_malloc
 1119 06a0 EF 1A                   		mov.L	r1, r10
 1120 06a2 E7 6A 03                		mov.L	r10, 12[r6]
 1121 06a5 ED 6A 03                		mov.L	12[r6], r10
 1122 06a8 61 0A                   		cmp	#0, r10
 1123 06aa 3A 24 01                		beq	.L108
 1124 06ad 03                      		.balign 2,3,1
 1125                             	.L88:
 358:SOURCES/database.c **** 		goto Clean1;
 359:SOURCES/database.c **** 
 360:SOURCES/database.c **** 	if( (temp2 = (char*) malloc( (unsigned int)dbFile->sRecSz)) == NULL )
 1126                             		.loc 1 360 0
 1127 06ae ED 6A 05                		mov.L	20[r6], r10
 1128 06b1 DC AA                   		mov.W	[r10], r10
 1129 06b3 DF AA                   		mov.W	r10, r10
 1130 06b5 EF A1                   		mov.L	r10, r1
 1131 06b7 05 00 00 00             		bsr	_malloc
 1132 06bb EF 1A                   		mov.L	r1, r10
 1133 06bd E7 6A 04                		mov.L	r10, 16[r6]
 1134 06c0 ED 6A 04                		mov.L	16[r6], r10
 1135 06c3 61 0A                   		cmp	#0, r10
 1136 06c5 3A FF 00                		beq	.L109
 1137                             		.balign 2,3,5
 1138                             	.L90:
 361:SOURCES/database.c **** 		goto Clean2;
 362:SOURCES/database.c **** 	lErrorCode = DB_OK;
 1139                             		.loc 1 362 0
 1140 06c8 FB A2 00 00 00 00       		mov.L	#_lErrorCode, r10
 1141 06ce F8 A6 00                		mov.L	#0, [r10]
 363:SOURCES/database.c **** 	for( i = 1L; i < totalrecords; i++ )
 1142                             		.loc 1 363 0
 1143 06d1 3E 60 01                		mov.L	#1, [r6]
 1144 06d4 38 C6 00                		bra	.L92
 1145                             	.L106:
 364:SOURCES/database.c **** 	{
 365:SOURCES/database.c **** 		if( !GotoRecord( dbFile, i ))
 1146                             		.loc 1 365 0
 1147 06d7 A9 69                   		mov.L	20[r6], r1
 1148 06d9 EC 62                   		mov.L	[r6], r2
 1149 06db 05 00 00 00             		bsr	_GotoRecord
 1150 06df EF 1A                   		mov.L	r1, r10
 1151 06e1 61 0A                   		cmp	#0, r10
 1152 06e3 3A C5 00                		beq	.L110
 1153                             		.balign 2,3,1
 1154                             	.L93:
 366:SOURCES/database.c **** 			goto CleanAll;
 367:SOURCES/database.c **** 		if( !ReadCurrentRecord( dbFile, temp1 ))
 1155                             		.loc 1 367 0
 1156 06e6 A9 69                   		mov.L	20[r6], r1
 1157 06e8 A8 EA                   		mov.L	12[r6], r2
 1158 06ea 05 00 00 00             		bsr	_ReadCurrentRecord
 1159 06ee EF 1A                   		mov.L	r1, r10
 1160 06f0 61 0A                   		cmp	#0, r10
 1161 06f2 3A B9 00                		beq	.L111
 1162 06f5 03                      		.balign 2,3,1
 1163                             	.L95:
 368:SOURCES/database.c **** 			goto CleanAll;
 369:SOURCES/database.c **** 		j = i;
 1164                             		.loc 1 369 0
 1165 06f6 EC 6A                   		mov.L	[r6], r10
 1166 06f8 E7 6A 01                		mov.L	r10, 4[r6]
 370:SOURCES/database.c **** 		while( j > 0L )
 1167                             		.loc 1 370 0
 1168 06fb 2E 71                   		bra	.L96
 1169                             	.L103:
 371:SOURCES/database.c **** 		{
 372:SOURCES/database.c **** 			if( !GotoRecord( dbFile, (j-1L) ))
 1170                             		.loc 1 372 0
 1171 06fd ED 6A 01                		mov.L	4[r6], r10
 1172 0700 60 1A                   		sub	#1, r10
 1173 0702 A9 69                   		mov.L	20[r6], r1
 1174 0704 EF A2                   		mov.L	r10, r2
 1175 0706 05 00 00 00             		bsr	_GotoRecord
 1176 070a EF 1A                   		mov.L	r1, r10
 1177 070c 61 0A                   		cmp	#0, r10
 1178 070e 3A A0 00                		beq	.L112
 1179 0711 03                      		.balign 2,3,1
 1180                             	.L97:
 373:SOURCES/database.c **** 				goto CleanAll;
 374:SOURCES/database.c **** 			if( !ReadCurrentRecord( dbFile, temp2 ))
 1181                             		.loc 1 374 0
 1182 0712 A9 69                   		mov.L	20[r6], r1
 1183 0714 A9 62                   		mov.L	16[r6], r2
 1184 0716 05 00 00 00             		bsr	_ReadCurrentRecord
 1185 071a EF 1A                   		mov.L	r1, r10
 1186 071c 61 0A                   		cmp	#0, r10
 1187 071e 3A 93 00                		beq	.L113
 1188 0721 03                      		.balign 2,3,5
 1189                             	.L98:
 375:SOURCES/database.c **** 				goto CleanAll;
 376:SOURCES/database.c **** 
 377:SOURCES/database.c **** 			if( memcmp( temp1+offset, temp2+offset, checksize) > 0 )
 1190                             		.loc 1 377 0
 1191 0722 DD 6A 0C                		mov.W	24[r6], r10
 1192 0725 ED 6B 03                		mov.L	12[r6], r11
 1193 0728 FF 2C AB                		add	r10, r11, r12
 1194 072b DD 6A 0C                		mov.W	24[r6], r10
 1195 072e ED 6B 04                		mov.L	16[r6], r11
 1196 0731 4B AB                   		add	r10, r11
 1197 0733 DD 6A 0D                		mov.W	26[r6], r10
 1198 0736 EF C1                   		mov.L	r12, r1
 1199 0738 EF B2                   		mov.L	r11, r2
 1200 073a EF A3                   		mov.L	r10, r3
 1201 073c 05 00 00 00             		bsr	_memcmp
 1202 0740 EF 1A                   		mov.L	r1, r10
 1203 0742 61 0A                   		cmp	#0, r10
 1204 0744 2A 30                   		bgt	.L114
 1205                             		.balign 2,3,1
 1206                             	.L99:
 378:SOURCES/database.c **** 				break;
 379:SOURCES/database.c **** 
 380:SOURCES/database.c **** 			if( !GotoRecord( dbFile, j ))
 1207                             		.loc 1 380 0
 1208 0746 A9 69                   		mov.L	20[r6], r1
 1209 0748 A8 6A                   		mov.L	4[r6], r2
 1210 074a 05 00 00 00             		bsr	_GotoRecord
 1211 074e EF 1A                   		mov.L	r1, r10
 1212 0750 61 0A                   		cmp	#0, r10
 1213 0752 20 61                   		beq	.L115
 1214                             		.balign 2,3,1
 1215                             	.L101:
 381:SOURCES/database.c **** 				goto CleanAll;
 382:SOURCES/database.c **** 			if( !WriteRecord( dbFile, temp2, WRITE_OVER ))
 1216                             		.loc 1 382 0
 1217 0754 A9 69                   		mov.L	20[r6], r1
 1218 0756 A9 62                   		mov.L	16[r6], r2
 1219 0758 66 13                   		mov.L	#1, r3
 1220 075a 05 00 00 00             		bsr	_WriteRecord
 1221 075e EF 1A                   		mov.L	r1, r10
 1222 0760 61 0A                   		cmp	#0, r10
 1223 0762 20 53                   		beq	.L116
 1224                             		.balign 2,3,1
 1225                             	.L102:
 383:SOURCES/database.c **** 				goto CleanAll;
 384:SOURCES/database.c **** 			j--;
 1226                             		.loc 1 384 0
 1227 0764 ED 6A 01                		mov.L	4[r6], r10
 1228 0767 60 1A                   		sub	#1, r10
 1229 0769 E7 6A 01                		mov.L	r10, 4[r6]
 1230                             		.balign 2,3,1
 1231                             	.L96:
 370:SOURCES/database.c **** 		while( j > 0L )
 1232                             		.loc 1 370 0 discriminator 1
 1233 076c ED 6A 01                		mov.L	4[r6], r10
 1234 076f 61 0A                   		cmp	#0, r10
 1235 0771 2A 8C                   		bgt	.L103
 1236 0773 0B                      		bra	.L100
 1237                             	.L114:
 378:SOURCES/database.c **** 				break;
 1238                             		.loc 1 378 0
 1239 0774 03                      		nop
 1240 0775 03                      		.balign 2,3,1
 1241                             	.L100:
 385:SOURCES/database.c **** 		}
 386:SOURCES/database.c **** 		if( !GotoRecord( dbFile, j ))
 1242                             		.loc 1 386 0
 1243 0776 A9 69                   		mov.L	20[r6], r1
 1244 0778 A8 6A                   		mov.L	4[r6], r2
 1245 077a 05 00 00 00             		bsr	_GotoRecord
 1246 077e EF 1A                   		mov.L	r1, r10
 1247 0780 61 0A                   		cmp	#0, r10
 1248 0782 20 35                   		beq	.L117
 1249                             		.balign 2,3,1
 1250                             	.L104:
 387:SOURCES/database.c **** 			goto CleanAll;
 388:SOURCES/database.c **** 		if( !WriteRecord( dbFile, temp1, WRITE_OVER ))
 1251                             		.loc 1 388 0
 1252 0784 A9 69                   		mov.L	20[r6], r1
 1253 0786 A8 EA                   		mov.L	12[r6], r2
 1254 0788 66 13                   		mov.L	#1, r3
 1255 078a 05 00 00 00             		bsr	_WriteRecord
 1256 078e EF 1A                   		mov.L	r1, r10
 1257 0790 61 0A                   		cmp	#0, r10
 1258 0792 20 28                   		beq	.L118
 1259                             		.balign 2,3,1
 1260                             	.L105:
 363:SOURCES/database.c **** 	for( i = 1L; i < totalrecords; i++ )
 1261                             		.loc 1 363 0
 1262 0794 EC 6A                   		mov.L	[r6], r10
 1263 0796 62 1A                   		add	#1, r10
 1264 0798 E3 6A                   		mov.L	r10, [r6]
 1265                             		.balign 2,3,1
 1266                             	.L92:
 363:SOURCES/database.c **** 	for( i = 1L; i < totalrecords; i++ )
 1267                             		.loc 1 363 0 is_stmt 0 discriminator 1
 1268 079a EC 6B                   		mov.L	[r6], r11
 1269 079c ED 6A 02                		mov.L	8[r6], r10
 1270 079f 47 AB                   		cmp	r10, r11
 1271 07a1 28 05 38 34 FF          		blt	.L106
 1272 07a6 2E 16                   		bra	.L94
 1273                             	.L110:
 366:SOURCES/database.c **** 			goto CleanAll;
 1274                             		.loc 1 366 0 is_stmt 1
 1275 07a8 03                      		nop
 1276 07a9 2E 13                   		bra	.L94
 1277                             	.L111:
 368:SOURCES/database.c **** 			goto CleanAll;
 1278                             		.loc 1 368 0
 1279 07ab 03                      		nop
 1280 07ac 2E 10                   		bra	.L94
 1281                             	.L112:
 373:SOURCES/database.c **** 				goto CleanAll;
 1282                             		.loc 1 373 0
 1283 07ae 03                      		nop
 1284 07af 2E 0D                   		bra	.L94
 1285                             	.L113:
 375:SOURCES/database.c **** 				goto CleanAll;
 1286                             		.loc 1 375 0
 1287 07b1 03                      		nop
 1288 07b2 0A                      		bra	.L94
 1289                             	.L115:
 381:SOURCES/database.c **** 				goto CleanAll;
 1290                             		.loc 1 381 0
 1291 07b3 03                      		nop
 1292 07b4 08                      		bra	.L94
 1293                             	.L116:
 383:SOURCES/database.c **** 				goto CleanAll;
 1294                             		.loc 1 383 0
 1295 07b5 03                      		nop
 1296 07b6 0E                      		bra	.L94
 1297                             	.L117:
 387:SOURCES/database.c **** 			goto CleanAll;
 1298                             		.loc 1 387 0
 1299 07b7 03                      		nop
 1300 07b8 2E 04                   		bra	.L94
 1301                             	.L118:
 389:SOURCES/database.c **** 			goto CleanAll;
 1302                             		.loc 1 389 0
 1303 07ba 03                      		nop
 1304 07bb 03                      		.balign 2,3,1
 1305                             	.L94:
 390:SOURCES/database.c **** 	}
 391:SOURCES/database.c **** 
 392:SOURCES/database.c **** CleanAll:
 393:SOURCES/database.c **** 	free( temp2 );
 1306                             		.loc 1 393 0
 1307 07bc A9 61                   		mov.L	16[r6], r1
 1308 07be 05 00 00 00             		bsr	_free
 1309 07c2 2E 04                   		bra	.L91
 1310                             	.L109:
 361:SOURCES/database.c **** 		goto Clean2;
 1311                             		.loc 1 361 0
 1312 07c4 03                      		nop
 1313 07c5 03                      		.balign 2,3,1
 1314                             	.L91:
 394:SOURCES/database.c **** Clean2:
 395:SOURCES/database.c **** 	free( temp1 );
 1315                             		.loc 1 395 0
 1316 07c6 A8 E9                   		mov.L	12[r6], r1
 1317 07c8 05 00 00 00             		bsr	_free
 1318 07cc 2E 04                   		bra	.L89
 1319                             	.L108:
 358:SOURCES/database.c **** 		goto Clean1;
 1320                             		.loc 1 358 0
 1321 07ce 03                      		nop
 1322 07cf 03                      		.balign 2,3,3
 1323                             	.L89:
 396:SOURCES/database.c **** Clean1:
 397:SOURCES/database.c **** 	if( GetDBErrorCode() != DB_OK )
 1324                             		.loc 1 397 0
 1325 07d0 05 00 00 00             		bsr	_GetDBErrorCode
 1326 07d4 EF 1A                   		mov.L	r1, r10
 1327 07d6 61 0A                   		cmp	#0, r10
 1328 07d8 14                      		beq	.L107
 398:SOURCES/database.c **** 		return FALSE;
 1329                             		.loc 1 398 0
 1330 07d9 66 0A                   		mov.L	#0, r10
 1331 07db 0B                      		bra	.L86
 1332                             	.L107:
 399:SOURCES/database.c **** 	return TRUE;
 1333                             		.loc 1 399 0
 1334 07dc 66 1A                   		mov.L	#1, r10
 1335                             		.balign 2,3,1
 1336                             	.L86:
 400:SOURCES/database.c **** }
 1337                             		.loc 1 400 0
 1338 07de EF A1                   		mov.L	r10, r1
 1339 07e0 3F 6C 0E                		rtsd	#56, r6-r12
 1340                             	.LFE15:
 1343                             	_downheap:
 1344                             	.LFB16:
 401:SOURCES/database.c **** 
 402:SOURCES/database.c **** 
 403:SOURCES/database.c **** //
 404:SOURCES/database.c **** // Heap sort helper function
 405:SOURCES/database.c **** //
 406:SOURCES/database.c **** static int downheap( SDBFile *dbFile, long max_records, long k, short offset, short checksize, char
 407:SOURCES/database.c **** {
 1345                             		.loc 1 407 0
 1346 07e3 6E 6D                   		pushm	r6-r13
 1347                             	.LCFI56:
 1348 07e5 71 06 D8                		add	#-40, r0, r6
 1349                             	.LCFI57:
 1350 07e8 EF 60                   		mov.L	r6, r0
 1351                             	.LCFI58:
 1352 07ea 75 4A 4C                		mov.L	#0x4c, r10
 1353 07ed 4B 6A                   		add	r6, r10
 1354 07ef A0 E1                   		mov.L	r1, 8[r6]
 1355 07f1 A0 EA                   		mov.L	r2, 12[r6]
 1356 07f3 A1 63                   		mov.L	r3, 16[r6]
 1357 07f5 92 E4                   		mov.W	r4, 20[r6]
 408:SOURCES/database.c **** 	long j, N2;
 409:SOURCES/database.c **** 
 410:SOURCES/database.c **** 	if( !GotoRecord( dbFile, (k-1L)))
 1358                             		.loc 1 410 0
 1359 07f7 ED 6B 04                		mov.L	16[r6], r11
 1360 07fa 60 1B                   		sub	#1, r11
 1361 07fc A8 E1                   		mov.L	8[r6], r1
 1362 07fe EF B2                   		mov.L	r11, r2
 1363 0800 05 00 00 00             		bsr	_GotoRecord
 1364 0804 EF 1B                   		mov.L	r1, r11
 1365 0806 61 0B                   		cmp	#0, r11
 1366 0808 1E                      		bne	.L120
 411:SOURCES/database.c **** 		return FALSE;
 1367                             		.loc 1 411 0
 1368 0809 66 0A                   		mov.L	#0, r10
 1369 080b 38 4D 01                		bra	.L121
 1370                             	.L120:
 412:SOURCES/database.c **** 	if( !ReadCurrentRecord( dbFile, tmp1 ))
 1371                             		.loc 1 412 0
 1372 080e A8 E1                   		mov.L	8[r6], r1
 1373 0810 ED A2 01                		mov.L	4[r10], r2
 1374 0813 05 00 00 00             		bsr	_ReadCurrentRecord
 1375 0817 EF 1B                   		mov.L	r1, r11
 1376 0819 61 0B                   		cmp	#0, r11
 1377 081b 1E                      		bne	.L122
 413:SOURCES/database.c **** 		return FALSE;
 1378                             		.loc 1 413 0
 1379 081c 66 0A                   		mov.L	#0, r10
 1380 081e 38 3A 01                		bra	.L121
 1381                             	.L122:
 414:SOURCES/database.c **** 
 415:SOURCES/database.c **** 	N2 = max_records >> 1;
 1382                             		.loc 1 415 0
 1383 0821 ED 6B 03                		mov.L	12[r6], r11
 1384 0824 6A 1B                   		shar	#1, r11
 1385 0826 E7 6B 01                		mov.L	r11, 4[r6]
 416:SOURCES/database.c **** 	while( k <= N2)
 1386                             		.loc 1 416 0
 1387 0829 38 F3 00                		bra	.L123
 1388                             	.L133:
 417:SOURCES/database.c **** 	{
 418:SOURCES/database.c **** 		j = k + k;
 1389                             		.loc 1 418 0
 1390 082c ED 6B 04                		mov.L	16[r6], r11
 1391 082f 06 89 6B 04             		add	16[r6].L, r11
 1392 0833 E3 6B                   		mov.L	r11, [r6]
 419:SOURCES/database.c **** 
 420:SOURCES/database.c **** 		if( !GotoRecord( dbFile, (j-1L)))
 1393                             		.loc 1 420 0
 1394 0835 EC 6B                   		mov.L	[r6], r11
 1395 0837 60 1B                   		sub	#1, r11
 1396 0839 A8 E1                   		mov.L	8[r6], r1
 1397 083b EF B2                   		mov.L	r11, r2
 1398 083d 05 00 00 00             		bsr	_GotoRecord
 1399 0841 EF 1B                   		mov.L	r1, r11
 1400 0843 61 0B                   		cmp	#0, r11
 1401 0845 1E                      		bne	.L124
 421:SOURCES/database.c **** 			return FALSE;
 1402                             		.loc 1 421 0
 1403 0846 66 0A                   		mov.L	#0, r10
 1404 0848 38 10 01                		bra	.L121
 1405                             	.L124:
 422:SOURCES/database.c **** 		if( !ReadCurrentRecord( dbFile, tmp2 ))
 1406                             		.loc 1 422 0
 1407 084b A8 E1                   		mov.L	8[r6], r1
 1408 084d ED A2 02                		mov.L	8[r10], r2
 1409 0850 05 00 00 00             		bsr	_ReadCurrentRecord
 1410 0854 EF 1B                   		mov.L	r1, r11
 1411 0856 61 0B                   		cmp	#0, r11
 1412 0858 1E                      		bne	.L125
 423:SOURCES/database.c **** 			return FALSE;
 1413                             		.loc 1 423 0
 1414 0859 66 0A                   		mov.L	#0, r10
 1415 085b 38 FD 00                		bra	.L121
 1416                             	.L125:
 424:SOURCES/database.c **** 
 425:SOURCES/database.c **** 		if( j < max_records )
 1417                             		.loc 1 425 0
 1418 085e EC 6C                   		mov.L	[r6], r12
 1419 0860 ED 6B 03                		mov.L	12[r6], r11
 1420 0863 47 BC                   		cmp	r11, r12
 1421 0865 28 63                   		bge	.L126
 426:SOURCES/database.c **** 		{
 427:SOURCES/database.c **** 			if( !GotoRecord( dbFile, j))
 1422                             		.loc 1 427 0
 1423 0867 A8 E1                   		mov.L	8[r6], r1
 1424 0869 EC 62                   		mov.L	[r6], r2
 1425 086b 05 00 00 00             		bsr	_GotoRecord
 1426 086f EF 1B                   		mov.L	r1, r11
 1427 0871 61 0B                   		cmp	#0, r11
 1428 0873 1E                      		bne	.L127
 428:SOURCES/database.c **** 				return FALSE;
 1429                             		.loc 1 428 0
 1430 0874 66 0A                   		mov.L	#0, r10
 1431 0876 38 E2 00                		bra	.L121
 1432                             	.L127:
 429:SOURCES/database.c **** 			if( !ReadCurrentRecord( dbFile, tmp3 ))
 1433                             		.loc 1 429 0
 1434 0879 A8 E1                   		mov.L	8[r6], r1
 1435 087b ED A2 03                		mov.L	12[r10], r2
 1436 087e 05 00 00 00             		bsr	_ReadCurrentRecord
 1437 0882 EF 1B                   		mov.L	r1, r11
 1438 0884 61 0B                   		cmp	#0, r11
 1439 0886 1E                      		bne	.L128
 430:SOURCES/database.c **** 				return FALSE;
 1440                             		.loc 1 430 0
 1441 0887 66 0A                   		mov.L	#0, r10
 1442 0889 38 CF 00                		bra	.L121
 1443                             	.L128:
 431:SOURCES/database.c **** 
 432:SOURCES/database.c **** 			if( memcmp( tmp2 + offset, tmp3 + offset, checksize ) < 0 )
 1444                             		.loc 1 432 0
 1445 088c DD 6B 0A                		mov.W	20[r6], r11
 1446 088f ED AC 02                		mov.L	8[r10], r12
 1447 0892 FF 2D BC                		add	r11, r12, r13
 1448 0895 DD 6B 0A                		mov.W	20[r6], r11
 1449 0898 ED AC 03                		mov.L	12[r10], r12
 1450 089b 4B BC                   		add	r11, r12
 1451 089d DC AB                   		mov.W	[r10], r11
 1452 089f EF D1                   		mov.L	r13, r1
 1453 08a1 EF C2                   		mov.L	r12, r2
 1454 08a3 EF B3                   		mov.L	r11, r3
 1455 08a5 05 00 00 00             		bsr	_memcmp
 1456 08a9 EF 1B                   		mov.L	r1, r11
 1457 08ab 61 0B                   		cmp	#0, r11
 1458 08ad 28 1B                   		bge	.L126
 433:SOURCES/database.c **** 			{
 434:SOURCES/database.c **** 				memmove( tmp2, tmp3, dbFile->sRecSz );
 1459                             		.loc 1 434 0
 1460 08af ED 6B 02                		mov.L	8[r6], r11
 1461 08b2 DC BB                   		mov.W	[r11], r11
 1462 08b4 DF BB                   		mov.W	r11, r11
 1463 08b6 ED A1 02                		mov.L	8[r10], r1
 1464 08b9 ED A2 03                		mov.L	12[r10], r2
 1465 08bc EF B3                   		mov.L	r11, r3
 1466 08be 05 00 00 00             		bsr	_memmove
 435:SOURCES/database.c **** 				j++;
 1467                             		.loc 1 435 0
 1468 08c2 EC 6B                   		mov.L	[r6], r11
 1469 08c4 62 1B                   		add	#1, r11
 1470 08c6 E3 6B                   		mov.L	r11, [r6]
 1471                             		.balign 2,3,1
 1472                             	.L126:
 436:SOURCES/database.c **** 			}
 437:SOURCES/database.c **** 		}
 438:SOURCES/database.c **** 		if( !GotoRecord( dbFile, k-1L))
 1473                             		.loc 1 438 0
 1474 08c8 ED 6B 04                		mov.L	16[r6], r11
 1475 08cb 60 1B                   		sub	#1, r11
 1476 08cd A8 E1                   		mov.L	8[r6], r1
 1477 08cf EF B2                   		mov.L	r11, r2
 1478 08d1 05 00 00 00             		bsr	_GotoRecord
 1479 08d5 EF 1B                   		mov.L	r1, r11
 1480 08d7 61 0B                   		cmp	#0, r11
 1481 08d9 1D                      		bne	.L129
 439:SOURCES/database.c **** 			return FALSE;
 1482                             		.loc 1 439 0
 1483 08da 66 0A                   		mov.L	#0, r10
 1484 08dc 2E 7C                   		bra	.L121
 1485                             	.L129:
 440:SOURCES/database.c **** 
 441:SOURCES/database.c **** 		if( memcmp( tmp1+offset, tmp2+offset, checksize ) >= 0 )
 1486                             		.loc 1 441 0
 1487 08de DD 6B 0A                		mov.W	20[r6], r11
 1488 08e1 ED AC 01                		mov.L	4[r10], r12
 1489 08e4 FF 2D BC                		add	r11, r12, r13
 1490 08e7 DD 6B 0A                		mov.W	20[r6], r11
 1491 08ea ED AC 02                		mov.L	8[r10], r12
 1492 08ed 4B BC                   		add	r11, r12
 1493 08ef DC AB                   		mov.W	[r10], r11
 1494 08f1 EF D1                   		mov.L	r13, r1
 1495 08f3 EF C2                   		mov.L	r12, r2
 1496 08f5 EF B3                   		mov.L	r11, r3
 1497 08f7 05 00 00 00             		bsr	_memcmp
 1498 08fb EF 1B                   		mov.L	r1, r11
 1499 08fd 61 0B                   		cmp	#0, r11
 1500 08ff 28 2C                   		bge	.L136
 1501 0901 03                      		.balign 2,3,1
 1502                             	.L130:
 442:SOURCES/database.c **** 			break;
 443:SOURCES/database.c **** 
 444:SOURCES/database.c **** 		if( !WriteRecord( dbFile, tmp2, WRITE_OVER ))
 1503                             		.loc 1 444 0
 1504 0902 A8 E1                   		mov.L	8[r6], r1
 1505 0904 ED A2 02                		mov.L	8[r10], r2
 1506 0907 66 13                   		mov.L	#1, r3
 1507 0909 05 00 00 00             		bsr	_WriteRecord
 1508 090d EF 1B                   		mov.L	r1, r11
 1509 090f 61 0B                   		cmp	#0, r11
 1510 0911 1D                      		bne	.L132
 445:SOURCES/database.c **** 			return FALSE;
 1511                             		.loc 1 445 0
 1512 0912 66 0A                   		mov.L	#0, r10
 1513 0914 2E 44                   		bra	.L121
 1514                             	.L132:
 446:SOURCES/database.c **** 		k = j;
 1515                             		.loc 1 446 0
 1516 0916 EC 6B                   		mov.L	[r6], r11
 1517 0918 E7 6B 04                		mov.L	r11, 16[r6]
 1518 091b 03                      		.balign 2,3,1
 1519                             	.L123:
 416:SOURCES/database.c **** 	while( k <= N2)
 1520                             		.loc 1 416 0 discriminator 1
 1521 091c ED 6C 04                		mov.L	16[r6], r12
 1522 091f ED 6B 01                		mov.L	4[r6], r11
 1523 0922 47 BC                   		cmp	r11, r12
 1524 0924 2A 05 38 06 FF          		ble	.L133
 1525 0929 2E 03                   		bra	.L131
 1526                             	.L136:
 442:SOURCES/database.c **** 			break;
 1527                             		.loc 1 442 0
 1528 092b 03                      		nop
 1529                             		.balign 2,3,1
 1530                             	.L131:
 447:SOURCES/database.c **** 	}
 448:SOURCES/database.c **** 	if( !GotoRecord( dbFile, k-1L))
 1531                             		.loc 1 448 0
 1532 092c ED 6B 04                		mov.L	16[r6], r11
 1533 092f 60 1B                   		sub	#1, r11
 1534 0931 A8 E1                   		mov.L	8[r6], r1
 1535 0933 EF B2                   		mov.L	r11, r2
 1536 0935 05 00 00 00             		bsr	_GotoRecord
 1537 0939 EF 1B                   		mov.L	r1, r11
 1538 093b 61 0B                   		cmp	#0, r11
 1539 093d 1D                      		bne	.L134
 449:SOURCES/database.c **** 		return FALSE;
 1540                             		.loc 1 449 0
 1541 093e 66 0A                   		mov.L	#0, r10
 1542 0940 2E 18                   		bra	.L121
 1543                             	.L134:
 450:SOURCES/database.c **** 
 451:SOURCES/database.c **** 	if( !WriteRecord( dbFile, tmp1, WRITE_OVER ))
 1544                             		.loc 1 451 0
 1545 0942 A8 E1                   		mov.L	8[r6], r1
 1546 0944 ED A2 01                		mov.L	4[r10], r2
 1547 0947 66 13                   		mov.L	#1, r3
 1548 0949 05 00 00 00             		bsr	_WriteRecord
 1549 094d EF 1A                   		mov.L	r1, r10
 1550 094f 61 0A                   		cmp	#0, r10
 1551 0951 1C                      		bne	.L135
 452:SOURCES/database.c **** 			return FALSE;
 1552                             		.loc 1 452 0
 1553 0952 66 0A                   		mov.L	#0, r10
 1554 0954 0C                      		bra	.L121
 1555                             	.L135:
 453:SOURCES/database.c **** 
 454:SOURCES/database.c **** 	return TRUE;
 1556                             		.loc 1 454 0
 1557 0955 66 1A                   		mov.L	#1, r10
 1558 0957 03                      		.balign 2,3,1
 1559                             	.L121:
 455:SOURCES/database.c **** }
 1560                             		.loc 1 455 0
 1561 0958 EF A1                   		mov.L	r10, r1
 1562 095a 3F 6D 12                		rtsd	#72, r6-r13
 1563                             	.LFE16:
 1565                             		.global	_HeapSort
 1567                             	_HeapSort:
 1568                             	.LFB17:
 456:SOURCES/database.c **** 
 457:SOURCES/database.c **** //
 458:SOURCES/database.c **** // Heap sort works best on databases that have not been sorted at all
 459:SOURCES/database.c **** //
 460:SOURCES/database.c **** int HeapSort( SDBFile *dbFile, short offset, short checksize )
 461:SOURCES/database.c **** {
 1569                             		.loc 1 461 0
 1570 095d 6E 6C                   		pushm	r6-r12
 1571                             	.LCFI59:
 1572 095f 71 06 E0                		add	#-32, r0, r6
 1573                             	.LCFI60:
 1574 0962 71 60 F0                		add	#-16, r6, r0
 1575                             	.LCFI61:
 1576 0965 A1 E1                   		mov.L	r1, 24[r6]
 1577 0967 93 E2                   		mov.W	r2, 28[r6]
 1578 0969 93 EB                   		mov.W	r3, 30[r6]
 462:SOURCES/database.c **** 	long totalrecords;
 463:SOURCES/database.c **** 	long k, N;
 464:SOURCES/database.c **** 	char* temp1;
 465:SOURCES/database.c **** 	char* temp2;
 466:SOURCES/database.c **** 	char* temp3;
 467:SOURCES/database.c **** 
 468:SOURCES/database.c **** 	if( ( totalrecords = GetTotalRecords( dbFile )) == -1L )
 1579                             		.loc 1 468 0
 1580 096b A9 E1                   		mov.L	24[r6], r1
 1581 096d 05 00 00 00             		bsr	_GetTotalRecords
 1582 0971 A0 E1                   		mov.L	r1, 8[r6]
 1583 0973 ED 6A 02                		mov.L	8[r6], r10
 1584 0976 75 0A FF                		cmp	#-1, r10
 1585 0979 1E                      		bne	.L138
 469:SOURCES/database.c **** 		return FALSE;
 1586                             		.loc 1 469 0
 1587 097a 66 0A                   		mov.L	#0, r10
 1588 097c 38 A8 01                		bra	.L139
 1589                             	.L138:
 470:SOURCES/database.c **** 
 471:SOURCES/database.c **** 	if( dbFile->sRecSz < (checksize+offset) )
 1590                             		.loc 1 471 0
 1591 097f ED 6A 06                		mov.L	24[r6], r10
 1592 0982 DC AA                   		mov.W	[r10], r10
 1593 0984 DF AB                   		mov.W	r10, r11
 1594 0986 DD 6C 0F                		mov.W	30[r6], r12
 1595 0989 DD 6A 0E                		mov.W	28[r6], r10
 1596 098c 4B CA                   		add	r12, r10
 1597 098e 47 AB                   		cmp	r10, r11
 1598 0990 28 11                   		bge	.L140
 472:SOURCES/database.c **** 	{
 473:SOURCES/database.c **** 		lErrorCode = DB_ERROR_SORTLENGTH;
 1599                             		.loc 1 473 0
 1600 0992 FB A2 00 00 00 00       		mov.L	#_lErrorCode, r10
 1601 0998 F8 AA 00 01             		mov.L	#0x100, [r10]
 474:SOURCES/database.c **** 		return FALSE;
 1602                             		.loc 1 474 0
 1603 099c 66 0A                   		mov.L	#0, r10
 1604 099e 38 86 01                		bra	.L139
 1605                             	.L140:
 475:SOURCES/database.c **** 	}
 476:SOURCES/database.c **** 
 477:SOURCES/database.c **** 	lErrorCode = DB_ERROR_MEM;
 1606                             		.loc 1 477 0
 1607 09a1 FB A2 00 00 00 00       		mov.L	#_lErrorCode, r10
 1608 09a7 F8 A6 50                		mov.L	#0x50, [r10]
 478:SOURCES/database.c **** 	if( (temp1 = (char*) malloc( dbFile->sRecSz)) == NULL )
 1609                             		.loc 1 478 0
 1610 09aa ED 6A 06                		mov.L	24[r6], r10
 1611 09ad DC AA                   		mov.W	[r10], r10
 1612 09af DF AA                   		mov.W	r10, r10
 1613 09b1 EF A1                   		mov.L	r10, r1
 1614 09b3 05 00 00 00             		bsr	_malloc
 1615 09b7 EF 1A                   		mov.L	r1, r10
 1616 09b9 E7 6A 03                		mov.L	r10, 12[r6]
 1617 09bc ED 6A 03                		mov.L	12[r6], r10
 1618 09bf 61 0A                   		cmp	#0, r10
 1619 09c1 3A 53 01                		beq	.L160
 1620                             		.balign 2,3,1
 1621                             	.L141:
 479:SOURCES/database.c **** 		goto Clean1;
 480:SOURCES/database.c **** 
 481:SOURCES/database.c **** 	if( (temp2 = (char*) malloc( dbFile->sRecSz)) == NULL )
 1622                             		.loc 1 481 0
 1623 09c4 ED 6A 06                		mov.L	24[r6], r10
 1624 09c7 DC AA                   		mov.W	[r10], r10
 1625 09c9 DF AA                   		mov.W	r10, r10
 1626 09cb EF A1                   		mov.L	r10, r1
 1627 09cd 05 00 00 00             		bsr	_malloc
 1628 09d1 EF 1A                   		mov.L	r1, r10
 1629 09d3 E7 6A 04                		mov.L	r10, 16[r6]
 1630 09d6 ED 6A 04                		mov.L	16[r6], r10
 1631 09d9 61 0A                   		cmp	#0, r10
 1632 09db 3A 2F 01                		beq	.L161
 1633                             		.balign 2,3,1
 1634                             	.L143:
 482:SOURCES/database.c **** 		goto Clean2;
 483:SOURCES/database.c **** 
 484:SOURCES/database.c **** 	if( (temp3 = (char*) malloc( dbFile->sRecSz)) == NULL )
 1635                             		.loc 1 484 0
 1636 09de ED 6A 06                		mov.L	24[r6], r10
 1637 09e1 DC AA                   		mov.W	[r10], r10
 1638 09e3 DF AA                   		mov.W	r10, r10
 1639 09e5 EF A1                   		mov.L	r10, r1
 1640 09e7 05 00 00 00             		bsr	_malloc
 1641 09eb EF 1A                   		mov.L	r1, r10
 1642 09ed E7 6A 05                		mov.L	r10, 20[r6]
 1643 09f0 ED 6A 05                		mov.L	20[r6], r10
 1644 09f3 61 0A                   		cmp	#0, r10
 1645 09f5 3A 0B 01                		beq	.L162
 1646                             		.balign 2,3,5
 1647                             	.L145:
 485:SOURCES/database.c **** 		goto Clean3;
 486:SOURCES/database.c **** 	lErrorCode = DB_OK;
 1648                             		.loc 1 486 0
 1649 09f8 FB A2 00 00 00 00       		mov.L	#_lErrorCode, r10
 1650 09fe F8 A6 00                		mov.L	#0, [r10]
 487:SOURCES/database.c **** 	N = totalrecords;
 1651                             		.loc 1 487 0
 1652 0a01 ED 6A 02                		mov.L	8[r6], r10
 1653 0a04 E7 6A 01                		mov.L	r10, 4[r6]
 488:SOURCES/database.c **** 	for( k = N >> 1; k >= 1; k-- )
 1654                             		.loc 1 488 0
 1655 0a07 ED 6A 01                		mov.L	4[r6], r10
 1656 0a0a 6A 1A                   		shar	#1, r10
 1657 0a0c E3 6A                   		mov.L	r10, [r6]
 1658 0a0e 2E 32                   		bra	.L147
 1659                             	.L150:
 489:SOURCES/database.c **** 		if( !downheap( dbFile, totalrecords, k, offset, checksize, temp1, temp2, temp3 ))
 1660                             		.loc 1 489 0
 1661 0a10 DD 6A 0F                		mov.W	30[r6], r10
 1662 0a13 D3 0A                   		mov.W	r10, [r0]
 1663 0a15 ED 6A 03                		mov.L	12[r6], r10
 1664 0a18 E7 0A 01                		mov.L	r10, 4[r0]
 1665 0a1b ED 6A 04                		mov.L	16[r6], r10
 1666 0a1e E7 0A 02                		mov.L	r10, 8[r0]
 1667 0a21 ED 6A 05                		mov.L	20[r6], r10
 1668 0a24 E7 0A 03                		mov.L	r10, 12[r0]
 1669 0a27 A9 E1                   		mov.L	24[r6], r1
 1670 0a29 A8 E2                   		mov.L	8[r6], r2
 1671 0a2b EC 63                   		mov.L	[r6], r3
 1672 0a2d 9B E4                   		mov.W	28[r6], r4
 1673 0a2f 39 B4 FD                		bsr	_downheap
 1674 0a32 EF 1A                   		mov.L	r1, r10
 1675 0a34 61 0A                   		cmp	#0, r10
 1676 0a36 3A AE 00                		beq	.L163
 1677 0a39 03                      		.balign 2,3,1
 1678                             	.L148:
 488:SOURCES/database.c **** 	for( k = N >> 1; k >= 1; k-- )
 1679                             		.loc 1 488 0
 1680 0a3a EC 6A                   		mov.L	[r6], r10
 1681 0a3c 60 1A                   		sub	#1, r10
 1682 0a3e E3 6A                   		mov.L	r10, [r6]
 1683                             		.balign 2,3,1
 1684                             	.L147:
 488:SOURCES/database.c **** 	for( k = N >> 1; k >= 1; k-- )
 1685                             		.loc 1 488 0 is_stmt 0 discriminator 1
 1686 0a40 EC 6A                   		mov.L	[r6], r10
 1687 0a42 61 0A                   		cmp	#0, r10
 1688 0a44 2A CC                   		bgt	.L150
 490:SOURCES/database.c **** 			goto CleanAll;
 491:SOURCES/database.c **** 	while( N > 1 )
 1689                             		.loc 1 491 0 is_stmt 1
 1690 0a46 38 92 00                		bra	.L151
 1691                             	.L158:
 492:SOURCES/database.c **** 	{
 493:SOURCES/database.c **** 		// swap the records in the database
 494:SOURCES/database.c **** 		if( !ReadFirstRecord( dbFile, temp1 ))
 1692                             		.loc 1 494 0
 1693 0a49 A9 E1                   		mov.L	24[r6], r1
 1694 0a4b A8 EA                   		mov.L	12[r6], r2
 1695 0a4d 05 00 00 00             		bsr	_ReadFirstRecord
 1696 0a51 EF 1A                   		mov.L	r1, r10
 1697 0a53 61 0A                   		cmp	#0, r10
 1698 0a55 3A 92 00                		beq	.L164
 1699                             		.balign 2,3,1
 1700                             	.L152:
 495:SOURCES/database.c **** 			goto CleanAll;
 496:SOURCES/database.c **** 		if( !GotoRecord( dbFile, (N-1L) ))
 1701                             		.loc 1 496 0
 1702 0a58 ED 6A 01                		mov.L	4[r6], r10
 1703 0a5b 60 1A                   		sub	#1, r10
 1704 0a5d A9 E1                   		mov.L	24[r6], r1
 1705 0a5f EF A2                   		mov.L	r10, r2
 1706 0a61 05 00 00 00             		bsr	_GotoRecord
 1707 0a65 EF 1A                   		mov.L	r1, r10
 1708 0a67 61 0A                   		cmp	#0, r10
 1709 0a69 3A 81 00                		beq	.L165
 1710                             		.balign 2,3,1
 1711                             	.L153:
 497:SOURCES/database.c **** 			goto CleanAll;
 498:SOURCES/database.c **** 		if( !ReadCurrentRecord( dbFile, temp2 ))
 1712                             		.loc 1 498 0
 1713 0a6c A9 E1                   		mov.L	24[r6], r1
 1714 0a6e A9 62                   		mov.L	16[r6], r2
 1715 0a70 05 00 00 00             		bsr	_ReadCurrentRecord
 1716 0a74 EF 1A                   		mov.L	r1, r10
 1717 0a76 61 0A                   		cmp	#0, r10
 1718 0a78 20 75                   		beq	.L166
 1719                             		.balign 2,3,1
 1720                             	.L154:
 499:SOURCES/database.c **** 			goto CleanAll;
 500:SOURCES/database.c **** 		if( !WriteRecord( dbFile, temp1, WRITE_OVER ))
 1721                             		.loc 1 500 0
 1722 0a7a A9 E1                   		mov.L	24[r6], r1
 1723 0a7c A8 EA                   		mov.L	12[r6], r2
 1724 0a7e 66 13                   		mov.L	#1, r3
 1725 0a80 05 00 00 00             		bsr	_WriteRecord
 1726 0a84 EF 1A                   		mov.L	r1, r10
 1727 0a86 61 0A                   		cmp	#0, r10
 1728 0a88 20 67                   		beq	.L167
 1729                             		.balign 2,3,1
 1730                             	.L155:
 501:SOURCES/database.c **** 			goto CleanAll;
 502:SOURCES/database.c **** 		if( !GotoRecord( dbFile, 0L ))
 1731                             		.loc 1 502 0
 1732 0a8a A9 E1                   		mov.L	24[r6], r1
 1733 0a8c 66 02                   		mov.L	#0, r2
 1734 0a8e 05 00 00 00             		bsr	_GotoRecord
 1735 0a92 EF 1A                   		mov.L	r1, r10
 1736 0a94 61 0A                   		cmp	#0, r10
 1737 0a96 20 5B                   		beq	.L168
 1738                             		.balign 2,3,1
 1739                             	.L156:
 503:SOURCES/database.c **** 			goto CleanAll;
 504:SOURCES/database.c **** 		if( !WriteRecord( dbFile, temp2, WRITE_OVER ))
 1740                             		.loc 1 504 0
 1741 0a98 A9 E1                   		mov.L	24[r6], r1
 1742 0a9a A9 62                   		mov.L	16[r6], r2
 1743 0a9c 66 13                   		mov.L	#1, r3
 1744 0a9e 05 00 00 00             		bsr	_WriteRecord
 1745 0aa2 EF 1A                   		mov.L	r1, r10
 1746 0aa4 61 0A                   		cmp	#0, r10
 1747 0aa6 20 4D                   		beq	.L169
 1748                             		.balign 2,3,1
 1749                             	.L157:
 505:SOURCES/database.c **** 			goto CleanAll;
 506:SOURCES/database.c **** 		N--;
 1750                             		.loc 1 506 0
 1751 0aa8 ED 6A 01                		mov.L	4[r6], r10
 1752 0aab 60 1A                   		sub	#1, r10
 1753 0aad E7 6A 01                		mov.L	r10, 4[r6]
 507:SOURCES/database.c **** 		if( !downheap( dbFile, N, 1, offset, checksize, temp1, temp2, temp3 ))
 1754                             		.loc 1 507 0
 1755 0ab0 DD 6A 0F                		mov.W	30[r6], r10
 1756 0ab3 D3 0A                   		mov.W	r10, [r0]
 1757 0ab5 ED 6A 03                		mov.L	12[r6], r10
 1758 0ab8 E7 0A 01                		mov.L	r10, 4[r0]
 1759 0abb ED 6A 04                		mov.L	16[r6], r10
 1760 0abe E7 0A 02                		mov.L	r10, 8[r0]
 1761 0ac1 ED 6A 05                		mov.L	20[r6], r10
 1762 0ac4 E7 0A 03                		mov.L	r10, 12[r0]
 1763 0ac7 A9 E1                   		mov.L	24[r6], r1
 1764 0ac9 A8 6A                   		mov.L	4[r6], r2
 1765 0acb 66 13                   		mov.L	#1, r3
 1766 0acd 9B E4                   		mov.W	28[r6], r4
 1767 0acf 39 14 FD                		bsr	_downheap
 1768 0ad2 EF 1A                   		mov.L	r1, r10
 1769 0ad4 61 0A                   		cmp	#0, r10
 1770 0ad6 20 20                   		beq	.L170
 1771                             		.balign 2,3,1
 1772                             	.L151:
 491:SOURCES/database.c **** 	while( N > 1 )
 1773                             		.loc 1 491 0 discriminator 1
 1774 0ad8 ED 6A 01                		mov.L	4[r6], r10
 1775 0adb 61 1A                   		cmp	#1, r10
 1776 0add 2B 05 38 6A FF          		bgt	.L158
 1777 0ae2 2E 16                   		bra	.L149
 1778                             	.L163:
 490:SOURCES/database.c **** 			goto CleanAll;
 1779                             		.loc 1 490 0
 1780 0ae4 03                      		nop
 1781 0ae5 2E 13                   		bra	.L149
 1782                             	.L164:
 495:SOURCES/database.c **** 			goto CleanAll;
 1783                             		.loc 1 495 0
 1784 0ae7 03                      		nop
 1785 0ae8 2E 10                   		bra	.L149
 1786                             	.L165:
 497:SOURCES/database.c **** 			goto CleanAll;
 1787                             		.loc 1 497 0
 1788 0aea 03                      		nop
 1789 0aeb 2E 0D                   		bra	.L149
 1790                             	.L166:
 499:SOURCES/database.c **** 			goto CleanAll;
 1791                             		.loc 1 499 0
 1792 0aed 03                      		nop
 1793 0aee 0A                      		bra	.L149
 1794                             	.L167:
 501:SOURCES/database.c **** 			goto CleanAll;
 1795                             		.loc 1 501 0
 1796 0aef 03                      		nop
 1797 0af0 08                      		bra	.L149
 1798                             	.L168:
 503:SOURCES/database.c **** 			goto CleanAll;
 1799                             		.loc 1 503 0
 1800 0af1 03                      		nop
 1801 0af2 0E                      		bra	.L149
 1802                             	.L169:
 505:SOURCES/database.c **** 			goto CleanAll;
 1803                             		.loc 1 505 0
 1804 0af3 03                      		nop
 1805 0af4 2E 04                   		bra	.L149
 1806                             	.L170:
 508:SOURCES/database.c **** 			goto CleanAll;
 1807                             		.loc 1 508 0
 1808 0af6 03                      		nop
 1809 0af7 03                      		.balign 2,3,1
 1810                             	.L149:
 509:SOURCES/database.c **** 	}
 510:SOURCES/database.c **** CleanAll:
 511:SOURCES/database.c **** 	free( temp3 );
 1811                             		.loc 1 511 0
 1812 0af8 A9 69                   		mov.L	20[r6], r1
 1813 0afa 05 00 00 00             		bsr	_free
 1814 0afe 2E 04                   		bra	.L146
 1815                             	.L162:
 485:SOURCES/database.c **** 		goto Clean3;
 1816                             		.loc 1 485 0
 1817 0b00 03                      		nop
 1818 0b01 03                      		.balign 2,3,1
 1819                             	.L146:
 512:SOURCES/database.c **** Clean3:
 513:SOURCES/database.c **** 	free( temp2 );
 1820                             		.loc 1 513 0
 1821 0b02 A9 61                   		mov.L	16[r6], r1
 1822 0b04 05 00 00 00             		bsr	_free
 1823 0b08 2E 04                   		bra	.L144
 1824                             	.L161:
 482:SOURCES/database.c **** 		goto Clean2;
 1825                             		.loc 1 482 0
 1826 0b0a 03                      		nop
 1827 0b0b 03                      		.balign 2,3,1
 1828                             	.L144:
 514:SOURCES/database.c **** Clean2:
 515:SOURCES/database.c **** 	free( temp1 );
 1829                             		.loc 1 515 0
 1830 0b0c A8 E9                   		mov.L	12[r6], r1
 1831 0b0e 05 00 00 00             		bsr	_free
 1832 0b12 2E 04                   		bra	.L142
 1833                             	.L160:
 479:SOURCES/database.c **** 		goto Clean1;
 1834                             		.loc 1 479 0
 1835 0b14 03                      		nop
 1836 0b15 03                      		.balign 2,3,3
 1837                             	.L142:
 516:SOURCES/database.c **** Clean1:
 517:SOURCES/database.c **** 	if( GetDBErrorCode() != DB_OK )
 1838                             		.loc 1 517 0
 1839 0b16 05 00 00 00             		bsr	_GetDBErrorCode
 1840 0b1a EF 1A                   		mov.L	r1, r10
 1841 0b1c 61 0A                   		cmp	#0, r10
 1842 0b1e 14                      		beq	.L159
 518:SOURCES/database.c **** 		return FALSE;
 1843                             		.loc 1 518 0
 1844 0b1f 66 0A                   		mov.L	#0, r10
 1845 0b21 0B                      		bra	.L139
 1846                             	.L159:
 519:SOURCES/database.c **** 	return TRUE;
 1847                             		.loc 1 519 0
 1848 0b22 66 1A                   		mov.L	#1, r10
 1849                             		.balign 2,3,1
 1850                             	.L139:
 520:SOURCES/database.c **** }
 1851                             		.loc 1 520 0
 1852 0b24 EF A1                   		mov.L	r10, r1
 1853 0b26 3F 6C 13                		rtsd	#76, r6-r12
 1854                             	.LFE17:
 1856                             		.global	_QuickSort
 1858                             	_QuickSort:
 1859                             	.LFB18:
 521:SOURCES/database.c **** 
 522:SOURCES/database.c **** //
 523:SOURCES/database.c **** // Very fast sort function faster then heapsort but uses more resources
 524:SOURCES/database.c **** //
 525:SOURCES/database.c **** int QuickSort( SDBFile *dbFile, short offset, short checksize )
 526:SOURCES/database.c **** {
 1860                             		.loc 1 526 0
 1861 0b29 6E 6C                   		pushm	r6-r12
 1862                             	.LCFI62:
 1863 0b2b 71 06 C4                		add	#-60, r0, r6
 1864                             	.LCFI63:
 1865 0b2e EF 60                   		mov.L	r6, r0
 1866                             	.LCFI64:
 1867 0b30 A3 69                   		mov.L	r1, 52[r6]
 1868 0b32 97 62                   		mov.W	r2, 56[r6]
 1869 0b34 97 6B                   		mov.W	r3, 58[r6]
 527:SOURCES/database.c **** 	long totalrecords;
 528:SOURCES/database.c **** 	char* temp1;
 529:SOURCES/database.c **** 	char* temp2;
 530:SOURCES/database.c **** 	char* temp3;
 531:SOURCES/database.c **** 	long  l,r,s,i,j;
 532:SOURCES/database.c **** 	long* stackl;
 533:SOURCES/database.c **** 	long* stackr;
 534:SOURCES/database.c **** 	long n1;
 535:SOURCES/database.c **** 	int  n2;
 536:SOURCES/database.c **** 
 537:SOURCES/database.c **** 	if( ( totalrecords = GetTotalRecords( dbFile )) == -1L )
 1870                             		.loc 1 537 0
 1871 0b36 AB 69                   		mov.L	52[r6], r1
 1872 0b38 05 00 00 00             		bsr	_GetTotalRecords
 1873 0b3c A1 E1                   		mov.L	r1, 24[r6]
 1874 0b3e ED 6A 06                		mov.L	24[r6], r10
 1875 0b41 75 0A FF                		cmp	#-1, r10
 1876 0b44 1E                      		bne	.L172
 538:SOURCES/database.c **** 		return FALSE;
 1877                             		.loc 1 538 0
 1878 0b45 66 0A                   		mov.L	#0, r10
 1879 0b47 38 53 03                		bra	.L173
 1880                             	.L172:
 539:SOURCES/database.c **** 
 540:SOURCES/database.c **** 	if( dbFile->sRecSz < (checksize+offset) )
 1881                             		.loc 1 540 0
 1882 0b4a ED 6A 0D                		mov.L	52[r6], r10
 1883 0b4d DC AA                   		mov.W	[r10], r10
 1884 0b4f DF AB                   		mov.W	r10, r11
 1885 0b51 DD 6C 1D                		mov.W	58[r6], r12
 1886 0b54 DD 6A 1C                		mov.W	56[r6], r10
 1887 0b57 4B CA                   		add	r12, r10
 1888 0b59 47 AB                   		cmp	r10, r11
 1889 0b5b 28 11                   		bge	.L174
 541:SOURCES/database.c **** 	{
 542:SOURCES/database.c **** 		lErrorCode = DB_ERROR_SORTLENGTH;
 1890                             		.loc 1 542 0
 1891 0b5d FB A2 00 00 00 00       		mov.L	#_lErrorCode, r10
 1892 0b63 F8 AA 00 01             		mov.L	#0x100, [r10]
 543:SOURCES/database.c **** 		return FALSE;
 1893                             		.loc 1 543 0
 1894 0b67 66 0A                   		mov.L	#0, r10
 1895 0b69 38 31 03                		bra	.L173
 1896                             	.L174:
 544:SOURCES/database.c **** 	}
 545:SOURCES/database.c **** 	lErrorCode = DB_ERROR_MEM;
 1897                             		.loc 1 545 0
 1898 0b6c FB A2 00 00 00 00       		mov.L	#_lErrorCode, r10
 1899 0b72 F8 A6 50                		mov.L	#0x50, [r10]
 546:SOURCES/database.c **** 	if( (temp1 = (char*) malloc( dbFile->sRecSz)) == NULL )
 1900                             		.loc 1 546 0
 1901 0b75 ED 6A 0D                		mov.L	52[r6], r10
 1902 0b78 DC AA                   		mov.W	[r10], r10
 1903 0b7a DF AA                   		mov.W	r10, r10
 1904 0b7c EF A1                   		mov.L	r10, r1
 1905 0b7e 05 00 00 00             		bsr	_malloc
 1906 0b82 EF 1A                   		mov.L	r1, r10
 1907 0b84 E7 6A 07                		mov.L	r10, 28[r6]
 1908 0b87 ED 6A 07                		mov.L	28[r6], r10
 1909 0b8a 61 0A                   		cmp	#0, r10
 1910 0b8c 3A FE 02                		beq	.L208
 1911 0b8f 03                      		.balign 2,3,1
 1912                             	.L175:
 547:SOURCES/database.c **** 		goto Clean1;
 548:SOURCES/database.c **** 
 549:SOURCES/database.c **** 	if( (temp2 = (char*) malloc( dbFile->sRecSz)) == NULL )
 1913                             		.loc 1 549 0
 1914 0b90 ED 6A 0D                		mov.L	52[r6], r10
 1915 0b93 DC AA                   		mov.W	[r10], r10
 1916 0b95 DF AA                   		mov.W	r10, r10
 1917 0b97 EF A1                   		mov.L	r10, r1
 1918 0b99 05 00 00 00             		bsr	_malloc
 1919 0b9d EF 1A                   		mov.L	r1, r10
 1920 0b9f E7 6A 08                		mov.L	r10, 32[r6]
 1921 0ba2 ED 6A 08                		mov.L	32[r6], r10
 1922 0ba5 61 0A                   		cmp	#0, r10
 1923 0ba7 3A D9 02                		beq	.L209
 1924                             		.balign 2,3,1
 1925                             	.L177:
 550:SOURCES/database.c **** 		goto Clean2;
 551:SOURCES/database.c **** 
 552:SOURCES/database.c **** 	if( (temp3 = (char*) malloc( dbFile->sRecSz)) == NULL )
 1926                             		.loc 1 552 0
 1927 0baa ED 6A 0D                		mov.L	52[r6], r10
 1928 0bad DC AA                   		mov.W	[r10], r10
 1929 0baf DF AA                   		mov.W	r10, r10
 1930 0bb1 EF A1                   		mov.L	r10, r1
 1931 0bb3 05 00 00 00             		bsr	_malloc
 1932 0bb7 EF 1A                   		mov.L	r1, r10
 1933 0bb9 E7 6A 09                		mov.L	r10, 36[r6]
 1934 0bbc ED 6A 09                		mov.L	36[r6], r10
 1935 0bbf 61 0A                   		cmp	#0, r10
 1936 0bc1 3A B5 02                		beq	.L210
 1937                             		.balign 2,3,4
 1938                             	.L179:
 553:SOURCES/database.c **** 		goto Clean3;
 554:SOURCES/database.c **** 	//
 555:SOURCES/database.c **** 	// Calculate size for stack
 556:SOURCES/database.c **** 	//
 557:SOURCES/database.c **** 	n2 = 1;
 1939                             		.loc 1 557 0
 1940 0bc4 3E 65 01                		mov.L	#1, 20[r6]
 558:SOURCES/database.c **** 	n1 = totalrecords;
 1941                             		.loc 1 558 0
 1942 0bc7 ED 6A 06                		mov.L	24[r6], r10
 1943 0bca E7 6A 04                		mov.L	r10, 16[r6]
 559:SOURCES/database.c **** 	while( (n1 /= 10) != 0 )
 1944                             		.loc 1 559 0
 1945 0bcd 09                      		bra	.L181
 1946                             	.L182:
 560:SOURCES/database.c **** 		n2++;
 1947                             		.loc 1 560 0
 1948 0bce ED 6A 05                		mov.L	20[r6], r10
 1949 0bd1 62 1A                   		add	#1, r10
 1950 0bd3 E7 6A 05                		mov.L	r10, 20[r6]
 1951                             		.balign 2,3,1
 1952                             	.L181:
 559:SOURCES/database.c **** 	while( (n1 /= 10) != 0 )
 1953                             		.loc 1 559 0 discriminator 1
 1954 0bd6 ED 6C 04                		mov.L	16[r6], r12
 1955 0bd9 EF C7                   		mov.L	r12, r7
 1956 0bdb FD 70 67 67 66 66 66    		emul	#0x66666667, r7
 1957 0be2 EF 7A                   		mov.L	r7, r10
 1958 0be4 EF 8B                   		mov.L	r8, r11
 1959 0be6 6A 2B                   		shar	#2, r11
 1960 0be8 FD BF CA                		shar	#31, r12, r10
 1961 0beb FF 0A AB                		sub	r10, r11, r10
 1962 0bee E7 6A 04                		mov.L	r10, 16[r6]
 1963 0bf1 ED 6A 04                		mov.L	16[r6], r10
 1964 0bf4 61 0A                   		cmp	#0, r10
 1965 0bf6 21 D8                   		bne	.L182
 561:SOURCES/database.c **** 	n2 *= 4;
 1966                             		.loc 1 561 0
 1967 0bf8 ED 6A 05                		mov.L	20[r6], r10
 1968 0bfb 6C 2A                   		shll	#2, r10
 1969 0bfd E7 6A 05                		mov.L	r10, 20[r6]
 562:SOURCES/database.c **** 	n2 += 10;
 1970                             		.loc 1 562 0
 1971 0c00 ED 6A 05                		mov.L	20[r6], r10
 1972 0c03 62 AA                   		add	#10, r10
 1973 0c05 E7 6A 05                		mov.L	r10, 20[r6]
 563:SOURCES/database.c **** 
 564:SOURCES/database.c **** 	if( (stackl = (long*) malloc( (n2 * sizeof(long)))) == NULL )
 1974                             		.loc 1 564 0
 1975 0c08 ED 6A 05                		mov.L	20[r6], r10
 1976 0c0b 6C 2A                   		shll	#2, r10
 1977 0c0d EF A1                   		mov.L	r10, r1
 1978 0c0f 05 00 00 00             		bsr	_malloc
 1979 0c13 EF 1A                   		mov.L	r1, r10
 1980 0c15 E7 6A 0A                		mov.L	r10, 40[r6]
 1981 0c18 ED 6A 0A                		mov.L	40[r6], r10
 1982 0c1b 61 0A                   		cmp	#0, r10
 1983 0c1d 3A 4F 02                		beq	.L211
 1984                             		.balign 2,3,1
 1985                             	.L183:
 565:SOURCES/database.c **** 		goto Clean4;
 566:SOURCES/database.c **** 
 567:SOURCES/database.c **** 	if( (stackr = (long*) malloc( (n2 * sizeof(long)))) == NULL )
 1986                             		.loc 1 567 0
 1987 0c20 ED 6A 05                		mov.L	20[r6], r10
 1988 0c23 6C 2A                   		shll	#2, r10
 1989 0c25 EF A1                   		mov.L	r10, r1
 1990 0c27 05 00 00 00             		bsr	_malloc
 1991 0c2b EF 1A                   		mov.L	r1, r10
 1992 0c2d E7 6A 0B                		mov.L	r10, 44[r6]
 1993 0c30 ED 6A 0B                		mov.L	44[r6], r10
 1994 0c33 61 0A                   		cmp	#0, r10
 1995 0c35 3A 2D 02                		beq	.L212
 1996                             		.balign 2,3,5
 1997                             	.L185:
 568:SOURCES/database.c **** 		goto Clean5;
 569:SOURCES/database.c **** 	lErrorCode = DB_OK;
 1998                             		.loc 1 569 0
 1999 0c38 FB A2 00 00 00 00       		mov.L	#_lErrorCode, r10
 2000 0c3e F8 A6 00                		mov.L	#0, [r10]
 570:SOURCES/database.c **** 
 571:SOURCES/database.c **** 	s = 1;
 2001                             		.loc 1 571 0
 2002 0c41 3E 61 01                		mov.L	#1, 4[r6]
 572:SOURCES/database.c **** 	stackl[ s ] = 0L;
 2003                             		.loc 1 572 0
 2004 0c44 ED 6A 01                		mov.L	4[r6], r10
 2005 0c47 6C 2A                   		shll	#2, r10
 2006 0c49 ED 6B 0A                		mov.L	40[r6], r11
 2007 0c4c 4B BA                   		add	r11, r10
 2008 0c4e F8 A6 00                		mov.L	#0, [r10]
 573:SOURCES/database.c **** 	stackr[ s ] = totalrecords - 1L;
 2009                             		.loc 1 573 0
 2010 0c51 ED 6A 01                		mov.L	4[r6], r10
 2011 0c54 6C 2A                   		shll	#2, r10
 2012 0c56 ED 6B 0B                		mov.L	44[r6], r11
 2013 0c59 4B BA                   		add	r11, r10
 2014 0c5b ED 6B 06                		mov.L	24[r6], r11
 2015 0c5e 60 1B                   		sub	#1, r11
 2016 0c60 E3 AB                   		mov.L	r11, [r10]
 2017                             		.balign 2,3,1
 2018                             	.L206:
 574:SOURCES/database.c **** 	do
 575:SOURCES/database.c **** 	{
 576:SOURCES/database.c **** 		l = stackl[ s ];
 2019                             		.loc 1 576 0
 2020 0c62 ED 6A 01                		mov.L	4[r6], r10
 2021 0c65 6C 2A                   		shll	#2, r10
 2022 0c67 ED 6B 0A                		mov.L	40[r6], r11
 2023 0c6a 4B BA                   		add	r11, r10
 2024 0c6c EC AA                   		mov.L	[r10], r10
 2025 0c6e E7 6A 0C                		mov.L	r10, 48[r6]
 577:SOURCES/database.c **** 		r = stackr[ s ];
 2026                             		.loc 1 577 0
 2027 0c71 ED 6A 01                		mov.L	4[r6], r10
 2028 0c74 6C 2A                   		shll	#2, r10
 2029 0c76 ED 6B 0B                		mov.L	44[r6], r11
 2030 0c79 4B BA                   		add	r11, r10
 2031 0c7b EC AA                   		mov.L	[r10], r10
 2032 0c7d E3 6A                   		mov.L	r10, [r6]
 578:SOURCES/database.c **** 		s--;
 2033                             		.loc 1 578 0
 2034 0c7f ED 6A 01                		mov.L	4[r6], r10
 2035 0c82 60 1A                   		sub	#1, r10
 2036 0c84 E7 6A 01                		mov.L	r10, 4[r6]
 2037 0c87 03                      		.balign 2,3,1
 2038                             	.L205:
 579:SOURCES/database.c **** 		do
 580:SOURCES/database.c **** 		{
 581:SOURCES/database.c **** 			i = l;
 2039                             		.loc 1 581 0
 2040 0c88 ED 6A 0C                		mov.L	48[r6], r10
 2041 0c8b E7 6A 02                		mov.L	r10, 8[r6]
 582:SOURCES/database.c **** 			j = r;
 2042                             		.loc 1 582 0
 2043 0c8e EC 6A                   		mov.L	[r6], r10
 2044 0c90 E7 6A 03                		mov.L	r10, 12[r6]
 583:SOURCES/database.c **** 			if( !GotoRecord( dbFile, ((l+r)>>1) ))
 2045                             		.loc 1 583 0
 2046 0c93 ED 6A 0C                		mov.L	48[r6], r10
 2047 0c96 06 88 6A                		add	[r6].L, r10
 2048 0c99 6A 1A                   		shar	#1, r10
 2049 0c9b AB 69                   		mov.L	52[r6], r1
 2050 0c9d EF A2                   		mov.L	r10, r2
 2051 0c9f 05 00 00 00             		bsr	_GotoRecord
 2052 0ca3 EF 1A                   		mov.L	r1, r10
 2053 0ca5 61 0A                   		cmp	#0, r10
 2054 0ca7 3A 96 01                		beq	.L213
 2055                             		.balign 2,3,1
 2056                             	.L187:
 584:SOURCES/database.c **** 				goto CleanAll;
 585:SOURCES/database.c **** 			if( !ReadCurrentRecord( dbFile, temp1 ))
 2057                             		.loc 1 585 0
 2058 0caa AB 69                   		mov.L	52[r6], r1
 2059 0cac A9 EA                   		mov.L	28[r6], r2
 2060 0cae 05 00 00 00             		bsr	_ReadCurrentRecord
 2061 0cb2 EF 1A                   		mov.L	r1, r10
 2062 0cb4 61 0A                   		cmp	#0, r10
 2063 0cb6 3A 8A 01                		beq	.L214
 2064 0cb9 03                      		.balign 2,3,1
 2065                             	.L189:
 586:SOURCES/database.c **** 				goto CleanAll;
 587:SOURCES/database.c **** 
 588:SOURCES/database.c **** 
 589:SOURCES/database.c **** 			do
 590:SOURCES/database.c **** 			{
 591:SOURCES/database.c **** 				if( !GotoRecord( dbFile, i ))
 2066                             		.loc 1 591 0
 2067 0cba AB 69                   		mov.L	52[r6], r1
 2068 0cbc A8 E2                   		mov.L	8[r6], r2
 2069 0cbe 05 00 00 00             		bsr	_GotoRecord
 2070 0cc2 EF 1A                   		mov.L	r1, r10
 2071 0cc4 61 0A                   		cmp	#0, r10
 2072 0cc6 3A 7D 01                		beq	.L215
 2073 0cc9 03                      		.balign 2,3,1
 2074                             	.L190:
 592:SOURCES/database.c **** 					goto CleanAll;
 593:SOURCES/database.c **** 				if( !ReadCurrentRecord( dbFile, temp2 ))
 2075                             		.loc 1 593 0
 2076 0cca AB 69                   		mov.L	52[r6], r1
 2077 0ccc AA 62                   		mov.L	32[r6], r2
 2078 0cce 05 00 00 00             		bsr	_ReadCurrentRecord
 2079 0cd2 EF 1A                   		mov.L	r1, r10
 2080 0cd4 61 0A                   		cmp	#0, r10
 2081 0cd6 21 2D                   		bne	.L216
 594:SOURCES/database.c **** 					goto CleanAll;
 2082                             		.loc 1 594 0
 2083 0cd8 38 82 01                		bra	.L188
 2084                             	.L194:
 595:SOURCES/database.c **** 				while( memcmp( temp2 + offset, temp1 + offset, checksize ) < 0 )
 596:SOURCES/database.c **** 				{
 597:SOURCES/database.c **** 					i++;
 2085                             		.loc 1 597 0
 2086 0cdb ED 6A 02                		mov.L	8[r6], r10
 2087 0cde 62 1A                   		add	#1, r10
 2088 0ce0 E7 6A 02                		mov.L	r10, 8[r6]
 598:SOURCES/database.c **** 					if( !GotoRecord( dbFile, i ))
 2089                             		.loc 1 598 0
 2090 0ce3 AB 69                   		mov.L	52[r6], r1
 2091 0ce5 A8 E2                   		mov.L	8[r6], r2
 2092 0ce7 05 00 00 00             		bsr	_GotoRecord
 2093 0ceb EF 1A                   		mov.L	r1, r10
 2094 0ced 61 0A                   		cmp	#0, r10
 2095 0cef 3A 57 01                		beq	.L217
 2096                             		.balign 2,3,1
 2097                             	.L193:
 599:SOURCES/database.c **** 						goto CleanAll;
 600:SOURCES/database.c **** 					if( !ReadCurrentRecord( dbFile, temp2 ))
 2098                             		.loc 1 600 0
 2099 0cf2 AB 69                   		mov.L	52[r6], r1
 2100 0cf4 AA 62                   		mov.L	32[r6], r2
 2101 0cf6 05 00 00 00             		bsr	_ReadCurrentRecord
 2102 0cfa EF 1A                   		mov.L	r1, r10
 2103 0cfc 61 0A                   		cmp	#0, r10
 2104 0cfe 3A 4B 01                		beq	.L218
 2105 0d01 2E 03                   		bra	.L192
 2106                             	.L216:
 595:SOURCES/database.c **** 				while( memcmp( temp2 + offset, temp1 + offset, checksize ) < 0 )
 2107                             		.loc 1 595 0
 2108 0d03 03                      		nop
 2109                             		.balign 2,3,5
 2110                             	.L192:
 595:SOURCES/database.c **** 				while( memcmp( temp2 + offset, temp1 + offset, checksize ) < 0 )
 2111                             		.loc 1 595 0 is_stmt 0 discriminator 1
 2112 0d04 DD 6A 1C                		mov.W	56[r6], r10
 2113 0d07 ED 6B 08                		mov.L	32[r6], r11
 2114 0d0a FF 2C AB                		add	r10, r11, r12
 2115 0d0d DD 6A 1C                		mov.W	56[r6], r10
 2116 0d10 ED 6B 07                		mov.L	28[r6], r11
 2117 0d13 4B AB                   		add	r10, r11
 2118 0d15 DD 6A 1D                		mov.W	58[r6], r10
 2119 0d18 EF C1                   		mov.L	r12, r1
 2120 0d1a EF B2                   		mov.L	r11, r2
 2121 0d1c EF A3                   		mov.L	r10, r3
 2122 0d1e 05 00 00 00             		bsr	_memcmp
 2123 0d22 EF 1A                   		mov.L	r1, r10
 2124 0d24 61 0A                   		cmp	#0, r10
 2125 0d26 29 B5                   		blt	.L194
 601:SOURCES/database.c **** 						goto CleanAll;
 602:SOURCES/database.c **** 				}
 603:SOURCES/database.c **** 
 604:SOURCES/database.c **** 				if( !GotoRecord( dbFile, j ))
 2126                             		.loc 1 604 0 is_stmt 1
 2127 0d28 AB 69                   		mov.L	52[r6], r1
 2128 0d2a A8 EA                   		mov.L	12[r6], r2
 2129 0d2c 05 00 00 00             		bsr	_GotoRecord
 2130 0d30 EF 1A                   		mov.L	r1, r10
 2131 0d32 61 0A                   		cmp	#0, r10
 2132 0d34 3A 18 01                		beq	.L219
 2133 0d37 03                      		.balign 2,3,1
 2134                             	.L195:
 605:SOURCES/database.c **** 					goto CleanAll;
 606:SOURCES/database.c **** 				if( !ReadCurrentRecord( dbFile, temp3 ))
 2135                             		.loc 1 606 0
 2136 0d38 AB 69                   		mov.L	52[r6], r1
 2137 0d3a AA 6A                   		mov.L	36[r6], r2
 2138 0d3c 05 00 00 00             		bsr	_ReadCurrentRecord
 2139 0d40 EF 1A                   		mov.L	r1, r10
 2140 0d42 61 0A                   		cmp	#0, r10
 2141 0d44 21 2D                   		bne	.L220
 607:SOURCES/database.c **** 					goto CleanAll;
 2142                             		.loc 1 607 0
 2143 0d46 38 14 01                		bra	.L188
 2144                             	.L199:
 608:SOURCES/database.c **** 				while( memcmp( temp3 + offset, temp1 + offset, checksize ) > 0 )
 609:SOURCES/database.c **** 				{
 610:SOURCES/database.c **** 					j--;
 2145                             		.loc 1 610 0
 2146 0d49 ED 6A 03                		mov.L	12[r6], r10
 2147 0d4c 60 1A                   		sub	#1, r10
 2148 0d4e E7 6A 03                		mov.L	r10, 12[r6]
 611:SOURCES/database.c **** 					if( !GotoRecord( dbFile, j ))
 2149                             		.loc 1 611 0
 2150 0d51 AB 69                   		mov.L	52[r6], r1
 2151 0d53 A8 EA                   		mov.L	12[r6], r2
 2152 0d55 05 00 00 00             		bsr	_GotoRecord
 2153 0d59 EF 1A                   		mov.L	r1, r10
 2154 0d5b 61 0A                   		cmp	#0, r10
 2155 0d5d 3A F2 00                		beq	.L221
 2156                             		.balign 2,3,1
 2157                             	.L198:
 612:SOURCES/database.c **** 						goto CleanAll;
 613:SOURCES/database.c **** 					if( !ReadCurrentRecord( dbFile, temp3 ))
 2158                             		.loc 1 613 0
 2159 0d60 AB 69                   		mov.L	52[r6], r1
 2160 0d62 AA 6A                   		mov.L	36[r6], r2
 2161 0d64 05 00 00 00             		bsr	_ReadCurrentRecord
 2162 0d68 EF 1A                   		mov.L	r1, r10
 2163 0d6a 61 0A                   		cmp	#0, r10
 2164 0d6c 3A E5 00                		beq	.L222
 2165 0d6f 2E 03                   		bra	.L197
 2166                             	.L220:
 608:SOURCES/database.c **** 				while( memcmp( temp3 + offset, temp1 + offset, checksize ) > 0 )
 2167                             		.loc 1 608 0
 2168 0d71 03                      		nop
 2169                             		.balign 2,3,5
 2170                             	.L197:
 608:SOURCES/database.c **** 				while( memcmp( temp3 + offset, temp1 + offset, checksize ) > 0 )
 2171                             		.loc 1 608 0 is_stmt 0 discriminator 1
 2172 0d72 DD 6A 1C                		mov.W	56[r6], r10
 2173 0d75 ED 6B 09                		mov.L	36[r6], r11
 2174 0d78 FF 2C AB                		add	r10, r11, r12
 2175 0d7b DD 6A 1C                		mov.W	56[r6], r10
 2176 0d7e ED 6B 07                		mov.L	28[r6], r11
 2177 0d81 4B AB                   		add	r10, r11
 2178 0d83 DD 6A 1D                		mov.W	58[r6], r10
 2179 0d86 EF C1                   		mov.L	r12, r1
 2180 0d88 EF B2                   		mov.L	r11, r2
 2181 0d8a EF A3                   		mov.L	r10, r3
 2182 0d8c 05 00 00 00             		bsr	_memcmp
 2183 0d90 EF 1A                   		mov.L	r1, r10
 2184 0d92 61 0A                   		cmp	#0, r10
 2185 0d94 2A B5                   		bgt	.L199
 614:SOURCES/database.c **** 						goto CleanAll;
 615:SOURCES/database.c **** 				}
 616:SOURCES/database.c **** 
 617:SOURCES/database.c **** 				if( i <= j  )
 2186                             		.loc 1 617 0 is_stmt 1
 2187 0d96 ED 6B 02                		mov.L	8[r6], r11
 2188 0d99 ED 6A 03                		mov.L	12[r6], r10
 2189 0d9c 47 AB                   		cmp	r10, r11
 2190 0d9e 2A 46                   		bgt	.L200
 618:SOURCES/database.c **** 				{
 619:SOURCES/database.c **** 					if( !WriteRecord( dbFile, temp2, WRITE_OVER ))
 2191                             		.loc 1 619 0
 2192 0da0 AB 69                   		mov.L	52[r6], r1
 2193 0da2 AA 62                   		mov.L	32[r6], r2
 2194 0da4 66 13                   		mov.L	#1, r3
 2195 0da6 05 00 00 00             		bsr	_WriteRecord
 2196 0daa EF 1A                   		mov.L	r1, r10
 2197 0dac 61 0A                   		cmp	#0, r10
 2198 0dae 3A A6 00                		beq	.L223
 2199 0db1 03                      		.balign 2,3,1
 2200                             	.L201:
 620:SOURCES/database.c **** 						goto CleanAll;
 621:SOURCES/database.c **** 
 622:SOURCES/database.c **** 					if( !GotoRecord( dbFile, i ))
 2201                             		.loc 1 622 0
 2202 0db2 AB 69                   		mov.L	52[r6], r1
 2203 0db4 A8 E2                   		mov.L	8[r6], r2
 2204 0db6 05 00 00 00             		bsr	_GotoRecord
 2205 0dba EF 1A                   		mov.L	r1, r10
 2206 0dbc 61 0A                   		cmp	#0, r10
 2207 0dbe 3A 98 00                		beq	.L224
 2208 0dc1 03                      		.balign 2,3,1
 2209                             	.L202:
 623:SOURCES/database.c **** 						goto CleanAll;
 624:SOURCES/database.c **** 					if( !WriteRecord( dbFile, temp3, WRITE_OVER ))
 2210                             		.loc 1 624 0
 2211 0dc2 AB 69                   		mov.L	52[r6], r1
 2212 0dc4 AA 6A                   		mov.L	36[r6], r2
 2213 0dc6 66 13                   		mov.L	#1, r3
 2214 0dc8 05 00 00 00             		bsr	_WriteRecord
 2215 0dcc EF 1A                   		mov.L	r1, r10
 2216 0dce 61 0A                   		cmp	#0, r10
 2217 0dd0 3A 89 00                		beq	.L225
 2218 0dd3 03                      		.balign 2,3,1
 2219                             	.L203:
 625:SOURCES/database.c **** 						goto CleanAll;
 626:SOURCES/database.c **** 					i++;
 2220                             		.loc 1 626 0
 2221 0dd4 ED 6A 02                		mov.L	8[r6], r10
 2222 0dd7 62 1A                   		add	#1, r10
 2223 0dd9 E7 6A 02                		mov.L	r10, 8[r6]
 627:SOURCES/database.c **** 					j--;
 2224                             		.loc 1 627 0
 2225 0ddc ED 6A 03                		mov.L	12[r6], r10
 2226 0ddf 60 1A                   		sub	#1, r10
 2227 0de1 E7 6A 03                		mov.L	r10, 12[r6]
 2228                             		.balign 2,3,1
 2229                             	.L200:
 628:SOURCES/database.c **** 				}
 629:SOURCES/database.c **** 			} while( i <= j  );
 2230                             		.loc 1 629 0
 2231 0de4 ED 6B 02                		mov.L	8[r6], r11
 2232 0de7 ED 6A 03                		mov.L	12[r6], r10
 2233 0dea 47 AB                   		cmp	r10, r11
 2234 0dec 2A 05 38 CC FE          		ble	.L189
 630:SOURCES/database.c **** 			if( i < r )
 2235                             		.loc 1 630 0
 2236 0df1 ED 6B 02                		mov.L	8[r6], r11
 2237 0df4 EC 6A                   		mov.L	[r6], r10
 2238 0df6 47 AB                   		cmp	r10, r11
 2239 0df8 28 28                   		bge	.L204
 631:SOURCES/database.c **** 			{
 632:SOURCES/database.c **** 				s++;
 2240                             		.loc 1 632 0
 2241 0dfa ED 6A 01                		mov.L	4[r6], r10
 2242 0dfd 62 1A                   		add	#1, r10
 2243 0dff E7 6A 01                		mov.L	r10, 4[r6]
 633:SOURCES/database.c **** 				stackl[ s ] = i;
 2244                             		.loc 1 633 0
 2245 0e02 ED 6A 01                		mov.L	4[r6], r10
 2246 0e05 6C 2A                   		shll	#2, r10
 2247 0e07 ED 6B 0A                		mov.L	40[r6], r11
 2248 0e0a 4B BA                   		add	r11, r10
 2249 0e0c ED 6B 02                		mov.L	8[r6], r11
 2250 0e0f E3 AB                   		mov.L	r11, [r10]
 634:SOURCES/database.c **** 				stackr[ s ] = r;
 2251                             		.loc 1 634 0
 2252 0e11 ED 6A 01                		mov.L	4[r6], r10
 2253 0e14 6C 2A                   		shll	#2, r10
 2254 0e16 ED 6B 0B                		mov.L	44[r6], r11
 2255 0e19 4B BA                   		add	r11, r10
 2256 0e1b EC 6B                   		mov.L	[r6], r11
 2257 0e1d E3 AB                   		mov.L	r11, [r10]
 2258 0e1f 03                      		.balign 2,3,1
 2259                             	.L204:
 635:SOURCES/database.c **** 			}
 636:SOURCES/database.c **** 			r = j;
 2260                             		.loc 1 636 0
 2261 0e20 ED 6A 03                		mov.L	12[r6], r10
 2262 0e23 E3 6A                   		mov.L	r10, [r6]
 637:SOURCES/database.c **** 		} while( l < r );
 2263                             		.loc 1 637 0
 2264 0e25 ED 6B 0C                		mov.L	48[r6], r11
 2265 0e28 EC 6A                   		mov.L	[r6], r10
 2266 0e2a 47 AB                   		cmp	r10, r11
 2267 0e2c 28 05 38 5A FE          		blt	.L205
 638:SOURCES/database.c **** 	} while( s > 0L );
 2268                             		.loc 1 638 0
 2269 0e31 ED 6A 01                		mov.L	4[r6], r10
 2270 0e34 61 0A                   		cmp	#0, r10
 2271 0e36 2B 05 38 2A FE          		bgt	.L206
 2272 0e3b 2E 1F                   		bra	.L188
 2273                             	.L213:
 584:SOURCES/database.c **** 				goto CleanAll;
 2274                             		.loc 1 584 0
 2275 0e3d 03                      		nop
 2276 0e3e 2E 1C                   		bra	.L188
 2277                             	.L214:
 586:SOURCES/database.c **** 				goto CleanAll;
 2278                             		.loc 1 586 0
 2279 0e40 03                      		nop
 2280 0e41 2E 19                   		bra	.L188
 2281                             	.L215:
 592:SOURCES/database.c **** 					goto CleanAll;
 2282                             		.loc 1 592 0
 2283 0e43 03                      		nop
 2284 0e44 2E 16                   		bra	.L188
 2285                             	.L217:
 599:SOURCES/database.c **** 						goto CleanAll;
 2286                             		.loc 1 599 0
 2287 0e46 03                      		nop
 2288 0e47 2E 13                   		bra	.L188
 2289                             	.L218:
 601:SOURCES/database.c **** 						goto CleanAll;
 2290                             		.loc 1 601 0
 2291 0e49 03                      		nop
 2292 0e4a 2E 10                   		bra	.L188
 2293                             	.L219:
 605:SOURCES/database.c **** 					goto CleanAll;
 2294                             		.loc 1 605 0
 2295 0e4c 03                      		nop
 2296 0e4d 2E 0D                   		bra	.L188
 2297                             	.L221:
 612:SOURCES/database.c **** 						goto CleanAll;
 2298                             		.loc 1 612 0
 2299 0e4f 03                      		nop
 2300 0e50 0A                      		bra	.L188
 2301                             	.L222:
 614:SOURCES/database.c **** 						goto CleanAll;
 2302                             		.loc 1 614 0
 2303 0e51 03                      		nop
 2304 0e52 2E 08                   		bra	.L188
 2305                             	.L223:
 620:SOURCES/database.c **** 						goto CleanAll;
 2306                             		.loc 1 620 0
 2307 0e54 03                      		nop
 2308 0e55 0D                      		bra	.L188
 2309                             	.L224:
 623:SOURCES/database.c **** 						goto CleanAll;
 2310                             		.loc 1 623 0
 2311 0e56 03                      		nop
 2312 0e57 2E 03                   		bra	.L188
 2313                             	.L225:
 625:SOURCES/database.c **** 						goto CleanAll;
 2314                             		.loc 1 625 0
 2315 0e59 03                      		nop
 2316                             		.balign 2,3,1
 2317                             	.L188:
 639:SOURCES/database.c **** 
 640:SOURCES/database.c **** CleanAll:
 641:SOURCES/database.c **** 	free( stackr );
 2318                             		.loc 1 641 0
 2319 0e5a AA E9                   		mov.L	44[r6], r1
 2320 0e5c 05 00 00 00             		bsr	_free
 2321 0e60 2E 04                   		bra	.L186
 2322                             	.L212:
 568:SOURCES/database.c **** 		goto Clean5;
 2323                             		.loc 1 568 0
 2324 0e62 03                      		nop
 2325 0e63 03                      		.balign 2,3,1
 2326                             	.L186:
 642:SOURCES/database.c **** Clean5:
 643:SOURCES/database.c **** 	free( stackl );
 2327                             		.loc 1 643 0
 2328 0e64 AA E1                   		mov.L	40[r6], r1
 2329 0e66 05 00 00 00             		bsr	_free
 2330 0e6a 2E 04                   		bra	.L184
 2331                             	.L211:
 565:SOURCES/database.c **** 		goto Clean4;
 2332                             		.loc 1 565 0
 2333 0e6c 03                      		nop
 2334 0e6d 03                      		.balign 2,3,1
 2335                             	.L184:
 644:SOURCES/database.c **** Clean4:
 645:SOURCES/database.c **** 	free( temp3 );
 2336                             		.loc 1 645 0
 2337 0e6e AA 69                   		mov.L	36[r6], r1
 2338 0e70 05 00 00 00             		bsr	_free
 2339 0e74 2E 04                   		bra	.L180
 2340                             	.L210:
 553:SOURCES/database.c **** 		goto Clean3;
 2341                             		.loc 1 553 0
 2342 0e76 03                      		nop
 2343 0e77 03                      		.balign 2,3,1
 2344                             	.L180:
 646:SOURCES/database.c **** Clean3:
 647:SOURCES/database.c **** 	free( temp2 );
 2345                             		.loc 1 647 0
 2346 0e78 AA 61                   		mov.L	32[r6], r1
 2347 0e7a 05 00 00 00             		bsr	_free
 2348 0e7e 2E 04                   		bra	.L178
 2349                             	.L209:
 550:SOURCES/database.c **** 		goto Clean2;
 2350                             		.loc 1 550 0
 2351 0e80 03                      		nop
 2352 0e81 03                      		.balign 2,3,1
 2353                             	.L178:
 648:SOURCES/database.c **** Clean2:
 649:SOURCES/database.c **** 	free( temp1 );
 2354                             		.loc 1 649 0
 2355 0e82 A9 E9                   		mov.L	28[r6], r1
 2356 0e84 05 00 00 00             		bsr	_free
 2357 0e88 2E 04                   		bra	.L176
 2358                             	.L208:
 547:SOURCES/database.c **** 		goto Clean1;
 2359                             		.loc 1 547 0
 2360 0e8a 03                      		nop
 2361 0e8b 03                      		.balign 2,3,3
 2362                             	.L176:
 650:SOURCES/database.c **** Clean1:
 651:SOURCES/database.c **** 	if( GetDBErrorCode() != DB_OK )
 2363                             		.loc 1 651 0
 2364 0e8c 05 00 00 00             		bsr	_GetDBErrorCode
 2365 0e90 EF 1A                   		mov.L	r1, r10
 2366 0e92 61 0A                   		cmp	#0, r10
 2367 0e94 14                      		beq	.L207
 652:SOURCES/database.c **** 		return FALSE;
 2368                             		.loc 1 652 0
 2369 0e95 66 0A                   		mov.L	#0, r10
 2370 0e97 0B                      		bra	.L173
 2371                             	.L207:
 653:SOURCES/database.c **** 	return TRUE;
 2372                             		.loc 1 653 0
 2373 0e98 66 1A                   		mov.L	#1, r10
 2374                             		.balign 2,3,1
 2375                             	.L173:
 654:SOURCES/database.c **** }
 2376                             		.loc 1 654 0
 2377 0e9a EF A1                   		mov.L	r10, r1
 2378 0e9c 3F 6C 16                		rtsd	#88, r6-r12
 2379                             	.LFE18:
 2381                             		.global	_BinarySearch
 2383                             	_BinarySearch:
 2384                             	.LFB19:
 655:SOURCES/database.c **** 
 656:SOURCES/database.c **** 
 657:SOURCES/database.c **** // ++++++++++++++++++++++++++++++++++++++
 658:SOURCES/database.c **** // Searching database function
 659:SOURCES/database.c **** // ++++++++++++++++++++++++++++++++++++++
 660:SOURCES/database.c **** 
 661:SOURCES/database.c **** 
 662:SOURCES/database.c **** long BinarySearch( SDBFile *dbFile, char* record, char* searchkey, int checksize, int offset )
 663:SOURCES/database.c **** {
 2385                             		.loc 1 663 0
 2386 0e9f 6E 6C                   		pushm	r6-r12
 2387                             	.LCFI65:
 2388 0ea1 71 06 DC                		add	#-36, r0, r6
 2389                             	.LCFI66:
 2390 0ea4 EF 60                   		mov.L	r6, r0
 2391                             	.LCFI67:
 2392 0ea6 75 4C 44                		mov.L	#0x44, r12
 2393 0ea9 4B 6C                   		add	r6, r12
 2394 0eab A1 61                   		mov.L	r1, 16[r6]
 2395 0ead A1 6A                   		mov.L	r2, 20[r6]
 2396 0eaf A1 E3                   		mov.L	r3, 24[r6]
 2397 0eb1 A1 EC                   		mov.L	r4, 28[r6]
 664:SOURCES/database.c **** 	int test;
 665:SOURCES/database.c **** 	long min, max, current;
 666:SOURCES/database.c **** 
 667:SOURCES/database.c **** 	if( (max = GetTotalRecords( dbFile )) == -1L )
 2398                             		.loc 1 667 0
 2399 0eb3 A9 61                   		mov.L	16[r6], r1
 2400 0eb5 05 00 00 00             		bsr	_GetTotalRecords
 2401 0eb9 A0 69                   		mov.L	r1, 4[r6]
 2402 0ebb ED 6A 01                		mov.L	4[r6], r10
 2403 0ebe 75 0A FF                		cmp	#-1, r10
 2404 0ec1 1F                      		bne	.L227
 668:SOURCES/database.c **** 		return -1L;
 2405                             		.loc 1 668 0
 2406 0ec2 FB A6 FF                		mov.L	#-1, r10
 2407 0ec5 38 91 00                		bra	.L228
 2408                             	.L227:
 669:SOURCES/database.c **** 	min = 0L;
 2409                             		.loc 1 669 0
 2410 0ec8 3E 60 00                		mov.L	#0, [r6]
 2411 0ecb 0B                      		bra	.L235
 2412                             	.L236:
 670:SOURCES/database.c **** 	for (;;)
 671:SOURCES/database.c **** 	{
 672:SOURCES/database.c **** 		current = ((max - min) >> 1) + min;
 673:SOURCES/database.c **** 		if( !GotoRecord( dbFile, current ))
 674:SOURCES/database.c **** 			return -1L;
 675:SOURCES/database.c **** 		if( !ReadCurrentRecord( dbFile, record ))
 676:SOURCES/database.c **** 			return -1L;
 677:SOURCES/database.c **** 
 678:SOURCES/database.c **** 		if( (test = memcmp( searchkey, record + offset, checksize )) == 0 )
 679:SOURCES/database.c **** 			return current; // found the searchstring
 680:SOURCES/database.c **** 
 681:SOURCES/database.c **** 		if( test < 0 )
 682:SOURCES/database.c **** 			max = current - 1L;
 683:SOURCES/database.c **** 		else
 684:SOURCES/database.c **** 			min = current + 1L;
 685:SOURCES/database.c **** 		if( min > max)
 686:SOURCES/database.c **** 		{
 687:SOURCES/database.c **** 			lErrorCode = DB_ERROR_NOT_FOUND;
 688:SOURCES/database.c **** 			record[0] = '\0';
 689:SOURCES/database.c **** 			return (-1L);
 690:SOURCES/database.c **** 		}
 691:SOURCES/database.c **** 	}
 2413                             		.loc 1 691 0
 2414 0ecc 03                      		nop
 2415 0ecd 03                      		.balign 2,3,1
 2416                             	.L235:
 672:SOURCES/database.c **** 		current = ((max - min) >> 1) + min;
 2417                             		.loc 1 672 0
 2418 0ece ED 6B 01                		mov.L	4[r6], r11
 2419 0ed1 EC 6A                   		mov.L	[r6], r10
 2420 0ed3 FF 0A AB                		sub	r10, r11, r10
 2421 0ed6 6A 1A                   		shar	#1, r10
 2422 0ed8 06 88 6A                		add	[r6].L, r10
 2423 0edb E7 6A 02                		mov.L	r10, 8[r6]
 673:SOURCES/database.c **** 		if( !GotoRecord( dbFile, current ))
 2424                             		.loc 1 673 0
 2425 0ede A9 61                   		mov.L	16[r6], r1
 2426 0ee0 A8 E2                   		mov.L	8[r6], r2
 2427 0ee2 05 00 00 00             		bsr	_GotoRecord
 2428 0ee6 EF 1A                   		mov.L	r1, r10
 2429 0ee8 61 0A                   		cmp	#0, r10
 2430 0eea 1E                      		bne	.L229
 674:SOURCES/database.c **** 			return -1L;
 2431                             		.loc 1 674 0
 2432 0eeb FB A6 FF                		mov.L	#-1, r10
 2433 0eee 2E 68                   		bra	.L228
 2434                             	.L229:
 675:SOURCES/database.c **** 		if( !ReadCurrentRecord( dbFile, record ))
 2435                             		.loc 1 675 0
 2436 0ef0 A9 61                   		mov.L	16[r6], r1
 2437 0ef2 A9 6A                   		mov.L	20[r6], r2
 2438 0ef4 05 00 00 00             		bsr	_ReadCurrentRecord
 2439 0ef8 EF 1A                   		mov.L	r1, r10
 2440 0efa 61 0A                   		cmp	#0, r10
 2441 0efc 1E                      		bne	.L230
 676:SOURCES/database.c **** 			return -1L;
 2442                             		.loc 1 676 0
 2443 0efd FB A6 FF                		mov.L	#-1, r10
 2444 0f00 2E 56                   		bra	.L228
 2445                             	.L230:
 678:SOURCES/database.c **** 		if( (test = memcmp( searchkey, record + offset, checksize )) == 0 )
 2446                             		.loc 1 678 0
 2447 0f02 EC CA                   		mov.L	[r12], r10
 2448 0f04 ED 6B 05                		mov.L	20[r6], r11
 2449 0f07 4B AB                   		add	r10, r11
 2450 0f09 ED 6A 07                		mov.L	28[r6], r10
 2451 0f0c A9 E1                   		mov.L	24[r6], r1
 2452 0f0e EF B2                   		mov.L	r11, r2
 2453 0f10 EF A3                   		mov.L	r10, r3
 2454 0f12 05 00 00 00             		bsr	_memcmp
 2455 0f16 A0 E9                   		mov.L	r1, 12[r6]
 2456 0f18 ED 6A 03                		mov.L	12[r6], r10
 2457 0f1b 61 0A                   		cmp	#0, r10
 2458 0f1d 1E                      		bne	.L231
 679:SOURCES/database.c **** 			return current; // found the searchstring
 2459                             		.loc 1 679 0
 2460 0f1e ED 6A 02                		mov.L	8[r6], r10
 2461 0f21 2E 35                   		bra	.L228
 2462                             	.L231:
 681:SOURCES/database.c **** 		if( test < 0 )
 2463                             		.loc 1 681 0
 2464 0f23 ED 6A 03                		mov.L	12[r6], r10
 2465 0f26 61 0A                   		cmp	#0, r10
 2466 0f28 28 0B                   		bge	.L232
 682:SOURCES/database.c **** 			max = current - 1L;
 2467                             		.loc 1 682 0
 2468 0f2a ED 6A 02                		mov.L	8[r6], r10
 2469 0f2d 60 1A                   		sub	#1, r10
 2470 0f2f E7 6A 01                		mov.L	r10, 4[r6]
 2471 0f32 08                      		bra	.L233
 2472                             	.L232:
 684:SOURCES/database.c **** 			min = current + 1L;
 2473                             		.loc 1 684 0
 2474 0f33 ED 6A 02                		mov.L	8[r6], r10
 2475 0f36 62 1A                   		add	#1, r10
 2476 0f38 E3 6A                   		mov.L	r10, [r6]
 2477                             		.balign 2,3,1
 2478                             	.L233:
 685:SOURCES/database.c **** 		if( min > max)
 2479                             		.loc 1 685 0
 2480 0f3a EC 6B                   		mov.L	[r6], r11
 2481 0f3c ED 6A 01                		mov.L	4[r6], r10
 2482 0f3f 47 AB                   		cmp	r10, r11
 2483 0f41 2B 8B                   		ble	.L236
 687:SOURCES/database.c **** 			lErrorCode = DB_ERROR_NOT_FOUND;
 2484                             		.loc 1 687 0
 2485 0f43 FB A2 00 00 00 00       		mov.L	#_lErrorCode, r10
 2486 0f49 F8 AA 00 10             		mov.L	#0x1000, [r10]
 688:SOURCES/database.c **** 			record[0] = '\0';
 2487                             		.loc 1 688 0
 2488 0f4d ED 6A 05                		mov.L	20[r6], r10
 2489 0f50 F8 A4 00                		mov.B	#0, [r10]
 689:SOURCES/database.c **** 			return (-1L);
 2490                             		.loc 1 689 0
 2491 0f53 FB A6 FF                		mov.L	#-1, r10
 2492                             		.balign 2,3,1
 2493                             	.L228:
 692:SOURCES/database.c **** }
 2494                             		.loc 1 692 0
 2495 0f56 EF A1                   		mov.L	r10, r1
 2496 0f58 3F 6C 10                		rtsd	#64, r6-r12
 2497                             	.LFE19:
 2499                             		.global	_LineairSearch
 2501                             	_LineairSearch:
 2502                             	.LFB20:
 693:SOURCES/database.c **** 
 694:SOURCES/database.c **** long LineairSearch( SDBFile *dbFile, char* record, char* searchkey, int checksize, int offset )
 695:SOURCES/database.c **** {
 2503                             		.loc 1 695 0
 2504 0f5b 6E 6C                   		pushm	r6-r12
 2505                             	.LCFI68:
 2506 0f5d 71 06 E4                		add	#-28, r0, r6
 2507                             	.LCFI69:
 2508 0f60 EF 60                   		mov.L	r6, r0
 2509                             	.LCFI70:
 2510 0f62 75 4C 3C                		mov.L	#60, r12
 2511 0f65 4B 6C                   		add	r6, r12
 2512 0f67 A0 E1                   		mov.L	r1, 8[r6]
 2513 0f69 A0 EA                   		mov.L	r2, 12[r6]
 2514 0f6b A1 63                   		mov.L	r3, 16[r6]
 2515 0f6d A1 6C                   		mov.L	r4, 20[r6]
 696:SOURCES/database.c **** 	long totalrecords, i;
 697:SOURCES/database.c **** 	if( (totalrecords = GetTotalRecords( dbFile )) == -1L )
 2516                             		.loc 1 697 0
 2517 0f6f A8 E1                   		mov.L	8[r6], r1
 2518 0f71 05 00 00 00             		bsr	_GetTotalRecords
 2519 0f75 A0 69                   		mov.L	r1, 4[r6]
 2520 0f77 ED 6A 01                		mov.L	4[r6], r10
 2521 0f7a 75 0A FF                		cmp	#-1, r10
 2522 0f7d 1E                      		bne	.L238
 698:SOURCES/database.c **** 		return -1L;
 2523                             		.loc 1 698 0
 2524 0f7e FB A6 FF                		mov.L	#-1, r10
 2525 0f81 2E 6B                   		bra	.L239
 2526                             	.L238:
 699:SOURCES/database.c **** 	for( i = 0L; i < totalrecords; i++ )
 2527                             		.loc 1 699 0
 2528 0f83 3E 60 00                		mov.L	#0, [r6]
 2529 0f86 2E 4A                   		bra	.L240
 2530                             	.L244:
 700:SOURCES/database.c **** 	{
 701:SOURCES/database.c **** 		if( !GotoRecord( dbFile, i ) )
 2531                             		.loc 1 701 0
 2532 0f88 A8 E1                   		mov.L	8[r6], r1
 2533 0f8a EC 62                   		mov.L	[r6], r2
 2534 0f8c 05 00 00 00             		bsr	_GotoRecord
 2535 0f90 EF 1A                   		mov.L	r1, r10
 2536 0f92 61 0A                   		cmp	#0, r10
 2537 0f94 1E                      		bne	.L241
 702:SOURCES/database.c **** 			return -1L;
 2538                             		.loc 1 702 0
 2539 0f95 FB A6 FF                		mov.L	#-1, r10
 2540 0f98 2E 54                   		bra	.L239
 2541                             	.L241:
 703:SOURCES/database.c **** 		if( !ReadCurrentRecord( dbFile, record ))
 2542                             		.loc 1 703 0
 2543 0f9a A8 E1                   		mov.L	8[r6], r1
 2544 0f9c A8 EA                   		mov.L	12[r6], r2
 2545 0f9e 05 00 00 00             		bsr	_ReadCurrentRecord
 2546 0fa2 EF 1A                   		mov.L	r1, r10
 2547 0fa4 61 0A                   		cmp	#0, r10
 2548 0fa6 1E                      		bne	.L242
 704:SOURCES/database.c **** 			return -1L;
 2549                             		.loc 1 704 0
 2550 0fa7 FB A6 FF                		mov.L	#-1, r10
 2551 0faa 2E 42                   		bra	.L239
 2552                             	.L242:
 705:SOURCES/database.c **** 		if( memcmp( searchkey, record + offset, checksize ) == 0 )
 2553                             		.loc 1 705 0
 2554 0fac EC CA                   		mov.L	[r12], r10
 2555 0fae ED 6B 03                		mov.L	12[r6], r11
 2556 0fb1 4B AB                   		add	r10, r11
 2557 0fb3 ED 6A 05                		mov.L	20[r6], r10
 2558 0fb6 A9 61                   		mov.L	16[r6], r1
 2559 0fb8 EF B2                   		mov.L	r11, r2
 2560 0fba EF A3                   		mov.L	r10, r3
 2561 0fbc 05 00 00 00             		bsr	_memcmp
 2562 0fc0 EF 1A                   		mov.L	r1, r10
 2563 0fc2 61 0A                   		cmp	#0, r10
 2564 0fc4 1D                      		bne	.L243
 706:SOURCES/database.c **** 			return i;
 2565                             		.loc 1 706 0
 2566 0fc5 EC 6A                   		mov.L	[r6], r10
 2567 0fc7 2E 25                   		bra	.L239
 2568                             	.L243:
 699:SOURCES/database.c **** 	for( i = 0L; i < totalrecords; i++ )
 2569                             		.loc 1 699 0
 2570 0fc9 EC 6A                   		mov.L	[r6], r10
 2571 0fcb 62 1A                   		add	#1, r10
 2572 0fcd E3 6A                   		mov.L	r10, [r6]
 2573 0fcf 03                      		.balign 2,3,1
 2574                             	.L240:
 699:SOURCES/database.c **** 	for( i = 0L; i < totalrecords; i++ )
 2575                             		.loc 1 699 0 is_stmt 0 discriminator 1
 2576 0fd0 EC 6B                   		mov.L	[r6], r11
 2577 0fd2 ED 6A 01                		mov.L	4[r6], r10
 2578 0fd5 47 AB                   		cmp	r10, r11
 2579 0fd7 29 B1                   		blt	.L244
 707:SOURCES/database.c **** 	}
 708:SOURCES/database.c **** 	lErrorCode = DB_ERROR_NOT_FOUND;
 2580                             		.loc 1 708 0 is_stmt 1
 2581 0fd9 FB A2 00 00 00 00       		mov.L	#_lErrorCode, r10
 2582 0fdf F8 AA 00 10             		mov.L	#0x1000, [r10]
 709:SOURCES/database.c **** 	record[0] = '\0';
 2583                             		.loc 1 709 0
 2584 0fe3 ED 6A 03                		mov.L	12[r6], r10
 2585 0fe6 F8 A4 00                		mov.B	#0, [r10]
 710:SOURCES/database.c **** 	return -1L;
 2586                             		.loc 1 710 0
 2587 0fe9 FB A6 FF                		mov.L	#-1, r10
 2588                             		.balign 2,3,1
 2589                             	.L239:
 711:SOURCES/database.c **** }
 2590                             		.loc 1 711 0
 2591 0fec EF A1                   		mov.L	r10, r1
 2592 0fee 3F 6C 0E                		rtsd	#56, r6-r12
 2593                             	.LFE20:
 2595                             		.global	_CreateIndexFile
 2597                             	_CreateIndexFile:
 2598                             	.LFB21:
 712:SOURCES/database.c **** 
 713:SOURCES/database.c **** 
 714:SOURCES/database.c **** // +++++++++++++++++++++++++++++++++++++++++
 715:SOURCES/database.c **** // Special index functions
 716:SOURCES/database.c **** // +++++++++++++++++++++++++++++++++++++++++
 717:SOURCES/database.c **** 
 718:SOURCES/database.c **** //
 719:SOURCES/database.c **** // Make an index file on dbFile
 720:SOURCES/database.c **** // On ok ends with an open indexed file with recordsize of keysize + 4 bytes
 721:SOURCES/database.c **** // the 4 bytes holds the index record number
 722:SOURCES/database.c **** int CreateIndexFile( SDBFile *dbFile, short offset, short keysize, const char* indexfilename, SDBFi
 723:SOURCES/database.c **** {
 2599                             		.loc 1 723 0
 2600 0ff1 6E 6C                   		pushm	r6-r12
 2601                             	.LCFI71:
 2602 0ff3 71 06 E4                		add	#-28, r0, r6
 2603                             	.LCFI72:
 2604 0ff6 EF 60                   		mov.L	r6, r0
 2605                             	.LCFI73:
 2606 0ff8 75 4A 3C                		mov.L	#60, r10
 2607 0ffb 4B 6A                   		add	r6, r10
 2608 0ffd A0 E9                   		mov.L	r1, 12[r6]
 2609 0fff 92 62                   		mov.W	r2, 16[r6]
 2610 1001 92 6B                   		mov.W	r3, 18[r6]
 2611 1003 A1 6C                   		mov.L	r4, 20[r6]
 724:SOURCES/database.c **** 	char* record;
 725:SOURCES/database.c **** 	long i, totalrecords;
 726:SOURCES/database.c **** 
 727:SOURCES/database.c **** 	if( !IsFileOpen( dbFile ))
 2612                             		.loc 1 727 0
 2613 1005 A8 E9                   		mov.L	12[r6], r1
 2614 1007 39 0E F0                		bsr	_IsFileOpen
 2615 100a EF 1B                   		mov.L	r1, r11
 2616 100c 61 0B                   		cmp	#0, r11
 2617 100e 1E                      		bne	.L246
 728:SOURCES/database.c **** 		return FALSE;
 2618                             		.loc 1 728 0
 2619 100f 66 0A                   		mov.L	#0, r10
 2620 1011 38 01 01                		bra	.L257
 2621                             	.L246:
 729:SOURCES/database.c **** 	if( ( totalrecords = GetTotalRecords( dbFile )) == 0L )
 2622                             		.loc 1 729 0
 2623 1014 A8 E9                   		mov.L	12[r6], r1
 2624 1016 05 00 00 00             		bsr	_GetTotalRecords
 2625 101a E3 61                   		mov.L	r1, [r6]
 2626 101c EC 6B                   		mov.L	[r6], r11
 2627 101e 61 0B                   		cmp	#0, r11
 2628 1020 21 10                   		bne	.L248
 730:SOURCES/database.c **** 	{
 731:SOURCES/database.c **** 		lErrorCode = DB_ERROR_EMPTY;
 2629                             		.loc 1 731 0
 2630 1022 FB A2 00 00 00 00       		mov.L	#_lErrorCode, r10
 2631 1028 F8 A6 06                		mov.L	#6, [r10]
 732:SOURCES/database.c **** 		return FALSE;
 2632                             		.loc 1 732 0
 2633 102b 66 0A                   		mov.L	#0, r10
 2634 102d 38 E5 00                		bra	.L257
 2635                             	.L248:
 733:SOURCES/database.c **** 	}
 734:SOURCES/database.c **** 
 735:SOURCES/database.c **** 	if( !CreateDatabase( indexfilename, (short)(keysize + sizeof( long )), dbIndex)	)
 2636                             		.loc 1 735 0
 2637 1030 DD 6B 09                		mov.W	18[r6], r11
 2638 1033 62 4B                   		add	#4, r11
 2639 1035 A9 69                   		mov.L	20[r6], r1
 2640 1037 DF B2                   		mov.W	r11, r2
 2641 1039 EC A3                   		mov.L	[r10], r3
 2642 103b 05 00 00 00             		bsr	_CreateDatabase
 2643 103f EF 1B                   		mov.L	r1, r11
 2644 1041 61 0B                   		cmp	#0, r11
 2645 1043 1E                      		bne	.L249
 736:SOURCES/database.c **** 		return FALSE;
 2646                             		.loc 1 736 0
 2647 1044 66 0A                   		mov.L	#0, r10
 2648 1046 38 CC 00                		bra	.L257
 2649                             	.L249:
 737:SOURCES/database.c **** 
 738:SOURCES/database.c **** 	lErrorCode = DB_ERROR_MEM;
 2650                             		.loc 1 738 0
 2651 1049 FB B2 00 00 00 00       		mov.L	#_lErrorCode, r11
 2652 104f F8 B6 50                		mov.L	#0x50, [r11]
 739:SOURCES/database.c **** 	record = (char*)malloc( dbFile->sRecSz + sizeof( long ) );
 2653                             		.loc 1 739 0
 2654 1052 ED 6B 03                		mov.L	12[r6], r11
 2655 1055 DC BB                   		mov.W	[r11], r11
 2656 1057 DF BB                   		mov.W	r11, r11
 2657 1059 62 4B                   		add	#4, r11
 2658 105b EF B1                   		mov.L	r11, r1
 2659 105d 05 00 00 00             		bsr	_malloc
 2660 1061 EF 1B                   		mov.L	r1, r11
 2661 1063 E7 6B 01                		mov.L	r11, 4[r6]
 740:SOURCES/database.c **** 	if( record != NULL )
 2662                             		.loc 1 740 0
 2663 1066 ED 6B 01                		mov.L	4[r6], r11
 2664 1069 61 0B                   		cmp	#0, r11
 2665 106b 3A 98 00                		beq	.L250
 741:SOURCES/database.c **** 	{
 742:SOURCES/database.c **** 		lErrorCode = DB_OK;
 2666                             		.loc 1 742 0
 2667 106e FB B2 00 00 00 00       		mov.L	#_lErrorCode, r11
 2668 1074 F8 B6 00                		mov.L	#0, [r11]
 743:SOURCES/database.c **** 
 744:SOURCES/database.c **** 		for( i = 0; i < totalrecords; i++ )
 2669                             		.loc 1 744 0
 2670 1077 3E 62 00                		mov.L	#0, 8[r6]
 2671 107a 2E 54                   		bra	.L251
 2672                             	.L256:
 745:SOURCES/database.c **** 		{
 746:SOURCES/database.c **** 			if( !GotoRecord( dbFile, i ))
 2673                             		.loc 1 746 0
 2674 107c ED 6B 02                		mov.L	8[r6], r11
 2675 107f A8 E9                   		mov.L	12[r6], r1
 2676 1081 EF B2                   		mov.L	r11, r2
 2677 1083 05 00 00 00             		bsr	_GotoRecord
 2678 1087 EF 1B                   		mov.L	r1, r11
 2679 1089 61 0B                   		cmp	#0, r11
 2680 108b 20 4E                   		beq	.L258
 2681 108d 03                      		.balign 2,3,1
 2682                             	.L252:
 747:SOURCES/database.c **** 				break;
 748:SOURCES/database.c **** 			if( !ReadCurrentRecord( dbFile, record ))
 2683                             		.loc 1 748 0
 2684 108e A8 E9                   		mov.L	12[r6], r1
 2685 1090 A8 6A                   		mov.L	4[r6], r2
 2686 1092 05 00 00 00             		bsr	_ReadCurrentRecord
 2687 1096 EF 1B                   		mov.L	r1, r11
 2688 1098 61 0B                   		cmp	#0, r11
 2689 109a 20 41                   		beq	.L259
 2690                             		.balign 2,3,5
 2691                             	.L254:
 749:SOURCES/database.c **** 				break;
 750:SOURCES/database.c **** 			memcpy( record + (offset + keysize), &i, sizeof( long ));
 2692                             		.loc 1 750 0
 2693 109c DD 6C 08                		mov.W	16[r6], r12
 2694 109f DD 6B 09                		mov.W	18[r6], r11
 2695 10a2 4B CB                   		add	r12, r11
 2696 10a4 ED 6C 01                		mov.L	4[r6], r12
 2697 10a7 4B CB                   		add	r12, r11
 2698 10a9 ED 6C 02                		mov.L	8[r6], r12
 2699 10ac E3 BC                   		mov.L	r12, [r11]
 751:SOURCES/database.c **** 			if( !WriteRecord( dbIndex, record + offset, WRITE_APPEND ))
 2700                             		.loc 1 751 0
 2701 10ae DD 6B 08                		mov.W	16[r6], r11
 2702 10b1 ED 6C 01                		mov.L	4[r6], r12
 2703 10b4 4B CB                   		add	r12, r11
 2704 10b6 EC A1                   		mov.L	[r10], r1
 2705 10b8 EF B2                   		mov.L	r11, r2
 2706 10ba 66 23                   		mov.L	#2, r3
 2707 10bc 05 00 00 00             		bsr	_WriteRecord
 2708 10c0 EF 1B                   		mov.L	r1, r11
 2709 10c2 61 0B                   		cmp	#0, r11
 2710 10c4 20 1A                   		beq	.L260
 2711                             		.balign 2,3,1
 2712                             	.L255:
 744:SOURCES/database.c **** 		for( i = 0; i < totalrecords; i++ )
 2713                             		.loc 1 744 0
 2714 10c6 ED 6B 02                		mov.L	8[r6], r11
 2715 10c9 62 1B                   		add	#1, r11
 2716 10cb E7 6B 02                		mov.L	r11, 8[r6]
 2717                             		.balign 2,3,1
 2718                             	.L251:
 744:SOURCES/database.c **** 		for( i = 0; i < totalrecords; i++ )
 2719                             		.loc 1 744 0 is_stmt 0 discriminator 1
 2720 10ce ED 6C 02                		mov.L	8[r6], r12
 2721 10d1 EC 6B                   		mov.L	[r6], r11
 2722 10d3 47 BC                   		cmp	r11, r12
 2723 10d5 29 A7                   		blt	.L256
 2724 10d7 2E 09                   		bra	.L253
 2725                             	.L258:
 747:SOURCES/database.c **** 				break;
 2726                             		.loc 1 747 0 is_stmt 1
 2727 10d9 03                      		nop
 2728 10da 0E                      		bra	.L253
 2729                             	.L259:
 749:SOURCES/database.c **** 				break;
 2730                             		.loc 1 749 0
 2731 10db 03                      		nop
 2732 10dc 2E 04                   		bra	.L253
 2733                             	.L260:
 752:SOURCES/database.c **** 				break;
 2734                             		.loc 1 752 0
 2735 10de 03                      		nop
 2736 10df 03                      		.balign 2,3,1
 2737                             	.L253:
 753:SOURCES/database.c **** 		}
 754:SOURCES/database.c **** 		free( record );
 2738                             		.loc 1 754 0
 2739 10e0 A8 69                   		mov.L	4[r6], r1
 2740 10e2 05 00 00 00             		bsr	_free
 755:SOURCES/database.c **** 		//
 756:SOURCES/database.c **** 		// Sort the index database
 757:SOURCES/database.c **** 		//
 758:SOURCES/database.c **** 		if( GetDBErrorCode() == DB_OK )
 2741                             		.loc 1 758 0
 2742 10e6 05 00 00 00             		bsr	_GetDBErrorCode
 2743 10ea EF 1B                   		mov.L	r1, r11
 2744 10ec 61 0B                   		cmp	#0, r11
 2745 10ee 21 15                   		bne	.L250
 759:SOURCES/database.c **** 		{
 760:SOURCES/database.c **** 			if( QuickSort( dbIndex, 0, keysize ))
 2746                             		.loc 1 760 0
 2747 10f0 EC A1                   		mov.L	[r10], r1
 2748 10f2 66 02                   		mov	#0, r2
 2749 10f4 9A 6B                   		mov.W	18[r6], r3
 2750 10f6 05 00 00 00             		bsr	_QuickSort
 2751 10fa EF 1B                   		mov.L	r1, r11
 2752 10fc 61 0B                   		cmp	#0, r11
 2753 10fe 15                      		beq	.L250
 761:SOURCES/database.c **** 				return TRUE;
 2754                             		.loc 1 761 0
 2755 10ff 66 1A                   		mov.L	#1, r10
 2756 1101 2E 11                   		bra	.L257
 2757                             	.L250:
 762:SOURCES/database.c **** 		}
 763:SOURCES/database.c **** 	}
 764:SOURCES/database.c **** 	CloseDatabase( dbIndex );
 2758                             		.loc 1 764 0
 2759 1103 EC A1                   		mov.L	[r10], r1
 2760 1105 05 00 00 00             		bsr	_CloseDatabase
 765:SOURCES/database.c **** 	remove( indexfilename );
 2761                             		.loc 1 765 0
 2762 1109 A9 69                   		mov.L	20[r6], r1
 2763 110b 05 00 00 00             		bsr	_remove
 766:SOURCES/database.c **** 	return FALSE;
 2764                             		.loc 1 766 0
 2765 110f 66 0A                   		mov.L	#0, r10
 2766 1111 03                      		.balign 2,3,1
 2767                             	.L257:
 767:SOURCES/database.c **** }
 2768                             		.loc 1 767 0
 2769 1112 EF A1                   		mov.L	r10, r1
 2770 1114 3F 6C 0E                		rtsd	#56, r6-r12
 2771                             	.LFE21:
 2773                             		.global	_OpenIndexFile
 2775                             	_OpenIndexFile:
 2776                             	.LFB22:
 768:SOURCES/database.c **** 
 769:SOURCES/database.c **** int OpenIndexFile( const char *indexfilename, short keysize, SDBFile *dbIndex )
 770:SOURCES/database.c **** {
 2777                             		.loc 1 770 0
 2778 1117 7E AA                   		push.l	r10
 2779                             	.LCFI74:
 2780 1119 7E A6                   		push.l	r6
 2781                             	.LCFI75:
 2782 111b 71 06 F4                		add	#-12, r0, r6
 2783                             	.LCFI76:
 2784 111e EF 60                   		mov.L	r6, r0
 2785                             	.LCFI77:
 2786 1120 E3 61                   		mov.L	r1, [r6]
 2787 1122 90 E2                   		mov.W	r2, 4[r6]
 2788 1124 A0 E3                   		mov.L	r3, 8[r6]
 771:SOURCES/database.c **** 	return OpenDatabase( indexfilename, (short)(keysize + sizeof( long )), dbIndex );
 2789                             		.loc 1 771 0
 2790 1126 DD 6A 02                		mov.W	4[r6], r10
 2791 1129 62 4A                   		add	#4, r10
 2792 112b EC 61                   		mov.L	[r6], r1
 2793 112d DF A2                   		mov.W	r10, r2
 2794 112f A8 E3                   		mov.L	8[r6], r3
 2795 1131 05 00 00 00             		bsr	_OpenDatabase
 2796 1135 EF 1A                   		mov.L	r1, r10
 772:SOURCES/database.c **** }
 2797                             		.loc 1 772 0
 2798 1137 EF A1                   		mov.L	r10, r1
 2799 1139 62 C0                   		add	#12, r0
 2800 113b 7E B6                   		pop	r6
 2801 113d 7E BA                   		pop	r10
 2802 113f 02                      		rts
 2803                             	.LFE22:
 2805                             		.global	_SearchIndexFile
 2807                             	_SearchIndexFile:
 2808                             	.LFB23:
 773:SOURCES/database.c **** 
 774:SOURCES/database.c **** 
 775:SOURCES/database.c **** long SearchIndexFile( SDBFile *dbIndex, char *searchkey )
 776:SOURCES/database.c **** {
 2809                             		.loc 1 776 0
 2810 1140 6E 6B                   		pushm	r6-r11
 2811                             	.LCFI78:
 2812 1142 71 06 F4                		add	#-12, r0, r6
 2813                             	.LCFI79:
 2814 1145 71 60 FC                		add	#-4, r6, r0
 2815                             	.LCFI80:
 2816 1148 A0 69                   		mov.L	r1, 4[r6]
 2817 114a A0 E2                   		mov.L	r2, 8[r6]
 777:SOURCES/database.c **** 	static long recnr;
 778:SOURCES/database.c **** 	char* record;
 779:SOURCES/database.c **** 
 780:SOURCES/database.c **** 	if( !IsFileOpen( dbIndex ))
 2818                             		.loc 1 780 0
 2819 114c A8 69                   		mov.L	4[r6], r1
 2820 114e 39 C7 EE                		bsr	_IsFileOpen
 2821 1151 EF 1A                   		mov.L	r1, r10
 2822 1153 61 0A                   		cmp	#0, r10
 2823 1155 1F                      		bne	.L264
 781:SOURCES/database.c **** 		return -1L;
 2824                             		.loc 1 781 0
 2825 1156 FB A6 FF                		mov.L	#-1, r10
 2826 1159 38 9F 00                		bra	.L265
 2827                             	.L264:
 782:SOURCES/database.c **** 	if( ( recnr = GetTotalRecords( dbIndex )) == 0L )
 2828                             		.loc 1 782 0
 2829 115c A8 69                   		mov.L	4[r6], r1
 2830 115e 05 00 00 00             		bsr	_GetTotalRecords
 2831 1162 EF 1B                   		mov.L	r1, r11
 2832 1164 FB A2 04 00 00 00       		mov.L	#_recnr.3799, r10
 2833 116a E3 AB                   		mov.L	r11, [r10]
 2834 116c FB A2 04 00 00 00       		mov.L	#_recnr.3799, r10
 2835 1172 EC AA                   		mov.L	[r10], r10
 2836 1174 61 0A                   		cmp	#0, r10
 2837 1176 21 10                   		bne	.L266
 783:SOURCES/database.c **** 	{
 784:SOURCES/database.c **** 		lErrorCode = DB_ERROR_EMPTY;
 2838                             		.loc 1 784 0
 2839 1178 FB A2 00 00 00 00       		mov.L	#_lErrorCode, r10
 2840 117e F8 A6 06                		mov.L	#6, [r10]
 785:SOURCES/database.c **** 		return -1L;
 2841                             		.loc 1 785 0
 2842 1181 FB A6 FF                		mov.L	#-1, r10
 2843 1184 2E 74                   		bra	.L265
 2844                             	.L266:
 786:SOURCES/database.c **** 	}
 787:SOURCES/database.c **** 
 788:SOURCES/database.c **** 	if( ( record = (char*) malloc( dbIndex->sRecSz )) == NULL )
 2845                             		.loc 1 788 0
 2846 1186 ED 6A 01                		mov.L	4[r6], r10
 2847 1189 DC AA                   		mov.W	[r10], r10
 2848 118b DF AA                   		mov.W	r10, r10
 2849 118d EF A1                   		mov.L	r10, r1
 2850 118f 05 00 00 00             		bsr	_malloc
 2851 1193 EF 1A                   		mov.L	r1, r10
 2852 1195 E3 6A                   		mov.L	r10, [r6]
 2853 1197 EC 6A                   		mov.L	[r6], r10
 2854 1199 61 0A                   		cmp	#0, r10
 2855 119b 21 10                   		bne	.L267
 789:SOURCES/database.c **** 	{
 790:SOURCES/database.c **** 		lErrorCode = DB_ERROR_MEM;
 2856                             		.loc 1 790 0
 2857 119d FB A2 00 00 00 00       		mov.L	#_lErrorCode, r10
 2858 11a3 F8 A6 50                		mov.L	#0x50, [r10]
 791:SOURCES/database.c **** 		return -1L;
 2859                             		.loc 1 791 0
 2860 11a6 FB A6 FF                		mov.L	#-1, r10
 2861 11a9 2E 4F                   		bra	.L265
 2862                             	.L267:
 792:SOURCES/database.c **** 	}
 793:SOURCES/database.c **** 	recnr = -1L;
 2863                             		.loc 1 793 0
 2864 11ab FB A2 04 00 00 00       		mov.L	#_recnr.3799, r10
 2865 11b1 F8 A6 FF                		mov.L	#-1, [r10]
 794:SOURCES/database.c **** 	if( BinarySearch( dbIndex, record, searchkey, (dbIndex->sRecSz - sizeof( long ) ), 0 ) != -1L )
 2866                             		.loc 1 794 0
 2867 11b4 ED 6A 01                		mov.L	4[r6], r10
 2868 11b7 DC AA                   		mov.W	[r10], r10
 2869 11b9 DF AA                   		mov.W	r10, r10
 2870 11bb 60 4A                   		sub	#4, r10
 2871 11bd 3E 00 00                		mov.L	#0, [r0]
 2872 11c0 A8 69                   		mov.L	4[r6], r1
 2873 11c2 EC 62                   		mov.L	[r6], r2
 2874 11c4 A8 E3                   		mov.L	8[r6], r3
 2875 11c6 EF A4                   		mov.L	r10, r4
 2876 11c8 05 00 00 00             		bsr	_BinarySearch
 2877 11cc EF 1A                   		mov.L	r1, r10
 2878 11ce 75 0A FF                		cmp	#-1, r10
 2879 11d1 20 19                   		beq	.L268
 795:SOURCES/database.c **** 	{
 796:SOURCES/database.c **** 		memcpy( &recnr, record + (dbIndex->sRecSz - sizeof( long )), sizeof( long ) );
 2880                             		.loc 1 796 0
 2881 11d3 ED 6A 01                		mov.L	4[r6], r10
 2882 11d6 DC AA                   		mov.W	[r10], r10
 2883 11d8 DF AA                   		mov.W	r10, r10
 2884 11da 60 4A                   		sub	#4, r10
 2885 11dc EC 6B                   		mov.L	[r6], r11
 2886 11de 4B BA                   		add	r11, r10
 2887 11e0 EC AB                   		mov.L	[r10], r11
 2888 11e2 FB A2 04 00 00 00       		mov.L	#_recnr.3799, r10
 2889 11e8 E3 AB                   		mov.L	r11, [r10]
 2890                             		.balign 2,3,1
 2891                             	.L268:
 797:SOURCES/database.c **** 	}
 798:SOURCES/database.c **** 	free( record );
 2892                             		.loc 1 798 0
 2893 11ea EC 61                   		mov.L	[r6], r1
 2894 11ec 05 00 00 00             		bsr	_free
 799:SOURCES/database.c **** 	return recnr;
 2895                             		.loc 1 799 0
 2896 11f0 FB A2 04 00 00 00       		mov.L	#_recnr.3799, r10
 2897 11f6 EC AA                   		mov.L	[r10], r10
 2898                             		.balign 2,3,1
 2899                             	.L265:
 800:SOURCES/database.c **** }
 2900                             		.loc 1 800 0
 2901 11f8 EF A1                   		mov.L	r10, r1
 2902 11fa 3F 6B 0A                		rtsd	#40, r6-r11
 2903                             	.LFE23:
 2905                             		.global	_AddNewSearchkeyToIndex
 2907                             	_AddNewSearchkeyToIndex:
 2908                             	.LFB24:
 801:SOURCES/database.c **** 
 802:SOURCES/database.c **** int AddNewSearchkeyToIndex( SDBFile *dbIndex, char *nwsearchkey, long recordnumber )
 803:SOURCES/database.c **** {
 2909                             		.loc 1 803 0
 2910 11fd 6E 6B                   		pushm	r6-r11
 2911                             	.LCFI81:
 2912 11ff 71 06 F0                		add	#-16, r0, r6
 2913                             	.LCFI82:
 2914 1202 EF 60                   		mov.L	r6, r0
 2915                             	.LCFI83:
 2916 1204 A0 69                   		mov.L	r1, 4[r6]
 2917 1206 A0 E2                   		mov.L	r2, 8[r6]
 2918 1208 A0 EB                   		mov.L	r3, 12[r6]
 804:SOURCES/database.c **** 	char* record;
 805:SOURCES/database.c **** 	if( !IsFileOpen( dbIndex ))
 2919                             		.loc 1 805 0
 2920 120a A8 69                   		mov.L	4[r6], r1
 2921 120c 39 09 EE                		bsr	_IsFileOpen
 2922 120f EF 1A                   		mov.L	r1, r10
 2923 1211 61 0A                   		cmp	#0, r10
 2924 1213 1D                      		bne	.L270
 806:SOURCES/database.c **** 		return FALSE;
 2925                             		.loc 1 806 0
 2926 1214 66 0A                   		mov.L	#0, r10
 2927 1216 2E 7E                   		bra	.L271
 2928                             	.L270:
 807:SOURCES/database.c **** 
 808:SOURCES/database.c **** 	if( ( record = (char*) malloc( dbIndex->sRecSz )) == NULL )
 2929                             		.loc 1 808 0
 2930 1218 ED 6A 01                		mov.L	4[r6], r10
 2931 121b DC AA                   		mov.W	[r10], r10
 2932 121d DF AA                   		mov.W	r10, r10
 2933 121f EF A1                   		mov.L	r10, r1
 2934 1221 05 00 00 00             		bsr	_malloc
 2935 1225 EF 1A                   		mov.L	r1, r10
 2936 1227 E3 6A                   		mov.L	r10, [r6]
 2937 1229 EC 6A                   		mov.L	[r6], r10
 2938 122b 61 0A                   		cmp	#0, r10
 2939 122d 21 10                   		bne	.L272
 809:SOURCES/database.c **** 	{
 810:SOURCES/database.c **** 		lErrorCode = DB_ERROR_MEM;
 2940                             		.loc 1 810 0
 2941 122f FB A2 00 00 00 00       		mov.L	#_lErrorCode, r10
 2942 1235 F8 A6 50                		mov.L	#0x50, [r10]
 811:SOURCES/database.c **** 		return -1L;
 2943                             		.loc 1 811 0
 2944 1238 FB A6 FF                		mov.L	#-1, r10
 2945 123b 2E 59                   		bra	.L271
 2946                             	.L272:
 812:SOURCES/database.c **** 	}
 813:SOURCES/database.c **** 	memcpy( record, nwsearchkey, dbIndex->sRecSz - sizeof( long ) );
 2947                             		.loc 1 813 0
 2948 123d ED 6A 01                		mov.L	4[r6], r10
 2949 1240 DC AA                   		mov.W	[r10], r10
 2950 1242 DF AA                   		mov.W	r10, r10
 2951 1244 60 4A                   		sub	#4, r10
 2952 1246 EC 61                   		mov.L	[r6], r1
 2953 1248 A8 E2                   		mov.L	8[r6], r2
 2954 124a EF A3                   		mov.L	r10, r3
 2955 124c 05 00 00 00             		bsr	_memcpy
 814:SOURCES/database.c **** 	memcpy( record + dbIndex->sRecSz - sizeof( long ), &recordnumber, sizeof( long ) );
 2956                             		.loc 1 814 0
 2957 1250 ED 6A 01                		mov.L	4[r6], r10
 2958 1253 DC AA                   		mov.W	[r10], r10
 2959 1255 DF AA                   		mov.W	r10, r10
 2960 1257 60 4A                   		sub	#4, r10
 2961 1259 EC 6B                   		mov.L	[r6], r11
 2962 125b 4B BA                   		add	r11, r10
 2963 125d ED 6B 03                		mov.L	12[r6], r11
 2964 1260 E3 AB                   		mov.L	r11, [r10]
 815:SOURCES/database.c **** 	if( WriteRecord( dbIndex, record, WRITE_APPEND ) )
 2965                             		.loc 1 815 0
 2966 1262 A8 69                   		mov.L	4[r6], r1
 2967 1264 EC 62                   		mov.L	[r6], r2
 2968 1266 66 23                   		mov.L	#2, r3
 2969 1268 05 00 00 00             		bsr	_WriteRecord
 2970 126c EF 1A                   		mov.L	r1, r10
 2971 126e 61 0A                   		cmp	#0, r10
 2972 1270 20 1C                   		beq	.L273
 816:SOURCES/database.c **** 	{
 817:SOURCES/database.c **** 		free( record );
 2973                             		.loc 1 817 0
 2974 1272 EC 61                   		mov.L	[r6], r1
 2975 1274 05 00 00 00             		bsr	_free
 818:SOURCES/database.c **** 		return (  InsertionSort( dbIndex, 0, (short)(dbIndex->sRecSz - sizeof( long )) ));
 2976                             		.loc 1 818 0
 2977 1278 ED 6A 01                		mov.L	4[r6], r10
 2978 127b DC AA                   		mov.W	[r10], r10
 2979 127d 60 4A                   		sub	#4, r10
 2980 127f A8 69                   		mov.L	4[r6], r1
 2981 1281 66 02                   		mov	#0, r2
 2982 1283 DF A3                   		mov.W	r10, r3
 2983 1285 05 00 00 00             		bsr	_InsertionSort
 2984 1289 EF 1A                   		mov.L	r1, r10
 2985 128b 09                      		bra	.L271
 2986                             	.L273:
 819:SOURCES/database.c **** 	}
 820:SOURCES/database.c **** 	free( record );
 2987                             		.loc 1 820 0
 2988 128c EC 61                   		mov.L	[r6], r1
 2989 128e 05 00 00 00             		bsr	_free
 821:SOURCES/database.c **** 	return FALSE;
 2990                             		.loc 1 821 0
 2991 1292 66 0A                   		mov.L	#0, r10
 2992                             		.balign 2,3,1
 2993                             	.L271:
 822:SOURCES/database.c **** }
 2994                             		.loc 1 822 0
 2995 1294 EF A1                   		mov.L	r10, r1
 2996 1296 3F 6B 0A                		rtsd	#40, r6-r11
 2997                             	.LFE24:
 2999                             		.local	_recnr.3799
 3000                             		.comm	_recnr.3799,4,4
 3823                             	.Letext0:
 3824                             		.file 2 "SOURCES/database.h"
DEFINED SYMBOLS
                            *ABS*:00000000 database.c
C:\Users\willem\AppData\Local\Temp\ccMDvExh.s:5      B_1:00000000 _lErrorCode
C:\Users\willem\AppData\Local\Temp\ccMDvExh.s:8      P:00000000 _GetDBErrorCode
C:\Users\willem\AppData\Local\Temp\ccMDvExh.s:12     P:00000000 L0
C:\Users\willem\AppData\Local\Temp\ccMDvExh.s:29     P:00000015 _IsFileOpen
C:\Users\willem\AppData\Local\Temp\ccMDvExh.s:60     P:0000003e _OpenDatabase
C:\Users\willem\AppData\Local\Temp\ccMDvExh.s:244    P:00000183 _CloseDatabase
C:\Users\willem\AppData\Local\Temp\ccMDvExh.s:176    P:0000010b _CreateDatabase
C:\Users\willem\AppData\Local\Temp\ccMDvExh.s:290    P:000001bb _GetCurrentRecord
C:\Users\willem\AppData\Local\Temp\ccMDvExh.s:342    P:00000203 _GetTotalRecords
C:\Users\willem\AppData\Local\Temp\ccMDvExh.s:382    P:00000235 _GotoRecord
C:\Users\willem\AppData\Local\Temp\ccMDvExh.s:437    P:0000027f _ReadCurrentRecord
C:\Users\willem\AppData\Local\Temp\ccMDvExh.s:518    P:00000309 _ReadFirstRecord
C:\Users\willem\AppData\Local\Temp\ccMDvExh.s:567    P:00000343 _ReadLastRecord
C:\Users\willem\AppData\Local\Temp\ccMDvExh.s:629    P:00000393 _ReadPreviousRecord
C:\Users\willem\AppData\Local\Temp\ccMDvExh.s:691    P:000003e3 _ReadNextRecord
C:\Users\willem\AppData\Local\Temp\ccMDvExh.s:753    P:00000433 _DeleteRecord
C:\Users\willem\AppData\Local\Temp\ccMDvExh.s:927    P:0000053f _WriteRecord
C:\Users\willem\AppData\Local\Temp\ccMDvExh.s:1071   P:00000647 _InsertionSort
C:\Users\willem\AppData\Local\Temp\ccMDvExh.s:1343   P:000007e3 _downheap
C:\Users\willem\AppData\Local\Temp\ccMDvExh.s:1567   P:0000095d _HeapSort
C:\Users\willem\AppData\Local\Temp\ccMDvExh.s:1858   P:00000b29 _QuickSort
C:\Users\willem\AppData\Local\Temp\ccMDvExh.s:2383   P:00000e9f _BinarySearch
C:\Users\willem\AppData\Local\Temp\ccMDvExh.s:2501   P:00000f5b _LineairSearch
C:\Users\willem\AppData\Local\Temp\ccMDvExh.s:2597   P:00000ff1 _CreateIndexFile
C:\Users\willem\AppData\Local\Temp\ccMDvExh.s:2775   P:00001117 _OpenIndexFile
C:\Users\willem\AppData\Local\Temp\ccMDvExh.s:2807   P:00001140 _SearchIndexFile
C:\Users\willem\AppData\Local\Temp\ccMDvExh.s:3000   B_1:00000004 _recnr.3799
C:\Users\willem\AppData\Local\Temp\ccMDvExh.s:2907   P:000011fd _AddNewSearchkeyToIndex
                     .debug_frame:00000000 .Lframe0
                                P:00000000 .LFB0
                                P:00000015 .LFB1
                                P:0000003e .LFB2
                                P:0000010b .LFB3
                                P:00000183 .LFB4
                                P:000001bb .LFB5
                                P:00000203 .LFB6
                                P:00000235 .LFB7
                                P:0000027f .LFB8
                                P:00000309 .LFB9
                                P:00000343 .LFB10
                                P:00000393 .LFB11
                                P:000003e3 .LFB12
                                P:00000433 .LFB13
                                P:0000053f .LFB14
                                P:00000647 .LFB15
                                P:000007e3 .LFB16
                                P:0000095d .LFB17
                                P:00000b29 .LFB18
                                P:00000e9f .LFB19
                                P:00000f5b .LFB20
                                P:00000ff1 .LFB21
                                P:00001117 .LFB22
                                P:00001140 .LFB23
                                P:000011fd .LFB24
                    .debug_abbrev:00000000 .Ldebug_abbrev0
                       .debug_str:000002df .LASF75
                       .debug_str:000001a5 .LASF76
                       .debug_str:000002a7 .LASF77
                                P:00000000 .Ltext0
                                P:00001299 .Letext0
                      .debug_line:00000000 .Ldebug_line0
                       .debug_str:00000106 .LASF0
                       .debug_str:0000008d .LASF1
                       .debug_str:00000214 .LASF2
                       .debug_str:0000023c .LASF3
                       .debug_str:00000120 .LASF4
                       .debug_str:000000f9 .LASF5
                       .debug_str:0000007f .LASF6
                       .debug_str:0000002b .LASF7
                       .debug_str:000000c8 .LASF8
                       .debug_str:00000193 .LASF9
                       .debug_str:000002da .LASF10
                       .debug_str:0000024c .LASF11
                       .debug_str:00000230 .LASF12
                       .debug_str:000000db .LASF13
                       .debug_str:000001d4 .LASF14
                       .debug_str:00000356 .LASF78
                       .debug_str:00000315 .LASF79
                                P:00000015 .LFE0
                       .debug_loc:00000000 .LLST0
                       .debug_str:00000000 .LASF46
                                P:0000003e .LFE1
                       .debug_loc:00000038 .LLST1
                       .debug_str:0000039b .LASF15
                       .debug_str:0000027d .LASF18
                                P:0000010b .LFE2
                       .debug_loc:0000007c .LLST2
                       .debug_str:0000019c .LASF16
                       .debug_str:00000099 .LASF17
                       .debug_str:00000341 .LASF24
                       .debug_str:00000298 .LASF19
                                P:00000183 .LFE3
                       .debug_loc:000000b4 .LLST3
                       .debug_str:0000037f .LASF80
                                P:000001bb .LFE4
                       .debug_loc:000000ec .LLST4
                       .debug_str:0000036e .LASF20
                                P:00000203 .LFE5
                       .debug_loc:00000130 .LLST5
                       .debug_str:000001f6 .LASF21
                                P:00000235 .LFE6
                       .debug_loc:00000174 .LLST6
                       .debug_str:00000188 .LASF22
                                P:0000027f .LFE7
                       .debug_loc:000001b8 .LLST7
                       .debug_str:00000349 .LASF23
                       .debug_str:00000055 .LASF25
                       .debug_str:000001da .LASF26
                                P:00000309 .LFE8
                       .debug_loc:000001f0 .LLST8
                       .debug_str:000001cd .LASF27
                       .debug_str:00000222 .LASF28
                       .debug_str:000000e9 .LASF29
                                P:00000343 .LFE9
                       .debug_loc:00000228 .LLST9
                       .debug_str:00000259 .LASF30
                                P:00000393 .LFE10
                       .debug_loc:0000026c .LLST10
                       .debug_str:00000162 .LASF31
                       .debug_str:00000042 .LASF32
                                P:000003e3 .LFE11
                       .debug_loc:000002b0 .LLST11
                       .debug_str:000002f6 .LASF33
                                P:00000433 .LFE12
                       .debug_loc:000002f4 .LLST12
                       .debug_str:0000017b .LASF34
                                P:0000053f .LFE13
                       .debug_loc:00000338 .LLST13
                       .debug_str:0000001f .LASF35
                       .debug_str:00000013 .LASF36
                                P:00000647 .LFE14
                       .debug_loc:00000370 .LLST14
                       .debug_str:000000b2 .LASF37
                       .debug_str:0000028a .LASF38
                                P:000007e3 .LFE15
                       .debug_loc:000003a8 .LLST15
                       .debug_str:0000030e .LASF39
                       .debug_str:000000d1 .LASF40
                       .debug_str:00000246 .LASF41
                       .debug_str:0000033b .LASF42
                       .debug_str:0000013f .LASF43
                                P:000007d0 .L89
                       .debug_str:00000146 .LASF44
                                P:000007c6 .L91
                       .debug_str:0000006c .LASF45
                                P:000007bc .L94
                       .debug_str:00000305 .LASF47
                                P:0000095d .LFE16
                       .debug_loc:000003e0 .LLST16
                       .debug_str:00000133 .LASF48
                       .debug_str:00000067 .LASF49
                       .debug_str:00000075 .LASF50
                       .debug_str:0000007a .LASF51
                       .debug_str:00000227 .LASF52
                                P:00000b29 .LFE17
                       .debug_loc:0000041a .LLST17
                       .debug_str:00000253 .LASF53
                                P:00000b16 .L142
                                P:00000b0c .L144
                       .debug_str:0000014d .LASF54
                                P:00000b02 .L146
                                P:00000af8 .L149
                       .debug_str:00000273 .LASF55
                                P:00000e9f .LFE18
                       .debug_loc:00000454 .LLST18
                       .debug_str:00000206 .LASF56
                       .debug_str:0000020d .LASF57
                                P:00000e8c .L176
                                P:00000e82 .L178
                                P:00000e78 .L180
                       .debug_str:00000154 .LASF58
                                P:00000e6e .L184
                       .debug_str:0000015b .LASF59
                                P:00000e64 .L186
                                P:00000e5a .L188
                       .debug_str:000001b8 .LASF60
                                P:00000f5b .LFE19
                       .debug_loc:0000048e .LLST19
                       .debug_str:000001ec .LASF61
                       .debug_str:00000062 .LASF62
                       .debug_str:000001c5 .LASF63
                       .debug_str:0000038d .LASF64
                                P:00000ff1 .LFE20
                       .debug_loc:000004c8 .LLST20
                       .debug_str:000000b8 .LASF65
                                P:00001117 .LFE21
                       .debug_loc:00000500 .LLST21
                       .debug_str:00000118 .LASF66
                       .debug_str:0000016d .LASF67
                       .debug_str:0000000b .LASF68
                       .debug_str:000000a4 .LASF69
                                P:00001140 .LFE22
                       .debug_loc:00000538 .LLST22
                       .debug_str:0000035e .LASF70
                                P:000011fd .LFE23
                       .debug_loc:0000057c .LLST23
                       .debug_str:00000025 .LASF71
                       .debug_str:00000324 .LASF72
                                P:00001299 .LFE24
                       .debug_loc:000005b4 .LLST24
                       .debug_str:000003a2 .LASF73
                       .debug_str:00000268 .LASF74
                      .debug_info:00000000 .Ldebug_info0

UNDEFINED SYMBOLS
_fsize
_open
_close
_lseek
_read
_malloc
_free
_chsize
_write
_memcmp
_memmove
_remove
_memcpy
